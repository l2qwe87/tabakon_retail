
Процедура ПолучитьТаблицуОбеспечения(ТабДок, ПериодДляРасчетаПотребности, ОриентДатаДоставки, КоличествоДнейДляЗаказа, ФлажокП, УчитыватьПоследнийЗаказ = Ложь, ТаблицаЗаказов = Неопределено) Экспорт
	
	
	ТаблицаОбеспечения.Очистить();
	
	Если ЭтотОбъект.РасширеннаяВерсия тогда
		Если склад.Количество() = 1 и склад[0].Значение.этогруппа = ложь Тогда
			Макет = ПолучитьМакет("ПотребностьПоТоварамРасширенная1");
		Иначе
			Макет = ПолучитьМакет("ПотребностьПоТоварамРасширенная");
		КонецЕсли;
	иначе
		Макет = ПолучитьМакет("ПотребностьПоТоварам");
	КонецЕсли;
	
	ОбластьТоварШапка    = Макет.ПолучитьОбласть("Шапка|Номеклатура"); 
	ОбластьМагазинШапка  = Макет.ПолучитьОбласть("Шапка|Магазин");
	ОбластьТоварСтрока   = Макет.ПолучитьОбласть("Строка|Номеклатура");
	ОбластьМагазинСтрока = Макет.ПолучитьОбласть("Строка|Магазин");
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	Склады.Ссылка КАК Склад
	                      |ИЗ
	                      |	Справочник.Склады КАК Склады
	                      
	|ГДЕ
	|    {Склады.ВидСклада = ЗНАЧЕНИЕ(перечисление.ВидыСкладов.Розничный) И Склады.Ссылка В ИЕРАРХИИ(&Ссылка)} 
	|АВТОУПОРЯДОЧИВАНИЕ");
	
	Если ЗначениеЗаполнено(Склад) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{Склады.ВидСклада = ЗНАЧЕНИЕ(перечисление.ВидыСкладов.Розничный) И Склады.Ссылка В ИЕРАРХИИ(&Ссылка)}","Склады.Ссылка В ИЕРАРХИИ(&Ссылка)");
		Запрос.УстановитьПараметр("Ссылка",Склад); 
		ВсегоСкалдов = Склад.Количество();
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{Склады.ВидСклада = ЗНАЧЕНИЕ(перечисление.ВидыСкладов.Розничный) И Склады.Ссылка В ИЕРАРХИИ(&Ссылка)}","Склады.ВидСклада = ЗНАЧЕНИЕ(перечисление.ВидыСкладов.Розничный)");
		ВсегоСкалдов = 200;	
	КонецЕсли;
	
	РезультатСклады = Запрос.Выполнить().Выгрузить();
	МассивСкладов   = РезультатСклады.ВыгрузитьКолонку("Склад");
	ТабДок.Вывести(ОбластьТоварШапка);
	
	Для каждого Элемент из МассивСкладов цикл
		ОбластьМагазинШапка.Параметры.Магазин = Элемент;
		ТабДок.Присоединить(ОбластьМагазинШапка);
	КонецЦикла;
	
	
	// НЧАН	
	Форма=ЭтотОбъект.ПолучитьФорму("Форма");
	Прогресс = Форма.ЭлементыФормы.Индикатор;
	Форма.ЭлементыФормы.Индикатор.ОтображатьПроценты = Истина;

	Прогресс.Значение = 20;
	Прогресс.МаксимальноеЗначение = 100;

	ВыборкаНом = ОптимизированныйЗапрос(ПериодДляРасчетаПотребности, ФлажокП);
	Перемена = ВыборкаНом.Количество(); // * ВсегоСкалдов;
	
    
	Сч = Окр(Перемена*0.2, 0);
	Прогресс.Значение = Сч;
	Прогресс.МаксимальноеЗначение = Перемена + Сч;
	
	Пока ВыборкаНом.Следующий() Цикл
		
		Сч = Сч + 1;
		Если Сч % 10 Тогда
			 Прогресс.Значение = Сч;
		КонецЕсли;
				
		В = ВыборкаНом.Выбрать();
	    ОбластьТоварСтрока.Параметры.Номенклатура = ВыборкаНом.Номенклатура;    
		ТабДок.Вывести(ОбластьТоварСтрока);
		//ТестМассивСкладов = Новый Массив;
		
		Пока В.Следующий() Цикл
			
		//ТестМассивСкладов.Добавить(В.Склад);	
	
	
	//	КонецЦикла;
	//КонецЦикла;

	
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	Номенклатура.Ссылка КАК Номенклатура
	//                      |ИЗ
	//                      |	Справочник.Номенклатура КАК Номенклатура
	//                      |ГДЕ
	//                      |	НЕ Номенклатура.ЭтоГруппа
	//                      |	И НЕ Номенклатура.ПометкаУдаления
	//                      |	И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)
	//                      |	И Номенклатура.ОтветственныйМенеджерЗаПокупки = &Менеджер
	//					  |	И Номенклатура.ОсновнойПоставщик В ИЕРАРХИИ(&ОсновноыеПоставщики)
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	Номенклатура.Ссылка ИЕРАРХИЯ
	//                      |АВТОУПОРЯДОЧИВАНИЕ");
	//					  
	//Запрос.УстановитьПараметр("Ссылка",Номенклатура);
	//Запрос.УстановитьПараметр("Менеджер",Менеджер);
	//Запрос.УстановитьПараметр("ОсновноыеПоставщики",ОсновноыеПоставщики);
	//
	//Если НЕ ЗначениеЗаполнено(Номенклатура) тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)","");
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(Менеджер) тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.ОтветственныйМенеджерЗаПокупки = &Менеджер","");
	//КонецЕсли;
	//
	//Если НЕ ЗначениеЗаполнено(ОсновноыеПоставщики) тогда
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.ОсновнойПоставщик В ИЕРАРХИИ(&ОсновноыеПоставщики)","");
	//КонецЕсли;

	//РезультатТовары = Запрос.Выполнить().Выбрать() ;
	//Перемена=0;
	//Форма=ЭтотОбъект.ПолучитьФорму("Форма");
	//Прогресс = Форма.ЭлементыФормы.Индикатор;
	//Форма.ЭлементыФормы.Индикатор.ОтображатьПроценты=Истина;
	//Пока РезультатТовары.Следующий() цикл 
	//	 Перемена=Перемена+1;
	//КонецЦикла;
	//Прогресс.МаксимальноеЗначение = Перемена;
	//Прогресс.Значение=0;
	//РезультатТовары = Запрос.Выполнить().Выбрать() ;
	//Пока РезультатТовары.Следующий() цикл
	//	Прогресс.Значение = Прогресс.Значение + 1;
	//	//ОбработкаПрерыванияПользователя();
		//ОбластьТоварСтрока.Параметры.Номенклатура = РезультатТовары.Номенклатура;
		//ТабДок.Вывести(ОбластьТоварСтрока);

		//
	//	Для каждого СтрокаСклад  из РезультатСклады цикл;
			
			//Если СтрокаСклад.Склад.ВидСклада = Перечисления.ВидыСкладов.Розничный Тогда
			//	Запрос = новый Запрос ("ВЫБРАТЬ
			//	|	ТоварыВРозницеОстатки.Склад КАК Склад,
			//	|	ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) КАК Остаток,
			//	|	ТоварыВРозницеОстатки.Номенклатура КАК Номенклатура
			//	|ИЗ
			//	|	РегистрНакопления.ТоварыВРознице.Остатки(
			//	|			&КонецПериода,
			//	|			Склад = &Склад
			//	|				И Номенклатура = &Номенклатура) КАК ТоварыВРозницеОстатки");
			//ИначеЕсли СтрокаСклад.Склад.ВидСклада = Перечисления.ВидыСкладов.Оптовый Тогда
			//	Запрос = новый Запрос ("ВЫБРАТЬ
			//	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
			//	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК Остаток,
			//	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
			//	|ИЗ
			//	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
			//	|			&КонецПериода,
			//	|			Склад = &Склад
			//	|				И Номенклатура = &Номенклатура) КАК ТоварыНаСкладахОстатки");
			//КонецЕсли;
			//				   
			//
			//Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
			//Запрос.УстановитьПараметр("Склад",СтрокаСклад.склад);
			//Запрос.УстановитьПараметр("Номенклатура",РезультатТовары.Номенклатура);
			//
			//
			//РезультатОстаток = Запрос.Выполнить().Выбрать();
			//КоличестоКонечныйОстаток = 0;
			//Если  РезультатОстаток.Следующий() тогда
			//	Если   РезультатОстаток.Остаток>0 тогда
			//		КоличестоКонечныйОстаток = РезультатОстаток.Остаток;
			//	КонецЕсли;
			//КонецЕсли;
			КоличестоКонечныйОстаток = В.КоличестоКонечныйОстаток;  // НЧАН

			//Запрос = новый Запрос("ВЫБРАТЬ
			//|	ПродажиОбороты.КоличествоОборот
			//|ИЗ
			//|	РегистрНакопления.Продажи.Обороты(
			//|			&НачалоПериода,
			//|			&КонецПериода,
			//|			,
			//|			Номенклатура = &Номенклатура
			//|				И ДокументПродажи ССЫЛКА Документ.ОтчетОРозничныхПродажах
			//|				И ДокументПродажи.Склад = &Склад) КАК ПродажиОбороты");
			//
			//Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
			//Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
			//Запрос.УстановитьПараметр("Номенклатура",РезультатТовары.Номенклатура);
			//Запрос.УстановитьПараметр("Склад",СтрокаСклад.Склад);
			//
			КоличествоПродаж = В.Продажи;  // НЧАН
			//
			//РезультатПродажи = Запрос.Выполнить().Выбрать();
			//Если РезультатПродажи.Следующий() тогда
			//	КоличествоПродаж = РезультатПродажи.КоличествоОборот;
			//КонецЕсли;
			//=====ЛК==Андрей=== 
			//МинОст=ЛК_РаботаСДокументами.минимальныйОстаток(РезультатТовары.Номенклатура, СтрокаСклад.Склад);
			//=========
			МинОст = ?(В.МинОстаток = NULL, 0, В.МинОстаток);     // НЧАН

			Если (КоличествоПродаж = 0 ИЛИ КоличествоПродаж = Null) И КоличестоКонечныйОстаток<МинОст Тогда  // НЧАН

			//Если КоличествоПродаж = 0 И КоличестоКонечныйОстаток<МинОст Тогда
				
				НоваяСтрока = ТаблицаОбеспечения.Добавить();
				НоваяСтрока.Номенклатура = ВыборкаНом.Номенклатура;// РезультатТовары.Номенклатура;  // НЧАН
				НоваяСтрока.Склад        =   В.Склад; // ;СтрокаСклад.Склад;  // НЧАН
				НоваяСтрока.Потребность  = - КоличестоКонечныйОстаток;
				НоваяСтрока.Остаток  = КоличестоКонечныйОстаток;
				НоваяСтрока.МинимальныйОстаток  = МинОст;				
				ОбластьМагазинСтрока.Параметры.Количество = НоваяСтрока.Потребность;
				ОбластьМагазинСтрока.Параметры.КоличествоОстаток = КоличестоКонечныйОстаток;
				//ОбластьМагазинСтрока.Параметры.МинОст = ЛК_РаботаСДокументами.минимальныйОстаток(РезультатТовары.Номенклатура, СтрокаСклад.Склад);
				
				//Вик 2020_09_30
				Если УчитыватьПоследнийЗаказ тогда
					ОтборСклад = Новый Структура;
					ОтборСклад.Вставить("ДляКого",В.Склад);
					Массив	=	ТаблицаЗаказов.НайтиСтроки(ОтборСклад);
					
					Если Массив.Количество()>0 тогда
						ПоследнийЗаказ	=	Массив[0].ЗаказПоставщику;
					иначе
						ПоследнийЗаказ = Неопределено;						
					КонецЕсли;
					
					Если ПоследнийЗаказ <> Неопределено тогда
						Отбор = Новый Структура;
						Отбор.Вставить("Номенклатура",НоваяСтрока.Номенклатура);
						СтрокиЗаказа =	ПоследнийЗаказ.Товары.НайтиСтроки(Отбор);
						КолВЗаказе = 0;
						Для каждого СтрокаЗаказа из СтрокиЗаказа цикл
							КолВЗаказе	=	КолВЗаказе + СтрокаЗаказа.Количество *  СтрокаЗаказа.Коэффициент;
						КонецЦикла;
						НоваяСтрока.Потребность = Макс(0,НоваяСтрока.Потребность - КолВЗаказе);
					КонецЕсли;
				КонецЕсли;
				//КонецВик
				
				если ЭтотОбъект.РасширеннаяВерсия Тогда
					ОбластьМагазинСтрока.Параметры.КолПродаж = 0;
					ОбластьМагазинСтрока.Параметры.КолДнейХранения = 0;
					ОбластьМагазинСтрока.Параметры.МинОст = МинОст;
					ОбластьМагазинСтрока.Параметры.КолЗаказ 	   = КолВЗаказе;//Вик 2020_09_30
				КонецЕсли;
				
				ОблОформления = ТабДок.Присоединить(ОбластьМагазинСтрока);
				Если НоваяСтрока.Потребность < 0 тогда
					ТабДок.Область(ОблОформления.Верх,ОблОформления.Лево,ОблОформления.Низ,ОблОформления.Право).ЦветФона = WebЦвета.СветлоРозовый;
				КонецЕсли;
				
				
				Продолжить;
				//=====ЛК==Андрей=== 	
			Иначе
				если ЭтотОбъект.РасширеннаяВерсия Тогда
					ОбластьМагазинСтрока.Параметры.МинОст = МинОст;
				КонецЕсли;
				//=================	
			КонецЕсли;
			
			
			НачалоОтсчета          = НачалоПериода; 
					
			КоличествоДнейХранения = 0;
			
		// НЧАН	
			//КоличествоДнейХранения = Запрос.Выполнить().Выгрузить().Итог("День");
			//ПП = ДнейПродажиПоПериодуПотребности(РезультатТовары.Номенклатура, СтрокаСклад.Склад, 1234567890 , Ложь);
			КоличествоДнейХранения = В.ЕстьНаСкладе;
			//ПродажиЗаВесьПериод = ПП[1];
		// КЧАН	
						
			ПериодЗапаса = (НачалоДня(КонецПериода) - НачалоДня(НачалоПериода))/(24*60*60);
			
			НоваяСтрока = ТаблицаОбеспечения.Добавить();
			НоваяСтрока.Номенклатура =  ВыборкаНом.Номенклатура;
			НоваяСтрока.Склад        =  В.Склад;
			НоваяСтрока.КоличествоДнейХранения = КоличествоДнейХранения;
			
		// НЧАН	(-)
			//Если КоличествоДнейХранения <> 0 тогда
			//	НоваяСтрока.Потребность  =  (КоличествоПродаж/КоличествоДнейХранения)*ПериодЗапаса - КоличестоКонечныйОстаток; 
			//Иначе
			//	НоваяСтрока.Потребность  =  (КоличествоПродаж/1)*ПериодЗапаса - КоличестоКонечныйОстаток; 
			//КонецЕсли;
		// КЧАН
		
		// НЧАН
			НоваяСтрока.Остаток  = КоличестоКонечныйОстаток;
			НоваяСтрока.МинимальныйОстаток  = МинОст;
		
			пКоэффициент = КоличествоДнейДляЗаказа + (ОриентДатаДоставки - ТекущаяДата())/(24*60*60) ;
		
			//Если ФлажокП Тогда
			//	ПП = ДнейПродажиПоПериодуПотребности(РезультатТовары.Номенклатура, СтрокаСклад.Склад, ПериодДляРасчетаПотребности, ФлажокП);
			//КонецЕсли;	
				
			пДоступенДляПродажи = ?(В.ЕстьНаСкладе = Null, 0, В.ЕстьНаСкладе);    // Сколько дней был доступен
			пКоличествоПродаж = В.ПродажиРасчПот ; //ПП[1]; 
				
			   
			Если пДоступенДляПродажи <> 0 И КоличествоПродаж <> Null Тогда
	//			НоваяСтрока.Потребность  = 	(пКоличествоПродаж / пДоступенДляПродажи) * пКоэффициент;
				НоваяСтрока.Потребность  = 	(КоличествоПродаж / пДоступенДляПродажи) * пКоэффициент;
				
				НоваяСтрока.КолПродаж  = 	пКоличествоПродаж;
				
				//Вик 2020_09_30
				Если УчитыватьПоследнийЗаказ тогда
					ОтборСклад = Новый Структура;
					ОтборСклад.Вставить("ДляКого",В.Склад);
					Массив	=	ТаблицаЗаказов.НайтиСтроки(ОтборСклад);
					
					Если Массив.Количество()>0 тогда
						ПоследнийЗаказ	=	Массив[0].ЗаказПоставщику;
					иначе
						ПоследнийЗаказ = Неопределено;						
					КонецЕсли;

					Если ПоследнийЗаказ <> Неопределено тогда
						Отбор = Новый Структура;
						Отбор.Вставить("Номенклатура",НоваяСтрока.Номенклатура);
						СтрокиЗаказа =	ПоследнийЗаказ.Товары.НайтиСтроки(Отбор);
						КолВЗаказе = 0;
						Для каждого СтрокаЗаказа из СтрокиЗаказа цикл
							КолВЗаказе	=	КолВЗаказе + СтрокаЗаказа.Количество	*  СтрокаЗаказа.Коэффициент;
						КонецЦикла;
						НоваяСтрока.Потребность = Макс(0,НоваяСтрока.Потребность - КолВЗаказе);
					КонецЕсли;
				КонецЕсли;
				//КонецВик
			КонецЕсли;	
			
		// КЧАН
		
			ОбластьМагазинСтрока.Параметры.Количество = НоваяСтрока.Потребность ;
			ОбластьМагазинСтрока.Параметры.КоличествоОстаток = КоличестоКонечныйОстаток;
			//ОбластьМагазинСтрока.Параметры.МинОст = ЛК_РаботаСДокументами.минимальныйОстаток(РезультатТовары.Номенклатура, СтрокаСклад.Склад);
			
			если ЭтотОбъект.РасширеннаяВерсия Тогда
				ОбластьМагазинСтрока.Параметры.КолПродаж = "" + КоличествоПродаж + ?(ФлажокП = Истина, " (" + пКоличествоПродаж + ")" , "");
				ОбластьМагазинСтрока.Параметры.КолДнейХранения = КоличествоДнейХранения;
				ОбластьМагазинСтрока.Параметры.КолЗаказ 	   = КолВЗаказе;//Вик 2020_09_30
				//ОбластьМагазинСтрока.Параметры.МинОст = ЛК_РаботаСДокументами.минимальныйОстаток(РезультатТовары.Номенклатура, СтрокаСклад.Склад);
			КонецЕсли;	
			
			ОблОформления = ТабДок.Присоединить(ОбластьМагазинСтрока);
			Если НоваяСтрока.Потребность < 0 тогда
				ТабДок.Область(ОблОформления.Верх,ОблОформления.Лево,ОблОформления.Низ,ОблОформления.Право).ЦветФона = WebЦвета.СветлоРозовый;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры


Процедура ПолучитьТаблицуОбеспеченияВРазрезеГруппАналагов(ТабДок) Экспорт
	
	
	ТаблицаОбеспечения.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	
	ОбластьШапки  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьГруппы = Макет.ПолучитьОбласть("ГруппаНом");
	ОбластьАналог = Макет.ПолучитьОбласть("ГруппаАналога");
	
	Запрос = новый Запрос("ВЫБРАТЬ
	|	Номенклатура.Родитель КАК Родитель,
	|	Номенклатура.ГруппаАналогов КАК ГруппаАналогов,
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	НЕ Номенклатура.ЭтоГруппа
	|	{И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)}
	|	{И Номенклатура.ГруппаАналогов В(&ГруппаАналогов)}
	|ИТОГИ ПО
	|	Родитель,
	|	ГруппаАналогов");
	
	
	Если ЗначениеЗаполнено(НоменклатураАналоги) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)}","И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)");	  
		Запрос.УстановитьПараметр("Ссылка",НоменклатураАналоги);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)}","");
	КонецЕсли;
	Если ЗначениеЗаполнено(ГруппаАналогов) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{И Номенклатура.ГруппаАналогов В(&ГруппаАналогов)}","И Номенклатура.ГруппаАналогов В(&ГруппаАналогов)");	  
		Запрос.УстановитьПараметр("ГруппаАналогов",ГруппаАналогов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"{И Номенклатура.ГруппаАналогов В(&ГруппаАналогов)}","");
	КонецЕсли;
	
	РезультатНомГруппа = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	
	
	ТаблицаАналоги = новый ТаблицаЗначений;
	ТаблицаАналоги.Колонки.Добавить("Уровень");
	ТаблицаАналоги.Колонки.Добавить("Наименование");
	ТаблицаАналоги.Колонки.Добавить("Ед");
	ТаблицаАналоги.Колонки.Добавить("ДнейПродажи");
	ТаблицаАналоги.Колонки.Добавить("СредняяПродажа");
	ТаблицаАналоги.Колонки.Добавить("Остаток");
	ТаблицаАналоги.Колонки.Добавить("Объем");     
	ТаблицаАналоги.Колонки.Добавить("Продано");
	
	Пока РезультатНомГруппа.Следующий() цикл
		
		ИтогоПроданоГруппа        = 0;
		ИтогоОстатокГруппа        = 0;
		ИтогоДнейПродажиГруппа    = 0;
		ИтогоСредняяПродажаГруппа = 0;
		ИтогоОбъемГруппа          = 0;
		КоличествоСтрокГруппа     = 0;
		
		
		НоваяСтрТА              = ТаблицаАналоги.Добавить();
		НоваяСтрТА.Уровень      = 0;
		НоваяСтрТА.Наименование = РезультатНомГруппа.Родитель.Наименование;
		
		
		
		РезультатНомАналог  =  РезультатНомГруппа.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока РезультатНомАналог.Следующий() цикл
			
			НоваяСтрТА              = ТаблицаАналоги.Добавить();
			НоваяСтрТА.Уровень      = 1;
			НоваяСтрТА.Наименование = РезультатНомАналог.ГруппаАналогов.Наименование;
			КоличествоСтрокГруппа   = КоличествоСтрокГруппа + 1;
			
			ИтогоПроданоАналог        = 0;
			ИтогоОстатокАналог        = 0;
			ИтогоДнейПродажиАналог    = 0;
			ИтогоСредняяПродажаАналог = 0;
			ИтогоОбъемАналог          = 0;
			КоличествоСтрокАналог     = 0;
			
			
			
			
			РезультатНом = РезультатНомАналог.Выбрать();
			
			Пока РезультатНом.Следующий() цикл
				
				НоваяСтрТА              = ТаблицаАналоги.Добавить();
				НоваяСтрТА.Уровень      = 2;
				НоваяСтрТА.Наименование = РезультатНом.Ссылка.Наименование;
				НоваяСтрТА.Ед           = РезультатНом.Ссылка.ЕдиницаХраненияОстатков;
				КоличествоСтрокАналог   = КоличествоСтрокАналог + 1;
				
				Запрос = новый Запрос ("ВЫБРАТЬ
				|	ПартииТоваровНаСкладахОстатки.Склад КАК Склад,
				|	ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) КАК Остаток,
				|	ПартииТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура
				|ИЗ
				|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
				|			&КонецПериода,
				|			Склад = &Склад
				|				И Номенклатура = &Номенклатура) КАК ПартииТоваровНаСкладахОстатки");
				
				Запрос.УстановитьПараметр("КонецПериода",КонецДня(КонецПериода));
				Запрос.УстановитьПараметр("Склад",СкладАналоги);
				Запрос.УстановитьПараметр("Номенклатура",РезультатНом.Ссылка);
				
				
				РезультатОстаток = Запрос.Выполнить().Выбрать();
				КоличестоКонечныйОстаток = 0;
				Если  РезультатОстаток.Следующий() тогда
					Если   РезультатОстаток.Остаток>0 тогда
						КоличестоКонечныйОстаток = РезультатОстаток.Остаток;
					КонецЕсли;
				КонецЕсли;
				
				ИтогоОстатокАналог = ИтогоОстатокАналог + КоличестоКонечныйОстаток;
				НоваяСтрТА.Остаток = КоличестоКонечныйОстаток;
				
				Запрос = новый Запрос("ВЫБРАТЬ
				|	ПродажиОбороты.КоличествоОборот
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериода,
				|			&КонецПериода,
				|			,
				|			Номенклатура = &Номенклатура
				|				И ДокументПродажи ССЫЛКА Документ.ОтчетОРозничныхПродажах
				|				И ДокументПродажи.Склад = &Склад) КАК ПродажиОбороты");
				
				Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
				Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
				Запрос.УстановитьПараметр("Номенклатура",РезультатНом.Ссылка);
				Запрос.УстановитьПараметр("Склад",СкладАналоги);
				
				КоличествоПродаж = 0;
				
				РезультатПродажи = Запрос.Выполнить().Выбрать();
				Если РезультатПродажи.Следующий() тогда
					КоличествоПродаж = РезультатПродажи.КоличествоОборот;
				КонецЕсли;
				
				ИтогоПроданоАналог = ИтогоПроданоАналог+ КоличествоПродаж;
				НоваяСтрТА.Продано = КоличествоПродаж;
				Если КоличествоПродаж = 0 тогда
					
					НоваяСтрока = ТаблицаОбеспечения.Добавить();
					НоваяСтрока.Номенклатура =  РезультатНом.Ссылка;
					НоваяСтрока.Склад        =  СкладАналоги;
					
					НоваяСтрока.Потребность  = - КоличестоКонечныйОстаток; 
					
					НоваяСтрТА.Объем         = 0;
					
					
					
				КонецЕсли;
				
				
				НачалоОтсчета          = НачалоПериода; 
				КоличествоДнейХранения = 0;
				
				Запрос = новый Запрос("ВЫБРАТЬ
				|	t.Дата
				|ПОМЕСТИТЬ ТаблицаДата
				|ИЗ
				|	(ВЫБРАТЬ
				|		ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d) КАК Дата
				|	{ВЫБРАТЬ
				|		Дата}
				|	ИЗ
				|		(ВЫБРАТЬ
				|			0 КАК a
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			1
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			2
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			3
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			4
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			5
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			6
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			7
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			8
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			9) КАК aa
				|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				0 КАК b
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				1
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				2
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				3
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				4
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				5
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				6
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				7
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				8
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				9) КАК bb
				|			ПО (ИСТИНА)
				|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				0 КАК c
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				1
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				2
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				3
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				4
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				5
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				6
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				7
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				8
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				9) КАК cc
				|			ПО (ИСТИНА)
				|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|				0 КАК d
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				1
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				2
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				3
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				4
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				5
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				6
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				7
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				8
				|			
				|			ОБЪЕДИНИТЬ
				|			
				|			ВЫБРАТЬ
				|				9) КАК dd
				|			ПО (ИСТИНА)
				|	ГДЕ
				|		aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)) КАК t
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаДата.Дата КАК Дата,
				|	ЕСТЬNULL(ПартииТоваровНаСкладахОстаткиИОбороты.Номенклатура, &Номенклатура) КАК Номенклатура,
				|	СУММА(ВЫБОР
				|			КОГДА ПартииТоваровНаСкладахОстаткиИОбороты.Период = &НачалоПериода
				|				ТОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток, 0)
				|			ИНАЧЕ ВЫБОР
				|					КОГДА ПартииТоваровНаСкладахОстаткиИОбороты.Период <= ТаблицаДата.Дата
				|						ТОГДА ПартииТоваровНаСкладахОстаткиИОбороты.КоличествоОборот
				|					ИНАЧЕ 0
				|				КОНЕЦ
				|		КОНЕЦ) КАК Остаток,
				|	СУММА(ВЫБОР
				|			КОГДА ВЫБОР
				|					КОГДА ПартииТоваровНаСкладахОстаткиИОбороты.Период = &НачалоПериода
				|						ТОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток, 0)
				|					ИНАЧЕ ВЫБОР
				|							КОГДА ПартииТоваровНаСкладахОстаткиИОбороты.Период <= ТаблицаДата.Дата
				|								ТОГДА ПартииТоваровНаСкладахОстаткиИОбороты.КоличествоОборот
				|							ИНАЧЕ 0
				|						КОНЕЦ
				|				КОНЕЦ > 0
				|				ТОГДА 1
				|			ИНАЧЕ 0
				|		КОНЕЦ) КАК День
				|ИЗ
				|	ТаблицаДата КАК ТаблицаДата
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.ОстаткиИОбороты(
				|				&НачалоПериода,
				|				&КонецПериода,
				|				День,
				|				,
				|				Номенклатура = &Номенклатура
				|					И Склад = &Склад) КАК ПартииТоваровНаСкладахОстаткиИОбороты
				|		ПО ТаблицаДата.Дата >= ПартииТоваровНаСкладахОстаткиИОбороты.Период
				|
				|СГРУППИРОВАТЬ ПО
				|	ЕСТЬNULL(ПартииТоваровНаСкладахОстаткиИОбороты.Номенклатура, &Номенклатура),
				|	ТаблицаДата.Дата");
				
				Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
				Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
				Запрос.УстановитьПараметр("Номенклатура",РезультатНом.Ссылка);
				Запрос.УстановитьПараметр("Склад",СкладАналоги);
				
				КоличествоДнейХранения = 0;
				
				КоличествоДнейХранения = Запрос.Выполнить().Выгрузить().Итог("День");
				
				
				ИтогоДнейПродажиАналог = ИтогоДнейПродажиАналог + КоличествоДнейХранения;
				НоваяСтрТА.ДнейПродажи = КоличествоДнейХранения;
				
				ПериодЗапаса = (НачалоДня(КонецПериода) - НачалоДня(НачалоПериода))/(24*60*60);
				
				НоваяСтрока = ТаблицаОбеспечения.Добавить();
				НоваяСтрока.Номенклатура = РезультатНом.Ссылка;
				НоваяСтрока.Склад        = СкладАналоги;
				Если КоличествоДнейХранения <> 0 тогда
					
					ИтогоСредняяПродажаАналог = ИтогоСредняяПродажаАналог  +   Окр(КоличествоПродаж/КоличествоДнейХранения,2);
					НоваяСтрока.Потребность   =  (КоличествоПродаж/КоличествоДнейХранения)*ПериодЗапаса - КоличестоКонечныйОстаток; 
					НоваяСтрТА.Объем = (КоличествоПродаж/КоличествоДнейХранения)*ПериодЗапаса - КоличестоКонечныйОстаток; 
					НоваяСтрТА.СредняяПродажа = КоличествоПродаж/КоличествоДнейХранения;
					ИтогоОбъемАналог          = ИтогоОбъемАналог + НоваяСтрТА.Объем;
					
				Иначе
					ИтогоСредняяПродажаАналог = ИтогоСредняяПродажаАналог + 0;
					НоваяСтрока.Потребность  =  (КоличествоПродаж/1)*ПериодЗапаса - КоличестоКонечныйОстаток;
					НоваяСтрТА.Объем = (КоличествоПродаж/1)*ПериодЗапаса - КоличестоКонечныйОстаток;
					НоваяСтрТА.СредняяПродажа = 0;
				КонецЕсли;
			КонецЦикла;	
			
			СтруктураПоиска = новый Структура;
			СтруктураПоиска.Вставить("Наименование",РезультатНомАналог.ГруппаАналогов.Наименование);
			СтруктураПоиска.Вставить("Уровень",1);
			СтрокаАналога = ТаблицаАналоги.НайтиСтроки(СтруктураПоиска);
			Если СтрокаАналога.Количество()>0 тогда
				СтрокаАналога[0].ДнейПродажи    = Окр(ИтогоДнейПродажиАналог/КоличествоСтрокАналог,2);
				СтрокаАналога[0].СредняяПродажа = Окр(ИтогоСредняяПродажаАналог/КоличествоСтрокАналог,2);
				СтрокаАналога[0].Остаток        = ИтогоОстатокАналог;
				СтрокаАналога[0].Объем          = Окр(ИтогоОбъемАналог/КоличествоСтрокАналог,2);
				СтрокаАналога[0].Продано        = ИтогоПроданоАналог;
			КонецЕсли;
			
			ИтогоПроданоГруппа        = ИтогоПроданоГруппа + ИтогоПроданоАналог;
			ИтогоОстатокГруппа        = ИтогоОстатокГруппа + ИтогоОстатокАналог;
			ИтогоДнейПродажиГруппа    = ИтогоДнейПродажиГруппа + Окр(ИтогоДнейПродажиАналог/КоличествоСтрокАналог,2);
			ИтогоСредняяПродажаГруппа = ИтогоСредняяПродажаГруппа + Окр(ИтогоСредняяПродажаАналог/КоличествоСтрокАналог,2);;
			ИтогоОбъемГруппа 		  = ИтогоОбъемГруппа + Окр(ИтогоОбъемАналог/КоличествоСтрокАналог,2);;	
		КонецЦикла;
		СтруктураПоиска = новый Структура;
		СтруктураПоиска.Вставить("Наименование",РезультатНомГруппа.Родитель.Наименование);
		СтруктураПоиска.Вставить("Уровень",0);
		СтрокаГруппы = ТаблицаАналоги.НайтиСтроки(СтруктураПоиска);
		Если СтрокаГруппы.Количество()>0 тогда
			СтрокаГруппы[0].ДнейПродажи    = Окр(ИтогоДнейПродажиГруппа/КоличествоСтрокГруппа,2);
			СтрокаГруппы[0].СредняяПродажа = Окр(ИтогоСредняяПродажаГруппа/КоличествоСтрокГруппа,2);
			СтрокаГруппы[0].Остаток        = ИтогоОстатокГруппа;
			СтрокаГруппы[0].Объем          = Окр(ИтогоОбъемГруппа/КоличествоСтрокГруппа,2);
			СтрокаГруппы[0].Продано        = ИтогоПроданоГруппа;
		КонецЕсли;
		
		
		
	КонецЦикла;
	
	ОбластьШапки.Параметры.дата = КонецПериода;
	ТабДок.Вывести(ОбластьШапки);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	Для каждого Строка из ТаблицаАналоги цикл
		
		Если Строка.уровень = 0 тогда
			
			
			ОбластьГруппы.Параметры.Заполнить(Строка);
			ТабДок.Вывести(ОбластьГруппы,Строка.Уровень)
			
		ИначеЕсли  Строка.уровень = 1  тогда
			ОбластьАналог.Параметры.Заполнить(Строка);
			ТабДок.Вывести(ОбластьАналог,Строка.Уровень)
			
		Иначе
			ОбластьСтроки.Параметры.Заполнить(Строка);
			ТабДок.Вывести(ОбластьСтроки,Строка.Уровень)
			
		КонецЕсли;
		
		
		
	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

// НЧАН
Функция ДнейПродажиПоПериодуПотребности(Номенклатура, Склад, ПериодДляРасчетаПотребности, ФлажокП)
	
	ДатаНачалаРасчета = ?(ФлажокП = Истина, КонецПериода - ПериодДляРасчетаПотребности * 60*60*24, НачалоПериода );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&ДатаНач, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d), ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	(ВЫБРАТЬ
		|		0 КАК a
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		1
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		2
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		3
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		4
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		5
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		6
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		7
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		8
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		9) КАК aa
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК b
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК bb
		|		ПО (ИСТИНА)
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК c
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК cc
		|		ПО (ИСТИНА)
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК d
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК dd
		|		ПО (ИСТИНА)
		|ГДЕ
		|	aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&ДатаНач, &ДатаКон, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Период,
		|	ТоварыВРозницеОстаткиИОбороты.Период КАК Период1,
		|	ТоварыВРозницеОстаткиИОбороты.Номенклатура
		|ПОМЕСТИТЬ ВТ2
		|ИЗ
		|	ВТ КАК ВТ,
		|	РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Регистратор,
		|			,
		|			Номенклатура В ИЕРАРХИИ (&Номенклатура)
		|				И Склад = &Склад) КАК ТоварыВРозницеОстаткиИОбороты
		|ГДЕ
		|	НЕ ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПереоценкаТоваровВРознице
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ2.Номенклатура,
		|	ВТ2.Период,
		|	МАКСИМУМ(ВТ2.Период1) КАК Период1
		|ПОМЕСТИТЬ ВТ3
		|ИЗ
		|	ВТ2 КАК ВТ2
		|ГДЕ
		|	ВТ2.Период > ВТ2.Период1
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ2.Период,
		|	ВТ2.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ3.Период,
		|	ВТ3.Период1 КАК Период1,
		|	ВЫБОР
		|		КОГДА ТоварыВРозницеОстаткиИОбороты1.КоличествоКонечныйОстаток > 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЕстьНаСкладе,
		|	ТоварыВРозницеОстаткиИОбороты.Номенклатура,
		|	ТоварыВРозницеОстаткиИОбороты.КоличествоРасход КАК Продажи,
		|	ТоварыВРозницеОстаткиИОбороты1.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ВТ4
		|ИЗ
		|	ВТ3 КАК ВТ3
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|				&ДатаНач,
		|				&ДатаКон,
		|				Период,
		|				,
		|				Номенклатура В ИЕРАРХИИ (&Номенклатура)
		|					И Склад = &Склад) КАК ТоварыВРозницеОстаткиИОбороты
		|		ПО ВТ3.Номенклатура = ТоварыВРозницеОстаткиИОбороты.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|				&ДатаНач,
		|				&ДатаКон,
		|				Регистратор,
		|				,
		|				Номенклатура В ИЕРАРХИИ (&Номенклатура)
		|					И Склад = &Склад) КАК ТоварыВРозницеОстаткиИОбороты1
		|		ПО ВТ3.Период1 = ТоварыВРозницеОстаткиИОбороты1.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ4.Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ4.Период1) КАК Период1,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ4.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	МАКСИМУМ(ВТ4.ЕстьНаСкладе) КАК ЕстьНаСкладе,
		|	ВТ4.Номенклатура,
		|	СРЕДНЕЕ(ВТ4.Продажи) КАК Продажи
		|ПОМЕСТИТЬ ВТ5
		|ИЗ
		|	ВТ4 КАК ВТ4
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ4.Период,
		|	ВТ4.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ5.Номенклатура,
		|	СУММА(ВТ5.ЕстьНаСкладе) КАК ЕстьНаСкладе,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ5.Период) КАК Период,
		|	ВТ5.Продажи
		|ИЗ
		|	ВТ5 КАК ВТ5
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ5.Номенклатура,
		|	ВТ5.Продажи";
	
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ДатаНач", ДатаНачалаРасчета);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();

	ДоступенДляПродажи = 0;
	КоличествоПродаж = 0;
	
	Если РезультатЗапроса.Следующий() Тогда
		ДоступенДляПродажи = РезультатЗапроса.ЕстьНаСкладе;			
		КоличествоПродаж = РезультатЗапроса.Продажи;
	КонецЕсли;	
	
	М = НОвый Массив;
	М.Добавить(ДоступенДляПродажи);
	М.Добавить(КоличествоПродаж);
	
	Возврат М
	
КонецФункции
// КЧАН

// НЧАН
Функция ОптимизированныйЗапрос(ПериодДляРасчетаПотребности, ФлажокП)
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ Ном
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа
		|	И НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.Ссылка В ИЕРАРХИИ(&СписокНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Склады.Ссылка КАК Склад
		|ПОМЕСТИТЬ Склады
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	ИСТИНА
		|	И Склады.Ссылка В(&СсылкаСклады)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ном.Номенклатура КАК Номенклатура,
		|	Склады.Склад КАК Склад
		|ПОМЕСТИТЬ НомСкл
		|ИЗ
		|	Ном КАК Ном,
		|	Склады КАК Склады
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(МинимальныйОстаток.МинОстаток) КАК МинОстаток,
		|	МинимальныйОстаток.Склад,
		|	МинимальныйОстаток.Номенклатура
		|ПОМЕСТИТЬ МинОст
		|ИЗ
		|	РегистрСведений.МинимальныйОстаток КАК МинимальныйОстаток
		|ГДЕ
		|	МинимальныйОстаток.Склад В
		|			(ВЫБРАТЬ
		|				Склады.Склад
		|			ИЗ
		|				Склады КАК Склады)
		|	И МинимальныйОстаток.Номенклатура В
		|			(ВЫБРАТЬ
		|				Ном.Номенклатура
		|			ИЗ
		|				Ном КАК Ном)
		|
		|СГРУППИРОВАТЬ ПО
		|	МинимальныйОстаток.Склад,
		|	МинимальныйОстаток.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НомСкл.Склад,
		|	НомСкл.Номенклатура,
		|	ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) КАК КоличестоКонечныйОстаток,
		|	СУММА(ПродажиОбороты.КоличествоОборот) КАК КоличествоОборот,
		|	МинОст.МинОстаток
		|ПОМЕСТИТЬ НомСклИтог
		|ИЗ
		|	НомСкл КАК НомСкл
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.Остатки(
		|				&КонецПериода,
		|				Склад В
		|						(ВЫБРАТЬ
		|							Склады.Склад
		|						ИЗ
		|							Склады КАК Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Ном.Номенклатура
		|						ИЗ
		|							Ном КАК Ном)) КАК ТоварыВРозницеОстатки
		|		ПО НомСкл.Номенклатура = ТоварыВРозницеОстатки.Номенклатура
		|			И НомСкл.Склад = ТоварыВРозницеОстатки.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				,
		|				ДокументПродажи ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|					И ДокументПродажи.Склад В
		|						(ВЫБРАТЬ
		|							Склады.Склад
		|						ИЗ
		|							Склады КАК Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Ном.Номенклатура
		|						ИЗ
		|							Ном КАК Ном)) КАК ПродажиОбороты
		|		ПО НомСкл.Номенклатура = ПродажиОбороты.Номенклатура
		|			И НомСкл.Склад = ПродажиОбороты.ДокументПродажи.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ МинОст КАК МинОст
		|		ПО НомСкл.Номенклатура = МинОст.Номенклатура
		|			И НомСкл.Склад = МинОст.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	НомСкл.Склад,
		|	НомСкл.Номенклатура,
		|	ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0),
		|	МинОст.МинОстаток
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d), ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	(ВЫБРАТЬ
		|		0 КАК a
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		1
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		2
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		3
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		4
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		5
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		6
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		7
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		8
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		9) КАК aa
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК b
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК bb
		|		ПО (ИСТИНА)
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК c
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК cc
		|		ПО (ИСТИНА)
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			0 КАК d
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			1
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			2
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			3
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			4
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			5
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			6
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			7
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			8
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ
		|			9) КАК dd
		|		ПО (ИСТИНА)
		|ГДЕ
		|	aa.a * 1000 + bb.b * 100 + cc.c * 10 + dd.d <= РАЗНОСТЬДАТ(&НачалоПериода, &КонецПериода, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Период,
		|	ТоварыВРозницеОстаткиИОбороты.Период КАК Период1,
		|	ТоварыВРозницеОстаткиИОбороты.Номенклатура,
		|	ТоварыВРозницеОстаткиИОбороты.Склад
		|ПОМЕСТИТЬ ВТ2
		|ИЗ
		|	ВТ КАК ВТ,
		|	РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			,
		|			Склад В
		|					(ВЫБРАТЬ
		|						Склады.Склад
		|					ИЗ
		|						Склады КАК Склады)
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						Ном.Номенклатура
		|					ИЗ
		|						Ном КАК Ном)) КАК ТоварыВРозницеОстаткиИОбороты
		|ГДЕ
		|	НЕ ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПереоценкаТоваровВРознице
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ2.Номенклатура,
		|	ВТ2.Период,
		|	МАКСИМУМ(ВТ2.Период1) КАК Период1,
		|	ВТ2.Склад
		|ПОМЕСТИТЬ ВТ3
		|ИЗ
		|	ВТ2 КАК ВТ2
		|ГДЕ
		|	ВТ2.Период > ВТ2.Период1
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ2.Период,
		|	ВТ2.Номенклатура,
		|	ВТ2.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ3.Период,
		|	ВТ3.Период1 КАК Период1,
		|	ВЫБОР
		|		КОГДА ТоварыВРозницеОстаткиИОбороты1.КоличествоКонечныйОстаток > 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ЕстьНаСкладе,
		|	ВЫБОР
		|		КОГДА ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|				ИЛИ ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ЧекККМ
		|			ТОГДА ТоварыВРозницеОстаткиИОбороты.КоличествоРасход
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПродажиСтар,
		|	ТоварыВРозницеОстаткиИОбороты1.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	ВТ3.Склад,
		|	ОИОРасчПериод.КоличествоРасход КАК ПродажиРасчПот,
		|	ВТ3.Номенклатура КАК Номенклатура,
		|	ПродажиТ.ПродажиКолВо КАК Продажи
		|ПОМЕСТИТЬ ВТ4
		|ИЗ
		|	ВТ3 КАК ВТ3
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Регистратор,
		|				,
		|				Склад В
		|						(ВЫБРАТЬ
		|							Склады.Склад
		|						ИЗ
		|							Склады КАК Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Ном.Номенклатура
		|						ИЗ
		|							Ном КАК Ном)) КАК ТоварыВРозницеОстаткиИОбороты
		|		ПО ВТ3.Номенклатура = ТоварыВРозницеОстаткиИОбороты.Номенклатура
		|			И ВТ3.Склад = ТоварыВРозницеОстаткиИОбороты.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Регистратор,
		|				,
		|				Склад В
		|						(ВЫБРАТЬ
		|							Склады.Склад
		|						ИЗ
		|							Склады КАК Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Ном.Номенклатура
		|						ИЗ
		|							Ном КАК Ном)) КАК ТоварыВРозницеОстаткиИОбороты1
		|		ПО ВТ3.Период1 = ТоварыВРозницеОстаткиИОбороты1.Период
		|			И ВТ3.Склад = ТоварыВРозницеОстаткиИОбороты1.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|				&ДатаНачПотреб,
		|				&КонецПериода,
		|				Период,
		|				,
		|				Склад В
		|						(ВЫБРАТЬ
		|							Склады.Склад
		|						ИЗ
		|							Склады КАК Склады)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							Ном.Номенклатура
		|						ИЗ
		|							Ном КАК Ном)) КАК ОИОРасчПериод
		|		ПО ВТ3.Номенклатура = ОИОРасчПериод.Номенклатура
		|			И ВТ3.Склад = ОИОРасчПериод.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТоварыВРозницеОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыВРозницеОстаткиИОбороты.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
		|			СУММА(ВЫБОР
		|					КОГДА ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
		|							ИЛИ ТоварыВРозницеОстаткиИОбороты.Регистратор ССЫЛКА Документ.ЧекККМ
		|						ТОГДА ТоварыВРозницеОстаткиИОбороты.КоличествоРасход
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК ПродажиКолВо,
		|			ТоварыВРозницеОстаткиИОбороты.Склад КАК Склад
		|		ИЗ
		|			РегистрНакопления.ТоварыВРознице.ОстаткиИОбороты(
		|					&НачалоПериода,
		|					&КонецПериода,
		|					Регистратор,
		|					,
		|					Склад В
		|							(ВЫБРАТЬ
		|								Склады.Склад
		|							ИЗ
		|								Склады КАК Склады)
		|						И Номенклатура В
		|							(ВЫБРАТЬ
		|								Ном.Номенклатура
		|							ИЗ
		|								Ном КАК Ном)) КАК ТоварыВРозницеОстаткиИОбороты
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТоварыВРозницеОстаткиИОбороты.Номенклатура,
		|			ТоварыВРозницеОстаткиИОбороты.Склад) КАК ПродажиТ
		|		ПО ВТ3.Номенклатура = ПродажиТ.Номенклатура
		|			И ВТ3.Склад = ПродажиТ.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ4.Период,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ4.Период1) КАК Период1,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ4.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
		|	МАКСИМУМ(ВТ4.ЕстьНаСкладе) КАК ЕстьНаСкладе,
		|	ВТ4.Номенклатура,
		|	СРЕДНЕЕ(ВТ4.Продажи) КАК Продажи,
		|	ВТ4.Склад,
		|	СРЕДНЕЕ(ВТ4.ПродажиРасчПот) КАК ПродажиРасчПот
		|ПОМЕСТИТЬ ВТ5
		|ИЗ
		|	ВТ4 КАК ВТ4
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ4.Период,
		|	ВТ4.Номенклатура,
		|	ВТ4.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ5.Склад КАК СсСклад,
		|	ВТ5.Номенклатура КАК СсНоменклатура,
		|	СУММА(ВТ5.ЕстьНаСкладе) КАК ЕстьНаСкладе,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ5.Период) КАК Период,
		|	ВТ5.Продажи,
		|	ВТ5.ПродажиРасчПот
		|ПОМЕСТИТЬ ПродажиТ
		|ИЗ
		|	ВТ5 КАК ВТ5
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ5.Номенклатура,
		|	ВТ5.Продажи,
		|	ВТ5.Склад,
		|	ВТ5.ПродажиРасчПот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НомСклИтог.Склад КАК Склад,
		|	НомСклИтог.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ПродажиТ.ЕстьНаСкладе, 0) КАК ЕстьНаСкладе,
		|	ПродажиТ.Период,
		|	ЕСТЬNULL(ПродажиТ.Продажи, 0) КАК Продажи,
		|	ЕСТЬNULL(ПродажиТ.ПродажиРасчПот, 0) КАК ПродажиРасчПот,
		|	ЕСТЬNULL(НомСклИтог.КоличестоКонечныйОстаток, 0) КАК КоличестоКонечныйОстаток,
		|	ЕСТЬNULL(НомСклИтог.КоличествоОборот, 0) КАК КоличествоПродаж,
		|	ЕСТЬNULL(НомСклИтог.МинОстаток, 0) КАК МинОстаток
		|ИЗ
		|	НомСклИтог КАК НомСклИтог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиТ КАК ПродажиТ
		|		ПО НомСклИтог.Склад = ПродажиТ.СсСклад
		|			И НомСклИтог.Номенклатура = ПродажиТ.СсНоменклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомСклИтог.Номенклатура.Наименование,
		|	НомСклИтог.Склад.Наименование
		|ИТОГИ ПО
		|	Номенклатура";
		
	ДатаНачПотреб = КонецПериода - ПериодДляРасчетаПотребности * 60*60*24;
	
	Запрос.УстановитьПараметр("ДатаНачПотреб", ДатаНачПотреб);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("СписокНоменклатуры", Номенклатура);
	Запрос.УстановитьПараметр("СсылкаСклады", Склад);
	Запрос.УстановитьПараметр("Менеджер",Менеджер);
	Запрос.УстановитьПараметр("ОсновноыеПоставщики",ОсновноыеПоставщики);

	
	Если НЕ ЗначениеЗаполнено(Номенклатура) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)","");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Менеджер) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.ОтветственныйМенеджерЗаПокупки = &Менеджер","");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОсновноыеПоставщики) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Номенклатура.ОсновнойПоставщик В ИЕРАРХИИ(&ОсновноыеПоставщики)","");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Склад) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Склады.Ссылка В(&СсылкаСклады)","");
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Возврат Выборка;
	
КонецФункции
// КЧАН