&НаКлиенте
Перем НужнаяХар;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(СсылкаООРП) тогда
		ЗаполнитьТЧ();  
		ЗаполнитьРКО();
	КонецЕсли;      
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧ()   	
	Объект.ТоварыИДокументы.Очистить();
	
	ТЗЧегоНеХватает	=	Новый ТаблицаЗначений;
	ТЗЧегоНеХватает.Колонки.Добавить("Номенклатура");
	ТЗЧегоНеХватает.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТЗЧегоНеХватает.Колонки.Добавить("Единица");
	ТЗЧегоНеХватает.Колонки.Добавить("Количество");

	
	КонтрольОстатков_Реализация_ОтчетОРознПродажах_ЧекККМ(СсылкаООРП,ТЗЧегоНеХватает);
	
	ТЗКомплектации	=	ПолучиьтТЗКомплектации(СсылкаООРП);
	
	ТЗПеремещения	=	ПолучиьтТЗПеремещения(СсылкаООРП);
	
	Для каждого СТрока из ТЗЧегоНеХватает цикл
		НоваяСтрока	=	Объект.ТоварыИДокументы.Добавить();	
		НоваяСтрока.Номенклатура				=	СТрока.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры	=	СТрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.Количество					=	СТрока.Количество;
		НоваяСтрока.ЕдИзм						=	СТрока.Единица;
		НоваяСтрока.Цена						=	ПолучитьЦену(СТрока.Номенклатура,СТрока.ХарактеристикаНоменклатуры,СсылкаООРП);
	КонецЦикла;
	
	Для каждого СТрока из ТЗКомплектации цикл
		НоваяСтрока	=	Объект.ТоварыИДокументы.Добавить();	
		НоваяСтрока.Номенклатура				=	СТрока.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры	=	СТрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.Количество					=	СТрока.Количество;
		НоваяСтрока.ЕдИзм						=	СТрока.ЕдиницаИзмерения;
		
		НоваяСтрока.НоменклатураЗамена					=	СТрока.Номенклатура1;
		НоваяСтрока.ХарактеристикаНоменклатурыЗамена	=	СТрока.ХарактеристикаНоменклатуры1;
		НоваяСтрока.КоличествоЗамена					=	СТрока.Количество1;
		НоваяСтрока.ДокументКомплектация				=	Строка.Ссылка;
		НоваяСтрока.ЕдИзмЗамена							=	СТрока.ЕдиницаИзмерения1;
	КонецЦикла;
	
	Для каждого СТрока из ТЗПеремещения цикл
		НоваяСтрока	=	Объект.ТоварыИДокументы.Добавить();	
		НоваяСтрока.Номенклатура				=	СТрока.Номенклатура;
		НоваяСтрока.ХарактеристикаНоменклатуры	=	СТрока.ХарактеристикаНоменклатуры;
		НоваяСтрока.Количество					=	СТрока.Количество;
		НоваяСтрока.ДокументПеремещение			=	Строка.Ссылка;
		НоваяСтрока.ЕдИзм						=	СТрока.ЕдиницаИзмерения;
		НоваяСтрока.ЭтоНеучтенка 				=	истина;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРКО()
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	РасходныйКассовыйОрдер.Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	      	 	             |ГДЕ
	      	 	             |	РасходныйКассовыйОрдер.Проведен
	      	 	             |	И РасходныйКассовыйОрдер.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",СсылкаООРП);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка из Рез цикл
		НоваяСтрока				= Объект.РКО.Добавить();
		НоваяСтрока.Документ	= Строка.Ссылка;
		НоваяСтрока.Подотчетник	= Строка.Ссылка.Контрагент;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	//1 Находим или создаем перемещение
	ЕстьНеучтенка = Ложь;
	НовыйДок = Неопределено;
	Для каждого СТрока из Объект.ТоварыИДокументы цикл
		Если Строка.ЭтоНеучтенка тогда
			ЕстьНеучтенка = истина;
		КонецЕсли;  
		
		Если ЗначениеЗаполнено(Строка.ДокументПеремещение) тогда
			НовыйДок =  Строка.ДокументПеремещение.ПолучитьОбъект();
			Прервать;
		КонецЕсли;  		
	КонецЦикла;
	
	Если НовыйДок = Неопределено тогда
		Если ЕстьНеучтенка тогда
			НовыйДок = Документы.ПеремещениеТоваров.СоздатьДокумент();
			НовыйДок.ВидОперации	=	Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
			НовыйДок.Дата	=	СсылкаООРП.Дата - 1;
			НовыйДок.УстановитьНовыйНомер();
			НовыйДок.Комментарий =	"Создано через обработку "+ТекущаяДата();

			НовыйДок.Основание	=	СсылкаООРП;
			
			ЗаполнитьЗначенияСвойств(НовыйДок,СсылкаООРП,"Организация,Подразделение,ОтражатьВУправленческомУчете,ОтражатьВБухгалтерскомУчете,ОтражатьВНалоговомУчете");
			НовыйДок.СкладОтправитель	=	Справочники.Склады.НайтиПоНаименованию("Неучтенка");
			НовыйДок.СкладПолучатель	=	СсылкаООРП.Склад; 
			НовыйДок.Товары.Очистить();
		КонецЕсли;
	КонецЕсли;
	//1     	
	
	//2 ОСНОвная Обработка
	Для каждого СТрока из Объект.ТоварыИДокументы цикл
		
		Если не Строка.ЭтоНеучтенка тогда
			Если не ЗначениеЗаполнено(Строка.НоменклатураЗамена) тогда
				Сообщить("Не заполнена номенклатура замена в строке: "+Строка.НомерСтроки);
				Продолжить;
			КонецЕсли;

			Если Строка.НоменклатураЗамена.ВестиУчетПоХарактеристикам и 
					не ЗначениеЗаполнено(Строка.ХарактеристикаНоменклатурыЗамена) тогда
					
				Сообщить("Не заполнена характеристика номенклатуры замена в строке: "+Строка.НомерСтроки);
				Продолжить; 		
			КонецЕсли;
		КонецЕсли;
		

		Если не ЗначениеЗаполнено(Строка.ДокументПеремещение) и Строка.ЭтоНеучтенка тогда
			//добавляем перемещение
			
			ДобавитьВПеремещение(Строка,СсылкаООРП,НовыйДок);
		ИначеЕсли не ЗначениеЗаполнено(Строка.ДокументКомплектация)и не Строка.ЭтоНеучтенка тогда
			//СоздаемКомплектацию
			Строка.ДокументКомплектация	=	СоздатьКомплектацию(Строка,СсылкаООРП); 						
		КонецЕсли;	
	КонецЦикла;
	//2	
	
	//3 Записываем перемещение и проставляем
	Если ЕстьНеучтенка тогда
		Если НовыйДок.Товары.Количество() > 0 тогда
			Попытка
				НовыйДок.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить(ОписаниеОшибки());	
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СТрока из Объект.ТоварыИДокументы цикл
		Если Строка.ЭтоНеучтенка тогда
			Строка.ДокументПеремещение	= НовыйДок.Ссылка;			
		КонецЕсли;		
	КонецЦикла;
	//3
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры


//Скопировано из контроля Остатков  Товары в рознице
&НаСервереБезКонтекста
Процедура КонтрольОстатков_Реализация_ОтчетОРознПродажах_ЧекККМ(СсылкаООРП,ТЗЧегоНеХватает)
	ИмяТабЧасти		=	"Товары";
	ИмяТаблицы		=	"ОтчетОРозничныхПродажах.Товары";
	ИмяДокумента	=	"ОтчетОРозничныхПродажах";
	
	МетаданныеТабЧасти	=	СсылкаООРП.Метаданные().ТабличныеЧасти[ИмяТабЧасти];
	ИспользоватьУказаниеСерийНоменклатурыПриРезервировании	=	ложь;
	
	ЕстьСоставНабора       = Ложь;
	Если СсылкаООРП.СоставНабора.Количество() > 0 Тогда
		ЕстьСоставНабора = Истина;
	КонецЕсли;
	ЕстьКачество           = МетаданныеТабЧасти.Реквизиты.Найти("Качество")                  	<> Неопределено;
    ЕстьСпособСписания     = МетаданныеТабЧасти.Реквизиты.Найти("СпособСписанияОстаткаТоваров")	<> Неопределено;
    ЕстьСкладВТабЧасти     = МетаданныеТабЧасти.Реквизиты.Найти("Склад")	<> Неопределено;


	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	Если ЕстьСоставНабора Тогда
		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Док.Номенклатура КАК Номенклатура
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		Док.Номенклатура
		|	ИЗ
		|		Документ." + ИмяТаблицы +" КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|		И НЕ Док.Номенклатура.Комплект
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Док.Номенклатура
		|	ИЗ
		|		Документ." + ИмяДокумента + ".СоставНабора КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ДокументСсылка
		|
		|	) КАК Док
		|";

		ТекстЗапросаРеквизитыДокумента = "
		|	(ВЫБРАТЬ
		//строки ТЧ Товары которые не являются набором
		|		Ссылка,
		|		Номенклатура,
		|		%ПОЛЕ_Склад%,
		|		%ПОЛЕ_СпособСписанияОстаткаТоваров% КАК СпособСписанияОстаткаТоваров,   
		|		%ПОЛЕ_Качество% КАК Качество,                       
		|		ХарактеристикаНоменклатуры,
		|		СерияНоменклатуры,
		|		Коэффициент,
		|		%ПОЛЕ_ЗаказПокупателя% КАК ЗаказПокупателя, 
		|		Количество
		|		ИЗ
		|			Документ." + ИмяТаблицы + " 
		|		ГДЕ
		|			Ссылка = &ДокументСсылка
		|			И НЕ Номенклатура.Комплект
		|
		//строки ТЧ СоставНабора 
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ
		|		Ссылка,
		|		Номенклатура,
		|		Склад,
		|		СпособСписанияОстаткаТоваров,
		|		Качество,
		|		ХарактеристикаНоменклатуры,
		|		СерияНоменклатуры,
		|		Коэффициент,
		|		ЗаказПокупателя,
		|		Количество
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ДокНаб.Ссылка,
		|				ДокНаб.Номенклатура,
		|               %ПОЛЕ_Набор_Склад% КАК Склад,
		|				%ПОЛЕ_Набор_СпособСписанияОстаткаТоваров% КАК СпособСписанияОстаткаТоваров,   
		|				%ПОЛЕ_Набор_Качество% КАК Качество,                       
		|				ДокНаб.ХарактеристикаНоменклатуры,
		|				ДокНаб.СерияНоменклатуры,
		|				ДокНаб.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
		|				%ПОЛЕ_Набор_ЗаказПокупателя% КАК ЗаказПокупателя,
		|				ДокНаб.Количество * ДокТов.Количество КАК Количество
		|			ИЗ
		|				Документ." + ИмяДокумента + ".СоставНабора   КАК ДокНаб
		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ." + ИмяТаблицы + " КАК ДокТов
		|					ПО ДокТов.КлючСтроки = ДокНаб.КлючСтроки
		|					 И ДокТов.Ссылка     = &ДокументСсылка
		|			ГДЕ
		|				ДокНаб.Ссылка = &ДокументСсылка
		|			) КАК Набор
		|
		|		) 
		|";
		
		//есть состав набора - склады берутся из двух табличных частей
		ЗапросСклады = новый Запрос;
		ЗапросСклады.Текст = "Выбрать РАЗЛИЧНЫЕ Склад 
		|ИЗ Документ."+ИмяТаблицы+"
		|ГДЕ Ссылка=&ДокументСсылка 
		|ОБЪЕДИНИТЬ
		|ВЫБРАТЬ Склад ИЗ 
		|Документ." + ИмяДокумента + ".СоставНабора 
		|ГДЕ Ссылка=&ДокументСсылка И Склад<>&ПустойСклад
		|";
		ЗапросСклады.УстановитьПараметр("ДокументСсылка",СсылкаООРП);
        ЗапросСклады.УстановитьПараметр("ПустойСклад",Справочники.Склады.ПустаяСсылка());
	Иначе //Если ЕстьСоставНабора Тогда

		ТекстЗапросаСписокНоменклатуры = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура 
		|ИЗ
		|	Документ." + ИмяТаблицы +"
		|ГДЕ  Ссылка = &ДокументСсылка
		|";

        ТекстЗапросаРеквизитыДокумента = "
		|	Документ." + ИмяТаблицы + " 
		|";

		//нет набора - склады берутся из одной табличной части
		ЗапросСклады = новый Запрос;
		ЗапросСклады.Текст = "Выбрать различные Склад ИЗ Документ."+ИмяТаблицы+"
		|ГДЕ Ссылка=&ДокументСсылка";
		ЗапросСклады.УстановитьПараметр("ДокументСсылка",СсылкаООРП);

	КонецЕсли; //Если ЕстьСоставНабора Тогда

	Запрос = Новый Запрос;

	Если ЕстьСкладВТабЧасти Тогда
		СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
	Иначе
		СписокСкладов = новый Массив;
		СписокСкладов.Добавить(СсылкаООРП.Склад);
	КонецЕсли;
	
	
	// Установим параметры запроса
	ЗаполнитьОбщиеПараметрыЗапроса(Запрос,СсылкаООРП);
	Запрос.УстановитьПараметр("СписокСкладов",         СписокСкладов);
	Запрос.УстановитьПараметр("ПустойЗаказПокупателя", Документы.ЗаказПокупателя.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад",           Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСпособСписания",  Перечисления.СпособыСписанияОстаткаТоваров.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеКачество",        Справочники.Качество.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Дата", Новый Граница(СсылкаООРП.моментВремени(),ВидГраницы.Исключая));


	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура                                       		КАК Номенклатура,
	|	Док.Номенклатура.Представление                         		КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков 					КАК ЕдиницаХраненияОстатков,
	|   Док.ХарактеристикаНоменклатуры 								КАК ХарактеристикаНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.ХарактеристикаНоменклатуры) 				КАК ХарактеристикаНоменклатурыПредставление,
	|   Док.СерияНоменклатуры 										КАК СерияНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(Док.СерияНоменклатуры) 						КАК СерияНоменклатурыПредставление,
	|   %ПОЛЕ_Док_Склад%                                            КАК Склад, 
	|   %ПОЛЕ_Док_Качество% 										КАК Качество,
	|   СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))) 
	|																КАК ДокументКоличество,
	|	ЕстьNull(МАКСИМУМ(ОстаткиБезСерии.КоличествоОстаток),0)     КАК ОстатокБезСерииКоличество,
	|	ЕстьNull(МАКСИМУМ(Остатки.КоличествоОстаток),0)             КАК ОстатокКоличество,
	|	ЕстьNull(МАКСИМУМ(Резервы.КоличествоОстаток),0)             КАК РезервыКоличество,
	|	%ПОЛЕ_РезервыПоСерииКоличество%       						КАК РезервыПоСерииКоличество,
	|	ЕстьNull(МАКСИМУМ(ТоварыКПередаче.КоличествоОстаток),0)     КАК КПередачеКоличество,
	|	ЕстьNull(МАКСИМУМ(ТоварыКПередачеБезСерии.КоличествоОстаток),0) КАК КПередачеБезСерииКоличество,
	|	%ПОЛЕ_РезервыПоДокументуКоличество% 						КАК РезервыПоДокументуКоличество,
	|	%ПОЛЕ_РезервыПоДокументуБезСерии_Количество% 				КАК РезервыПоДокументуБезСерииКоличество,
	|	0 															КАК КПолучению,
	|	0                 											КАК КПолучениюПоДокументуКоличество,
	|	0 															КАК КПередачеПоДокументуКоличество,
	|	0              												КАК КПередачеПоДокументуБезСерииКоличество

	|ИЗ 
	|	"+ ТекстЗапросаРеквизитыДокумента + " КАК Док
	|
	//таблица остатков товаров с учетом серий
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРознице.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%  
	|		//УСЛОВИЕ_Качество
	|	) КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура
	| И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры
	| И Док.СерияНоменклатуры 			= Остатки.СерияНоменклатуры
	| //СОЕДИНЕНИЕ_Качество_Остатки
	| //СОЕДИНЕНИЕ_Склад_Остатки
	//таблица остатков товаров без учета серий
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРознице.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%
	|		//УСЛОВИЕ_Качество
	|	) КАК ОстаткиБезСерии
	|ПО 
	|	Док.Номенклатура                = ОстаткиБезСерии.Номенклатура
	| И Док.ХарактеристикаНоменклатуры 	= ОстаткиБезСерии.ХарактеристикаНоменклатуры
	| //СОЕДИНЕНИЕ_Качество_ОстаткиБезСерии
	| //СОЕДИНЕНИЕ_Склад_ОстаткиБезСерии
	|
	//таблица товаров в резерве на складе без учета серий номенклатуры (определяется для строк, которые списываются за счет свободного остатка)

	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%) КАК Резервы
	|ПО 
	|	Док.Номенклатура                = Резервы.Номенклатура
	| И Док.ХарактеристикаНоменклатуры 	= Резервы.ХарактеристикаНоменклатуры
	| //СОЕДИНЕНИЕ_ДокументРезерва_Резервы
	| //СОЕДИНЕНИЕ_Склад_Резервы
	| //СОЕДИНЕНИЕ_Качество_Резервы
	
	//таблица товаров в резерве на складе с учетом серий номенклатуры (определяется для строк, которые списываются за счет свободного остатка)
	|"+?(ИспользоватьУказаниеСерийНоменклатурыПриРезервировании,"
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%) КАК РезервыПоСерии
	|ПО 
	|	Док.Номенклатура                = РезервыПоСерии.Номенклатура
	| И Док.ХарактеристикаНоменклатуры 	= РезервыПоСерии.ХарактеристикаНоменклатуры
	| И Док.СерияНоменклатуры 			= РезервыПоСерии.СерияНоменклатуры
	| //СОЕДИНЕНИЕ_ДокументРезерва_Резервы
	| //СОЕДИНЕНИЕ_Склад_РезервыПоСерии
	| //СОЕДИНЕНИЕ_Качество_Резервы
	|","")+"
	|"+?(ИмяДокумента = "РеализацияТоваровУслуг","
	//таблица резервов по документу: количество, которое списывается за счет резерва (эта часть требуется только для документа Реализация)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	(ВЫБРАТЬ ТЧ.Номенклатура,
	|	ТЧ.Склад,
	|	ТЧ.ХарактеристикаНоменклатуры
	|	//ПОЛЕ_ТЧ_Серия
	|	//количество, списываемое за счет резерва, не может превышать количество указанное в документе
	|	,ВЫБОР КОГДА Сумма(ТЧ.ДокументКоличество)<Сумма(ВремРезервы.КоличествоОстаток) ТОГДА
	|   	Сумма(ТЧ.ДокументКоличество)
	|	ИНАЧЕ Сумма(ВремРезервы.КоличествоОстаток)
	|	КОНЕЦ КАК КоличествоОстаток
	|	ИЗ
	|		//сгруппированная табличная часть документа с отбором строк которые списываются из резерва
	|		(ВЫБРАТЬ  
	|			Номенклатура,
	|			Склад,
	|			ЗаказПокупателя,
	|			ХарактеристикаНоменклатуры
	|			//ПОЛЕ_Серия
	|			,СУММА(ВЫРАЗИТЬ(Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))) КАК ДокументКоличество
	|		ИЗ 
	|			" + ТекстЗапросаРеквизитыДокумента +" КАК ВремДок
	|		ГДЕ  ВремДок.Ссылка = &ДокументСсылка
	|			И ВремДок.ЗаказПокупателя <> &ПустойЗаказПокупателя и ВремДок.СпособСписанияОстаткаТоваров = &ИзРезерва
	|		СГРУППИРОВАТЬ ПО
	|			Номенклатура,
	|			Склад,
	|			ЗаказПокупателя,
	|			ХарактеристикаНоменклатуры
	|			//ПОЛЕ_Серия
	|		) КАК ТЧ
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&Дата, Склад в (&СписокСкладов) И
	|			%ВыборкаПоНоменклатуре%
	|			) КАК ВремРезервы
	|	ПО ТЧ.Номенклатура = ВремРезервы.Номенклатура 
	|		И ТЧ.Склад = ВремРезервы.Склад
	|		И ТЧ.ЗаказПокупателя = ВремРезервы.ДокументРезерва
	|		И ТЧ.ХарактеристикаНоменклатуры = ВремРезервы.ХарактеристикаНоменклатуры
	|		//СОЕДИНЕНИЕ_Серия_ВремРезервы
	|	СГРУППИРОВАТЬ ПО 
	|		ТЧ.Номенклатура,
	|		ТЧ.Склад,
	|		ТЧ.ХарактеристикаНоменклатуры
	|		//ПОЛЕ_ТЧ_Серия
	|) КАК РезервыПоДокументу
	|ПО 
	|Док.Номенклатура                 = РезервыПоДокументу.Номенклатура
	|И Док.Склад = РезервыПоДокументу.Склад
	|И Док.ЗаказПокупателя <> &ПустойЗаказПокупателя И Док.СпособСписанияОстаткаТоваров = &ИзРезерва
	|И Док.ХарактеристикаНоменклатуры = РезервыПоДокументу.ХарактеристикаНоменклатуры
	|//СОЕДИНЕНИЕ_Серия_РезервыПоДокументу
	
	//таблица резервов по документу без учета серий: количество, которое списывается за счет резерва 
    |//ЗАПРОС_РезервыПоДокументуБезСерии

    |","")+"
	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%
	|		//УСЛОВИЕ_Качество
	|	) КАК ТоварыКПередаче
	|ПО 
	|	Док.Номенклатура                = ТоварыКПередаче.Номенклатура
	| И Док.ХарактеристикаНоменклатуры 	= ТоварыКПередаче.ХарактеристикаНоменклатуры
	| И Док.СерияНоменклатуры 			= ТоварыКПередаче.СерияНоменклатуры
	| //СОЕДИНЕНИЕ_Склад_ТоварыКПередаче
	| //СОЕДИНЕНИЕ_Качество_ТоварыКПередаче
	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(&Дата, Склад в (&СписокСкладов) И
	|		%ВыборкаПоНоменклатуре%
	|		//УСЛОВИЕ_Качество
	|	) КАК ТоварыКПередачеБезСерии
	|ПО 
	|	Док.Номенклатура                = ТоварыКПередачеБезСерии.Номенклатура
	| И Док.ХарактеристикаНоменклатуры 	= ТоварыКПередачеБезСерии.ХарактеристикаНоменклатуры
	| //СОЕДИНЕНИЕ_Склад_ТоварыКПередачеБезСерии
	| //СОЕДИНЕНИЕ_Качество_ТоварыКПередачеБезСерии
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И Не Док.Номенклатура.Комплект
	|	И Не Док.Номенклатура.Услуга 
	// остатки по услугам контролировать не надо.
	|	//УСЛОВИЕ_Склад
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|   Док.ХарактеристикаНоменклатуры,
	|   Док.СерияНоменклатуры,
	|   %ПОЛЕ_Док_Качество%, 									
	|    %ПОЛЕ_Док_Склад%
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыВРознице.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|
	|ИТОГИ СУММА (ДокументКоличество), МАКСИМУМ(ОстатокБезСерииКоличество), МАКСИМУМ(РезервыКоличество),
	|         МАКСИМУМ(КПередачеКоличество), МАКСИМУМ(РезервыПоДокументуКоличество), Максимум(РезервыПоСерииКоличество), 
	|		Максимум(КПередачеБезСерииКоличество), МАКСИМУМ(РезервыПоДокументуБезСерииКоличество),
	|		Максимум(КПолучению), Максимум(КПередачеПоДокументуКоличество), Максимум(КПередачеПоДокументуБезСерииКоличество), Максимум(КПолучениюПоДокументуКоличество)
	|ПО Номенклатура,
	|   ХарактеристикаНоменклатуры,
	|    Склад
	|	//ПОЛЕ_Качество
	|";
	
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_РезервыПоСерииКоличество%",	?(ИспользоватьУказаниеСерийНоменклатурыПриРезервировании,"ЕстьNull(МАКСИМУМ(РезервыПоСерии.КоличествоОстаток),0)","0"));
	ТекстЗапросаРезервыПоДокументуБезСерии = "";

	Если ИмяДокумента = "РеализацияТоваровУслуг" Тогда
		//есть реквизит ЗаказПокупателя, документ может списывать товар из резерва
		Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
			ТекстЗапросаРезервыПоДокументуБезСерии = "
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	(ВЫБРАТЬ ТЧ.Номенклатура,
			|	ТЧ.Склад,
			|	ТЧ.ХарактеристикаНоменклатуры
			|	//количество, списываемое за счет резерва, не может превышать количество указанное в документе
			|	,ВЫБОР КОГДА Сумма(ТЧ.ДокументКоличество)<Сумма(ВремРезервы.КоличествоОстаток) ТОГДА
			|   	Сумма(ТЧ.ДокументКоличество)
			|	ИНАЧЕ Сумма(ВремРезервы.КоличествоОстаток)
			|	КОНЕЦ КАК КоличествоОстаток
			|	ИЗ
			|		//сгруппированная табличная часть документа с отбором строк которые списываются из резерва
			|		(ВЫБРАТЬ  
			|			Номенклатура,
			|			Склад,
			|			ЗаказПокупателя,
			|			ХарактеристикаНоменклатуры
			|			,СУММА(ВЫРАЗИТЬ(Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))) КАК ДокументКоличество
			|		ИЗ 
			|			" + ТекстЗапросаРеквизитыДокумента +" КАК ВремДок
			|		ГДЕ  ВремДок.Ссылка = &ДокументСсылка
			|			И ВремДок.ЗаказПокупателя <> &ПустойЗаказПокупателя и ВремДок.СпособСписанияОстаткаТоваров = &ИзРезерва
			|		СГРУППИРОВАТЬ ПО
			|			Номенклатура,
			|			Склад,
			|			ЗаказПокупателя,
			|			ХарактеристикаНоменклатуры
			|		) КАК ТЧ
			|	ЛЕВОЕ СОЕДИНЕНИЕ 
			|		РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, Склад в (&СписокСкладов) И
			|			%ВыборкаПоНоменклатуре%
			|			) КАК ВремРезервы
			|	ПО ТЧ.Номенклатура = ВремРезервы.Номенклатура 
			|		И ТЧ.Склад = ВремРезервы.Склад
			|		И ТЧ.ЗаказПокупателя = ВремРезервы.ДокументРезерва
			|		И ТЧ.ХарактеристикаНоменклатуры = ВремРезервы.ХарактеристикаНоменклатуры
			|	СГРУППИРОВАТЬ ПО 
			|		ТЧ.Номенклатура,
			|		ТЧ.Склад,
			|		ТЧ.ХарактеристикаНоменклатуры
			|) КАК РезервыПоДокументуБезСерии
			|ПО 
			|Док.Номенклатура                 = РезервыПоДокументуБезСерии.Номенклатура
			|И Док.Склад = РезервыПоДокументуБезСерии.Склад
			|И Док.ЗаказПокупателя <> &ПустойЗаказПокупателя И Док.СпособСписанияОстаткаТоваров = &ИзРезерва
			|И Док.ХарактеристикаНоменклатуры = РезервыПоДокументуБезСерии.ХарактеристикаНоменклатуры
			| //СОЕДИНЕНИЕ_Качество_Резервы
			|";

			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ЗАПРОС_РезервыПоДокументуБезСерии",	ТекстЗапросаРезервыПоДокументуБезСерии);
			
			//резервы по документу имеет смысл определять с точностью до серии
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_ТЧ_Серия",							",ТЧ.СерияНоменклатуры");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_Серия",								",СерияНоменклатуры");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_ВремРезервы",			"И (ТЧ.СерияНоменклатуры = ВремРезервы.СерияНоменклатуры ИЛИ НЕ ЕстьNull(ТЧ.ЗаказПокупателя.ДоговорКонтрагента.ОбособленныйУчетТоваровПоЗаказамПокупателей,ложь))");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_РезервыПоДокументу",	"И Док.СерияНоменклатуры = РезервыПоДокументу.СерияНоменклатуры");
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_РезервыПоДокументуКоличество%",		"ЕстьNull(Максимум(РезервыПоДокументу.КоличествоОстаток),0)");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_ДокументРезерва_Резервы",		" И (Док.ЗаказПокупателя = &ПустойЗаказПокупателя ИЛИ Док.СпособСписанияОстаткаТоваров <> &ИзРезерва)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ЗаказПокупателя%",					"ЗаказПокупателя");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_ЗаказПокупателя%",				"ДокТов.ЗаказПокупателя");

	

	Иначе //Если ИмяДокумента = "РеализацияТоваровУслуг" Тогда
		//документ не может списывать товар из резерва - не надо определять резервы по документу
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_РезервыПоДокументуКоличество%",	"0");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ЗаказПокупателя%",				"NULL");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_ЗаказПокупателя%",			"NULL");
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_РезервыПоДокументуБезСерии_Количество%",		?(ТекстЗапросаРезервыПоДокументуБезСерии<>"",	"ЕстьNull(МАКСИМУМ(РезервыПоДокументуБезСерии.КоличествоОстаток),0)",	"0")); 
	Если ЕстьКачество Тогда
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Качество%",						"Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_Качество%",				"ВЫБОР КОГДА ДокНаб.Качество = &ПустоеКачество ТОГДА ДокТов.Качество
																						|ИНАЧЕ ДокНаб.Качество КОНЕЦ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Качество%",		" &Новый");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_Качество%", "&Новый");
	КонецЕсли;
	
	Если ЕстьСпособСписания Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_СпособСписанияОстаткаТоваров%",	"ВЫБОР КОГДА ДокНаб.СпособСписанияОстаткаТоваров = &ПустойСпособСписания ТОГДА ДокТов.СпособСписанияОстаткаТоваров
																								|ИНАЧЕ ДокНаб.СпособСписанияОстаткаТоваров КОНЕЦ");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_СпособСписанияОстаткаТоваров%",			" СпособСписанияОстаткаТоваров");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_СпособСписанияОстаткаТоваров%",			" &ПустойСпособСписания");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_СпособСписанияОстаткаТоваров%",	"&ПустойСпособСписания");
	КонецЕсли;

	ДополнитьТекстЗапроса(ТекстЗапроса,ложь,,ложь,,ложь,ЕстьКачество,ЕстьСкладВТабЧасти,ТекстЗапросаСписокНоменклатуры);

	Запрос.Текст = ТекстЗапроса;

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ОбработатьРезультатЗапроса(Выборка,истина,ТекстЗапросаРезервыПоДокументуБезСерии<>"",ТЗЧегоНеХватает);

КонецПроцедуры //КонтрольОстатков_Реализация_ОтчетОРознПродажах()

&НаСервереБезКонтекста
Процедура ЗаполнитьОбщиеПараметрыЗапроса(Запрос,СсылкаООРП)
	Запрос.УстановитьПараметр("ДокументСсылка",			СсылкаООРП);
	Запрос.УстановитьПараметр("Новый",          		Справочники.Качество.Новый);
    Запрос.УстановитьПараметр("ПустаяХарактеристика",  	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСерия",  			Справочники.СерииНоменклатуры.ПустаяСсылка());
    Запрос.УстановитьПараметр("ИзРезерва",      		Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
    Запрос.УстановитьПараметр("НТТ",                   	Перечисления.ВидыСкладов.НТТ);
	Запрос.УстановитьПараметр("Оптовый",                Перечисления.ВидыСкладов.Оптовый);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДополнитьТекстЗапроса(ТекстЗапроса,ЕстьХарактеристика,ТекстХарактеристика = "ХарактеристикаНоменклатуры",ЕстьСерия,ТекстСерия="СерияНоменклатуры",ЕстьКоэффициент,ЕстьКачество, ЕстьСкладВТабЧасти=ложь,ТекстЗапросаСписокНоменклатуры)
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

	Если ЕстьХарактеристика Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%",							"Док."+ТекстХарактеристика);
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ОстаткиБезСерии",			"И Док."+ТекстХарактеристика+" = ОстаткиБезСерии.ХарактеристикаНоменклатуры"); 
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки",					"И Док."+ТекстХарактеристика+" = Остатки.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_РезервыПоСерии",			"И Док."+ТекстХарактеристика+" = РезервыПоСерии.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_РезервыПоДокументуБезСерии","И Док."+ТекстХарактеристика+" = РезервыПоДокументуБезСерии."+ТекстХарактеристика);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_РезервыПоДокументу",		"И Док."+ТекстХарактеристика+" = РезервыПоДокументу."+ТекстХарактеристика);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Резервы",					"И Док."+ТекстХарактеристика+" = Резервы.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ТоварыКПередачеБезСерии",	"И Док."+ТекстХарактеристика+" = ТоварыКПередачеБезСерии.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ТоварыКПередаче",			"И Док."+ТекстХарактеристика+" = ТОварыКПередаче.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ТоварыКПолучению",			"И Док."+ТекстХарактеристика+" = ТоварыКПолучению.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_КПередачеПоДокументуБезСерии",		"И Док."+ТекстХарактеристика+" = ТоварыКПередачеПоДокументуБезСерии.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_КПередачеПоДокументу",		"И Док."+ТекстХарактеристика+" = ТоварыКПередачеПоДокументу.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_ТЧ_Характеристика",								",ТЧ."+ТекстХарактеристика);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_Характеристика",								","+ТекстХарактеристика);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ВремРезервы",				"И ТЧ."+ТекстХарактеристика+" = ВремРезервы.ХарактеристикаНоменклатуры");

	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%",					"&ПустаяХарактеристика");
	КонецЕсли;

	Если ЕстьКоэффициент Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%",	"СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество_Зап%",	"ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))");

        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%",		"СУММА(ВЫРАЗИТЬ(Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Количество%",		"СУММА(ВЫРАЗИТЬ(Количество КАК Число(15,3)))");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество_Зап%",	"ВЫРАЗИТЬ(Док.Количество КАК Число(15,3))");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%",	"СУММА(ВЫРАЗИТЬ(Док.Количество КАК Число(15,3)))");
	КонецЕсли;

	Если ЕстьКачество Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Качество%",								"Док.Качество");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_ОстаткиБезСерии",			"И Док.Качество = ОстаткиБезСерии.Качество");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_Остатки",					"И Док.Качество = Остатки.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_ТоварыКПередачеБезСерии",	"И Док.Качество = ТоварыКПередачеБезСерии.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_ТоварыКПередаче",			"И Док.Качество = ТоварыКПередаче.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_ТоварыКПолучению",			"И Док.Качество = ТоварыКПолучению.Качество");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Качество_Резервы",					"И Док.Качество = &Новый");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_Качество",									",Качество");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Качество%",						"&Новый");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_Качество",						" И Качество = &Новый");
	КонецЕсли;

	Если ЕстьСерия Тогда
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%",							"Док."+ТекстСерия);
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_Остатки",				"И Док."+ТекстСерия+" = Остатки.СерияНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_РезервыПоСерии",		"И Док."+ТекстСерия+" = РезервыПоСерии.СерияНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_КПередачеПоДокументу",	"И Док."+ТекстСерия+" = ТоварыКПередачеПоДокументу.СерияНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_ТоварыКПередаче",		"И Док."+ТекстСерия+" = ТоварыКПередаче.СерияНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Серия_ТоварыКПолучению",		"И Док."+ТекстСерия+" = ТоварыКПолучению.СерияНоменклатуры");

	Иначе
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Серия%",									"&ПустаяСерия");
	КонецЕсли;

	Если ЕстьСкладВТабЧасти Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Склад%",					"Док.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Склад%",						"Склад");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_Склад",	"И Док.Склад.ВидСклада<>&НТТ И Док.Склад.ВидСклада<>&Оптовый");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_ОстаткиБезСерии",				"И Док.Склад = ОстаткиБезСерии.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_ТоварыКПередачеБезСерии",		"И Док.Склад = ТоварыКПередачеБезСерии.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_ТоварыКПередаче",				"И Док.Склад = ТоварыКПередаче.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_КПередачеПоДокументуБезСерии",	"И Док.Склад = КПередачеПоДокументуБезСерии.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_КПередачеПоДокументу",			"И Док.Склад = КПередачеПоДокументу.Склад");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_Остатки",						"И Док.Склад = Остатки.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_РезервыПоДокументуБезСерии",	"И Док.Склад = РезервыПоДокументуБезСерии.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_РезервыПоДокументу",			"И Док.Склад = РезервыПоДокументу.Склад");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_РезервыПоСерии",				"И Док.Склад = РезервыПоСерии.Склад");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Склад_Резервы",						"И Док.Склад = Резервы.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_ТЧ_Склад",									",ТЧ.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ПОЛЕ_Склад",										",Склад");

        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_Склад%",				"ВЫБОР КОГДА ДокНаб.Склад = &ПустойСклад ТОГДА ДокТов.Склад
																						|ИНАЧЕ ДокНаб.Склад КОНЕЦ");
																						
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Склад%",					"Док.Ссылка.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Склад%",						"Ссылка.Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Набор_Склад%", 				"ДокТов.Ссылка.Склад");
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьРезультатЗапроса(Выборка,ЕстьСерия,ЕстьРезервыПоДокументуБезСерии,ТЗЧегоНеХватает)
	ИспользоватьУказаниеСерийНоменклатурыПриРезервировании	=	ложь;
	Отказ	=	Ложь;
	Заголовок="";
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			ДокументКоличествоБезСерии = Выборка.ДокументКоличество;
			РезервыПоДокументуБезСерииКоличество   = ?(ЕстьРезервыПоДокументуБезСерии,Выборка.РезервыПоДокументуБезСерииКоличество,Выборка.РезервыПоДокументуКоличество);
			Продолжить;
		КонецЕсли;
		
		ДокументКоличество             = Выборка.ДокументКоличество;
		КоличествоНаСкладе             = Выборка.ОстатокКоличество;
		КоличествоВРезерве             = Выборка.РезервыКоличество; 
		КоличествоВРезервеПоСерии      = Выборка.РезервыПоСерииКоличество; 
		РезервыПоДокументуКоличество   = Выборка.РезервыПоДокументуКоличество;
		КПередачеКоличество            = Выборка.КПередачеКоличество;
		КПередачеБезСерииКоличество    = ?(ЕстьСерия,Выборка.КПередачеБезСерииКоличество,КПередачеКоличество);
		КПередачеПоДокументуКоличество = Выборка.КПередачеПоДокументуКоличество;
		КПередачеПоДокументуБезСерииКоличество = ?(ЕстьСерия,Выборка.КПередачеПоДокументуБезСерииКоличество,Выборка.КПередачеПоДокументуКоличество);
		КПолучениюКоличество           = Выборка.КПолучению;
		КПолучениюПоДокументуКоличество = Выборка.КПолучениюПоДокументуКоличество;
		Если Строка(Выборка.ДокументКоличество)="" Тогда
			ДокументКоличество=0;
			ДокументКоличествоБезСерии=0;
		КонецЕсли;


		НедоступноНаСкладе = Макс(КоличествоВРезерве - РезервыПоДокументуБезСерииКоличество,0) + Макс(КПередачеБезСерииКоличество - КПередачеПоДокументуБезСерииКоличество,0) + Макс(КПолучениюКоличество-КПолучениюПоДокументуКоличество,0);
		
		// Сначала проверяем остаток товара на складе с учетом серий,
		// потом свободный остаток товара (без учета серий)
		Если ЕстьСерия Тогда
			КоличествоБезРезерва = КоличествоНаСкладе;
			мКоличествоВРезерве = 0;
			//если серия не заполнена - уменьшать свободный остаток на количество резерва и товаров к передаче нельзя, 
			//	т.к. может попасть резервирование или товары к передаче, выполненные без учета серии 
			Если ЗначениеЗаполнено(Выборка.СерияНоменклатуры) Тогда
				Если ИспользоватьУказаниеСерийНоменклатурыПриРезервировании Тогда
					//может иметься резерв в разрезе серий - его надо убрать из свободного остатка
					мКоличествоВРезерве = Макс(КоличествоВРезервеПоСерии - РезервыПоДокументуКоличество,0);
					КоличествоБезРезерва = КоличествоНаСкладе - мКоличествоВРезерве;
				КонецЕсли;
				КоличествоБезРезерва = КоличествоБезРезерва - КПередачеКОличество + КПередачеПоДокументуКоличество;
			КонецЕсли;
	
			Если КоличествоБезРезерва < ДокументКоличество Тогда
				НоваяСтрока = ТЗЧегоНеХватает.Добавить();
				НоваяСтрока.Номенклатура				=	Выборка.Номенклатура;
				НоваяСтрока.ХарактеристикаНоменклатуры	=	Выборка.ХарактеристикаНоменклатуры;
				НоваяСтрока.Количество					=	ДокументКоличество - КоличествоБезРезерва;
				НоваяСтрока.Единица						=	Выборка.ЕдиницаХраненияОстатков;
				
				//УправлениеЗапасами.СообщитьОНедостаткеТовара(ДокументКоличество                  // Требуемое количество товара
				//, КоличествоБезРезерва                                      // Свободное количество товара
				//, мКоличествоВРезерве                                        // Количество в резерве
				//, Макс(КПередачеКоличество - КПередачеПоДокументуКоличество,0)
				//, Макс(КПолучениюКоличество-КПолучениюПоДокументуКоличество,0)
				//, Отказ, Заголовок
				//, СокрЛП(Выборка.Склад)                                   // Склад (представление)
				//,                                                         // Заказ поставщику (представление)
				//, Выборка.НоменклатураПредставление                       // Номенклатура (представление)
				//, " "+Выборка.ХарактеристикаНоменклатурыПредставление 		// Характеристика (представление)
				//, " "+Выборка.СерияНоменклатурыПредставление 				// Серия номенклатуры (представление)
				//, СокрЛП(Выборка.Качество)                                // Качество товара (представление)
				//, Выборка.ЕдиницаХраненияОстатковПредставление            // Единица хранения остатков (представление)
				//);
					
				Продолжить;
			КонецЕсли;
			КоличествоНаСкладе = Выборка.ОстатокБезСерииКоличество;
			ДокументКоличество = ДокументКоличествоБезСерии;
		КонецЕсли;
		Если КоличествоНаСкладе - НедоступноНаСкладе < ДокументКоличество Тогда
			
			НоваяСтрока = ТЗЧегоНеХватает.Добавить();
			НоваяСтрока.Номенклатура				=	Выборка.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры	=	Выборка.ХарактеристикаНоменклатуры;
			НоваяСтрока.Количество					=	ДокументКоличество - (КоличествоБезРезерва + НедоступноНаСкладе);
			НоваяСтрока.Единица						=	Выборка.ЕдиницаХраненияОстатков;

			//УправлениеЗапасами.СообщитьОНедостаткеТовара(ДокументКоличество                  // Требуемое количество товара
			//, КоличествоНаСкладе - НедоступноНаСкладе                 // Свободное количество товара
			//, КоличествоВРезерве - РезервыПоДокументуБезСерииКоличество       // Количество товара в резерве
			//, Макс(КПередачеКоличество - КПередачеПоДокументуКоличество,0)     // Количество товара к передаче
			//, Макс(КПолучениюКоличество-КПолучениюПоДокументуКоличество,0)
			//, Отказ, Заголовок 
			//, СокрЛП(Выборка.Склад)                         // Склад (представление)
			//,                                               // Заказ поставщику (представление)
			//, Выборка.НоменклатураПредставление             // Номенклатура (представление)
			//, Выборка.ХарактеристикаНоменклатурыПредставление // Характеристика (представление)
			//,                                               // Серия номенклатуры (представление)
			//,                       // Качество товара (представление)
			//, Выборка.ЕдиницаХраненияОстатковПредставление  // Единица хранения остатков (представление)
			//);
			//
			//ДокументКоличествоБезСерии = 0;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
//конец

&НаСервереБезКонтекста
Функция ПолучиьтТЗКомплектации(СсылкаООРП)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.Номенклатура,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.ХарактеристикаНоменклатуры,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.Количество,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура КАК Номенклатура1,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры1,
	      	 	             |	СУММА(КомплектацияНоменклатурыКомплектующие.Количество) КАК Количество1,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.ЕдиницаИзмерения КАК ЕдиницаИзмерения1
	      	 	             |ИЗ
	      	 	             |	Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
	      	 	             |ГДЕ
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.ДокументОснование = &ДокументОснование
	      	 	             |	И КомплектацияНоменклатурыКомплектующие.Ссылка.Проведен
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.Номенклатура,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.ХарактеристикаНоменклатуры,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка.Количество,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Ссылка,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.Номенклатура,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.ХарактеристикаНоменклатуры,
	      	 	             |	КомплектацияНоменклатурыКомплектующие.ЕдиницаИзмерения");
	Запрос.УстановитьПараметр("ДокументОснование",СсылкаООРП);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучиьтТЗПеремещения(СсылкаООРП)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	      	 	             |	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	      	 	             |	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	      	 	             |	ПеремещениеТоваровТовары.Ссылка,
	      	 	             |	ПеремещениеТоваровТовары.ЕдиницаИзмерения
	      	 	             |ИЗ
	      	 	             |	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	      	 	             |ГДЕ
	      	 	             |	ПеремещениеТоваровТовары.Ссылка.Проведен
	      	 	             |	И ПеремещениеТоваровТовары.Ссылка.Основание = &Основание
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ПеремещениеТоваровТовары.Ссылка,
	      	 	             |	ПеремещениеТоваровТовары.Номенклатура,
	      	 	             |	ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры,
	      	 	             |	ПеремещениеТоваровТовары.ЕдиницаИзмерения");
	Запрос.УстановитьПараметр("Основание",СсылкаООРП);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция  СоздатьКомплектацию(Строка,СсылкаООРП)
	НовыйДок = Документы.КомплектацияНоменклатуры.СоздатьДокумент();
	НовыйДок.ВидОперации	=	Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация;
	НовыйДок.Дата	=	СсылкаООРП.Дата - 1;
	НовыйДок.УстановитьНовыйНомер();
	НовыйДок.ДокументОснование	=	СсылкаООРП;
	
	НовыйДок.Комментарий =	"Создано через обработку "+ТекущаяДата();
	
	ЗаполнитьЗначенияСвойств(НовыйДок,СсылкаООРП,"Организация,Подразделение,Склад,ОтражатьВУправленческомУчете,ОтражатьВБухгалтерскомУчете,ОтражатьВНалоговомУчете");
	
	НовыйДок.Номенклатура				=	Строка.Номенклатура;
	НовыйДок.ХарактеристикаНоменклатуры	=	Строка.ХарактеристикаНоменклатуры;
	НовыйДок.Количество					=	Строка.Количество;
	НовыйДок.Коэффициент				=	Строка.ЕдИзм.Коэффициент;
	НовыйДок.ЕдиницаИзмерения			=	Строка.ЕдИзм;
	
	НоваяСтрока	=	НовыйДок.Комплектующие.Добавить();
	                          	
	НоваяСтрока.Номенклатура				=	Строка.НоменклатураЗамена;
	НоваяСтрока.ХарактеристикаНоменклатуры	=	Строка.ХарактеристикаНоменклатурыЗамена;
	НоваяСтрока.Количество					=	Строка.КоличествоЗамена;
	НоваяСтрока.Коэффициент					=	Строка.ЕдИзмЗамена.Коэффициент;
	НоваяСтрока.ЕдиницаИзмерения			=	Строка.ЕдИзмЗамена;
	
	
	Попытка
		НовыйДок.Записать(РежимЗаписиДокумента.Проведение);
		Возврат НовыйДок.Ссылка;
	Исключение
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Процедура   ДобавитьВПеремещение(Строка,СсылкаООРП, НовыйДок)	
	НоваяСтрока	=	НовыйДок.Товары.Добавить();
	                          	
	НоваяСтрока.Номенклатура				=	Строка.Номенклатура;
	НоваяСтрока.ХарактеристикаНоменклатуры	=	Строка.ХарактеристикаНоменклатуры;
	НоваяСтрока.Количество					=	Строка.Количество;
	НоваяСтрока.Коэффициент					=	Строка.ЕдИзм.Коэффициент;
	НоваяСтрока.ЕдиницаИзмерения			=	Строка.ЕдИзм;
	НоваяСтрока.Цена						=	Строка.Цена;
КонецПроцедуры

&НаКлиенте
Процедура СсылкаООРПНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.ТоварыИДокументы.Количество() >0 тогда
		Если Вопрос("Табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
			Объект.ТоварыИДокументы.Очистить();	
			СтандартнаяОбработка = Ложь;
		
			нФормаВыбора = Документы.ОтчетОРозничныхПродажах.ПолучитьФормуВыбора();
			нФормаВыбора.Отбор.Склад.ВидСравнения = ВидСравнения.Равно;
			нФормаВыбора.Отбор.Склад.Значение = ТорговаяТочка.ссылка;
			нФормаВыбора.Отбор.Склад.Использование = Истина;
			СсылкаООРП	=	нФормаВыбора.ОткрытьМодально(); 
		иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	иначе
		СтандартнаяОбработка = Ложь;
	
		нФормаВыбора = Документы.ОтчетОРозничныхПродажах.ПолучитьФормуВыбора();
		нФормаВыбора.Отбор.Склад.ВидСравнения = ВидСравнения.Равно;
		нФормаВыбора.Отбор.Склад.Значение = ТорговаяТочка.ссылка;
		нФормаВыбора.Отбор.Склад.Использование = Истина;
		СсылкаООРП	=	нФормаВыбора.ОткрытьМодально(); 	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТорговаяТочкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.ТоварыИДокументы.Количество() >0 тогда  
		Если Вопрос("Табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да тогда
			Объект.ТоварыИДокументы.Очистить();	
		иначе
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПровестиОтчет(Команда)
	Если ЗначениеЗаполнено(СсылкаООРП) тогда
		Попытка
			Об	=	СсылкаООРП.получитьОбъект();
			Об.Записать(РежимЗаписиДокумента.Проведение);
			Предупреждение("Успешно!");
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИДокументыПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено тогда
		ШтрихКод	=	ПолучитьШК(Элемент.ТекущиеДанные.Номенклатура,Элемент.ТекущиеДанные.ХарактеристикаНоменклатуры,Элемент.ТекущиеДанные.ЕдИзм);
	
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.НоменклатураЗамена) тогда
			ШтрихКодЗамена	=	ПолучитьШК(Элемент.ТекущиеДанные.НоменклатураЗамена,Элемент.ТекущиеДанные.ХарактеристикаНоменклатурыЗамена,Элемент.ТекущиеДанные.ЕдИзмЗамена);
			ОстатокЗамена	=	ПолучитьОстаток(Элемент.ТекущиеДанные.НоменклатураЗамена,Элемент.ТекущиеДанные.ХарактеристикаНоменклатурыЗамена,ТорговаяТочка,СсылкаООРП);
		иначе
			ОстатокЗамена 	= 0;
			ШтрихКодЗамена 	= "";
		КонецЕсли;
		
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШК(Номенклатура,ХарактеристикаНоменклатуры,Единица)
	ШК = УправлениеРозничнойТорговлей.ПолучитьШтрихКод(Номенклатура,Единица,ХарактеристикаНоменклатуры,,Справочники.Качество.Новый);
	Если ШК <> Неопределено тогда
		возврат ШК.штрихкод;
	иначе
		Возврат "";
	КонецЕсли;
КонецФункции
	

&НаСервереБезКонтекста
Функция ПолучитьОстаток(Номенклатура,ХарактеристикаНоменклатуры,Склад,СсылкаООРП)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТоварыВРозницеОстатки.КоличествоОстаток
	      	 	             |ИЗ
	      	 	             |	РегистрНакопления.ТоварыВРознице.Остатки(&дата, ) КАК ТоварыВРозницеОстатки
	      	 	             |ГДЕ
	      	 	             |	ТоварыВРозницеОстатки.Номенклатура = &Номенклатура
	      	 	             |	И ТоварыВРозницеОстатки.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	      	 	             |	И ТоварыВРозницеОстатки.Склад = &Склад");	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Дата", Новый Граница(СсылкаООРП.моментВремени(),ВидГраницы.Исключая));
	
	Рез = Запрос.Выполнить().Выгрузить();
	Если рез.Количество() >0 тогда
		Возврат Рез[0].КоличествоОстаток;
	иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТЗОстатков(Номенклатура,Склад,СсылкаООРП)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТоварыВРозницеОстатки.ХарактеристикаНоменклатуры как Характеристика,
	      	 	             |	ТоварыВРозницеОстатки.КоличествоОстаток как Остаток
	      	 	             |ИЗ
	      	 	             |	РегистрНакопления.ТоварыВРознице.Остатки(&дата, ) КАК ТоварыВРозницеОстатки
	      	 	             |ГДЕ
	      	 	             |	ТоварыВРозницеОстатки.Номенклатура = &Номенклатура
	      	 	             |	И ТоварыВРозницеОстатки.Склад = &Склад");	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Дата", Новый Граница(СсылкаООРП.моментВремени(),ВидГраницы.Исключая));
	
	Рез = Запрос.Выполнить().Выгрузить();
	Возврат Рез;
КонецФункции


&НаКлиенте
Процедура ТоварыИДокументыХарактеристикаНоменклатурыЗаменаПриИзменении(Элемент)
	ТекД	=	Элементы.ТоварыИДокументы.ТекущиеДанные;
	Если ТекД <> Неопределено тогда
		Если ЗначениеЗаполнено(ТекД.НоменклатураЗамена) тогда
			ШтрихКодЗамена	=	ПолучитьШК(ТекД.НоменклатураЗамена,ТекД.ХарактеристикаНоменклатурыЗамена,ТекД.ЕдИзмЗамена);
			ОстатокЗамена	=	ПолучитьОстаток(ТекД.НоменклатураЗамена,ТекД.ХарактеристикаНоменклатурыЗамена,ТорговаяТочка,СсылкаООРП);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыИДокументыНоменклатураЗаменаПриИзменении(Элемент)
	ТекД	=	Элементы.ТоварыИДокументы.ТекущиеДанные;
	Если ТекД <> Неопределено тогда
		Если ЗначениеЗаполнено(ТекД.НоменклатураЗамена) тогда
			ТекД.ЕдИзмЗамена	=	ТекД.НоменклатураЗамена.ЕдиницаХраненияОстатков;
			
			//Если  ТекД.НоменклатураЗамена.ВестиУчетПоХарактеристикам и не ЗначениеЗаполнено(ТекД.ХарактеристикаНоменклатурыЗамена) тогда
				ТЗ = ПолучитьТЗОстатков(ТекД.НоменклатураЗамена,ТорговаяТочка,СсылкаООРП);
				ТЗ.Колонки.Добавить("КолПодЗамену",ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(5,0),"Кол.под замену");
				Для каждого Строка из ТЗ цикл
					Строка.КолПодЗамену = ТекД.Количество;
				КонецЦикла;
				
				НужнаяСтрока = ТЗ.ВыбратьСтроку("Выберите характеристику");
				Если НужнаяСтрока <> Неопределено тогда
					//ТекД.ХарактеристикаНоменклатурыЗамена	=	НужнаяСтрока.ХарактеристикаНоменклатуры;
					ТекД.КоличествоЗамена	=	НужнаяСтрока.КолПодЗамену;
					НужнаяХар				=	НужнаяСтрока.Характеристика;					
				КонецЕсли;    	
			//КонецЕсли; 
			
			ШтрихКодЗамена	=	ПолучитьШК(ТекД.НоменклатураЗамена,ТекД.ХарактеристикаНоменклатурыЗамена,ТекД.ЕдИзмЗамена);
			ОстатокЗамена	=	ПолучитьОстаток(ТекД.НоменклатураЗамена,ТекД.ХарактеристикаНоменклатурыЗамена,ТорговаяТочка,СсылкаООРП);
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДолгиПодробно(Команда)
	Элементы.РКО.Видимость = НЕ Элементы.РКО.Видимость; 
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРКО(Команда)
	Док = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
	Док.Организация						=	СсылкаООРП.Организация;
	Док.ОтражатьВУправленческомУчете	=	Истина;
	Док.Касса							=	ПолучитьКассу();
	Док.ВидОперации						=	Перечисления.ВидыОперацийРКО.ВыдачаДенежныхСредствПодотчетнику;
	Док.ВалютаДокумента 				=	Док.Касса.ВалютаДенежныхСредств;
	Док.ДокументОснование 				=	СсылкаООРП;
	Док.Подразделение					=	СсылкаООРП.Подразделение;

	Док.ПолучитьФорму().ОткрытьМодально();
	

	Если ЗначениеЗаполнено(Док.Ссылка) тогда
		НоваяСтрока = Объект.РКО.Добавить();
		НоваяСтрока.Документ	= Док.Ссылка;
		НоваяСтрока.Подотчетник	= Док.Контрагент;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКассу()
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	Кассы.Ссылка
	      	 	             |ИЗ
	      	 	             |	Справочник.Кассы КАК Кассы
	      	 	             |ГДЕ
	      	 	             |	Кассы.Наименование = ""Долги""
	      	 	             |	И НЕ Кассы.ПометкаУдаления");
	//Запрос.УстановитьПараметр("Владелец",Организация);
	рез = Запрос.Выполнить().Выгрузить();
	Если рез.Количество() >0 тогда
		Возврат Рез[0].Ссылка;	
	иначе
		Возврат Справочники.Кассы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТоварыИДокументыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ЗначениеЗаполнено(НужнаяХар) тогда
		Элементы.ТоварыИДокументы.ТекущиеДанные.ХарактеристикаНоменклатурыЗамена	=	НужнаяХар;
		НужнаяХар = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦену(Номенклатура,ХарактеристикаНоменклатуры,СсылкаООРП)
	Отбор = Новый Структура;
	Отбор.Вставить("Номенклатура",Номенклатура);
	Отбор.Вставить("ХарактеристикаНоменклатуры",ХарактеристикаНоменклатуры);

	Строки =   СсылкаООРП.товары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() >0 тогда
		Возврат Строки[0].Цена;
	иначе
		Возврат 0;
	КонецЕсли;
	

КонецФункции