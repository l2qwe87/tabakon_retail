#Если Клиент Тогда
перем ВыбрСклад Экспорт ;
перем ДатаПечати;

// Процедура заполняет построитель отчета.
//
Процедура ЗаполнитьПостроительОтчета() Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ИСТИНА КАК Печать,
	|	СпрНоменклатура.Номенклатура КАК Номенклатура,
	|	СпрНоменклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СпрНоменклатура.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	0 КАК Цена,
	|	1 КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		СпрНоменклатура.Ссылка КАК Номенклатура,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры
	|	ИЗ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ГДЕ НЕ СпрНоменклатура.ЭтоГруппа
	|	{ГДЕ
	|		СпрНоменклатура.Ссылка.* КАК Номенклатура}
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		СпрХарактеристики.Владелец,
	|		СпрХарактеристики.Ссылка
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|	{ГДЕ
	|		СпрХарактеристики.Владелец.* КАК Номенклатура,
	|		СпрХарактеристики.Ссылка.* КАК ХарактеристикаНоменклатуры}
	|	) КАК СпрНоменклатура
	|";
	
//++ГРД 160318 (добавлен параметр "Склад")
//было:
	//Если ТолькоИмеющиесяВНаличии Тогда
	//	ТекстЗапроса = ТекстЗапроса + "
	//	|ЛЕВОЕ СОЕДИНЕНИЕ
	//	|	(ВЫБРАТЬ
	//	|		НаСкладе.Номенклатура,
	//	|		НаСкладе.ХарактеристикаНоменклатуры,
	//	|		СУММА(НаСкладе.Количество) КАК Количество
	//	|	ИЗ
	//	|		(ВЫБРАТЬ
	//	|			НаСкладе.Номенклатура,
	//	|			НаСкладе.ХарактеристикаНоменклатуры,
	//	|			НаСкладе.КоличествоОстаток КАК Количество
	//	|		ИЗ
	//	|			РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.* КАК Номенклатура,
	//	|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	//	|			   Склад.* КАК Склад}) КАК НаСкладе
	//	|		ОБЪЕДИНИТЬ ВСЕ
	//	|		ВЫБРАТЬ
	//	|			ВРознице.Номенклатура,
	//	|			ВРознице.ХарактеристикаНоменклатуры,
	//	|			ВРознице.КоличествоОстаток КАК Количество
	//	|		ИЗ
	//	|			РегистрНакопления.ТоварыВРознице.Остатки(, {Номенклатура.* КАК Номенклатура,
	//	|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	//	|			   Склад.* КАК Склад}) КАК ВРознице
	//	|		ОБЪЕДИНИТЬ ВСЕ
	//	|		ВЫБРАТЬ
	//	|			ВНТТ.Номенклатура,
	//	|			ВНТТ.ХарактеристикаНоменклатуры,
	//	|			ВНТТ.КоличествоОстаток КАК Количество
	//	|		ИЗ
	//	|			РегистрНакопления.ТоварыВНТТ.Остатки(, {Номенклатура.* КАК Номенклатура,
	//	|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
	//	|			   Склад.* КАК Склад}) КАК ВНТТ
	//	|		) КАК НаСкладе
	//	|	СГРУППИРОВАТЬ ПО
	//	|		НаСкладе.Номенклатура,
	//	|		НаСкладе.ХарактеристикаНоменклатуры
	//	|	) КАК НаСкладе
	//	|ПО
	//	|	СпрНоменклатура.Номенклатура = НаСкладе.Номенклатура
	//	|	И СпрНоменклатура.ХарактеристикаНоменклатуры = НаСкладе.ХарактеристикаНоменклатуры
	//	|ГДЕ
	//	|	ЕСТЬNULL(НаСкладе.Количество, 0) > 0
	//	|";
	//КонецЕсли;
//стало:	
	Если ТолькоИмеющиесяВНаличии Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	(ВЫБРАТЬ
		|		НаСкладе.Номенклатура,
		|		НаСкладе.ХарактеристикаНоменклатуры,
		|		СУММА(НаСкладе.Количество) КАК Количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			НаСкладе.Номенклатура,
		|			НаСкладе.ХарактеристикаНоменклатуры,
		|			НаСкладе.КоличествоОстаток КАК Количество
		|		ИЗ
		|			РегистрНакопления.ТоварыНаСкладах.Остатки(, {Номенклатура.* КАК Номенклатура,
		|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
		|			   Склад.* КАК Склад}) КАК НаСкладе
		|	   	ГДЕ
		|	   	НаСкладе.Склад = &Склад
		|		ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			ВРознице.Номенклатура,
		|			ВРознице.ХарактеристикаНоменклатуры,
		|			ВРознице.КоличествоОстаток КАК Количество
		|		ИЗ
		|			РегистрНакопления.ТоварыВРознице.Остатки(, {Номенклатура.* КАК Номенклатура,
		|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
		|			   Склад.* КАК Склад}) КАК ВРознице
		|			   ГДЕ
		|			   ВРознице.Склад = &Склад
		|		ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			ВНТТ.Номенклатура,
		|			ВНТТ.ХарактеристикаНоменклатуры,
		|			ВНТТ.КоличествоОстаток КАК Количество
		|		ИЗ
		|			РегистрНакопления.ТоварыВНТТ.Остатки(, {Номенклатура.* КАК Номенклатура,
		|			   ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры,
		|			   Склад.* КАК Склад}) КАК ВНТТ
		|			   ГДЕ
		|			   ВНТТ.Склад = &Склад
		|		) КАК НаСкладе
		|	СГРУППИРОВАТЬ ПО
		|		НаСкладе.Номенклатура,
		|		НаСкладе.ХарактеристикаНоменклатуры
		|	) КАК НаСкладе
		|ПО
		|	СпрНоменклатура.Номенклатура = НаСкладе.Номенклатура
		|	И СпрНоменклатура.ХарактеристикаНоменклатуры = НаСкладе.ХарактеристикаНоменклатуры
		|ГДЕ
		|	ЕСТЬNULL(НаСкладе.Количество, 0) > 0
		|";
	КонецЕсли;
	ПостроительОтчета.Параметры.Вставить("Склад", Склад);
//++ГРД
	
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	СпрНоменклатура.Номенклатура.Наименование,
	|	СпрНоменклатура.ХарактеристикаНоменклатуры.Наименование
	|";

	// Соответствие имен полей в запросе и их представлений в отчете.
	СтруктураПредставлениеПолей = Новый Структура(
	"Номенклатура,   ХарактеристикаНоменклатуры,    Склад",
	"Номенклатура", "Характеристика номенклатуры", "Склад");

	ПостроительОтчета.Текст = ТекстЗапроса;

	ПостроительОтчета.ЗаполнитьНастройки();

	// Создадим список доступных отборов.
	СоответствиеДоступныхОтборов = Новый Соответствие;
	СоответствиеДоступныхОтборов.Вставить("Номенклатура", 0);
	СоответствиеДоступныхОтборов.Вставить("ХарактеристикаНоменклатуры", 0);	
//++ГРД 150318 (отключен параметр отбора)
	//СоответствиеДоступныхОтборов.Вставить("Склад", 0);
//++ГРД
	Для Каждого ДоступноеПоле Из ПостроительОтчета.ДоступныеПоля Цикл
		Если СоответствиеДоступныхОтборов[ДоступноеПоле.Имя] =Неопределено Тогда
			ДоступноеПоле.Отбор = Ложь;
		Иначе
			ДоступноеПоле.Отбор = Истина;
		КонецЕсли;
	КонецЦикла;

	// Создадим массив отборов.
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("ХарактеристикаНоменклатуры");

	Для Каждого ЭлементОтбора Из МассивОтбора Цикл
		Если ПостроительОтчета.Отбор.Найти(ЭлементОтбора) = Неопределено Тогда
			ПостроительОтчета.Отбор.Добавить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;

	// Вызовем стандартную процедуру заполнения представлений.
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
КонецПроцедуры // ЗаполнитьПостроительОтчета()


// Процедура перезаполняет цены в табличной части.
//
Процедура ПерезаполнитьЦены() Экспорт

	СтруктураЗначений = Новый Структура;
	СтруктураЗначений.Вставить("НовыйТипЦен", ТипЦен);

	ЗапросПоЦенам = Ценообразование.СформироватьЗапросПоЦенам(СтруктураЗначений,
	   Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры,
	   Товары.ВыгрузитьКолонку("Номенклатура"),
	   РабочаяДата,
	   Неопределено).Выгрузить();
	ЗапросПоЦенам.Индексы.Добавить("Номенклатура");

	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ТипЦенРассчитывается = ТипЦен.Рассчитывается;

	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(Валюта, РабочаяДата);
	Курс = СтруктураКурса.Курс;
	Кратность = СтруктураКурса.Кратность;

	Для Каждого СтрокаТовара Из Товары Цикл
		ХарактеристикаНоменклатуры = СтрокаТовара.ХарактеристикаНоменклатуры;

		СтруктураПоиска = Новый Структура("Номенклатура", СтрокаТовара.Номенклатура);

		СтрокиЦен = ЗапросПоЦенам.НайтиСтроки(СтруктураПоиска);

		СтрокаБезХарактеристики = Неопределено;
		СтрокаСХарактеристикой = Неопределено;

		Для Каждого СтрокаЦен Из СтрокиЦен Цикл
			Если СтрокаЦен.ХарактеристикаНоменклатуры = ПустаяХарактеристика Тогда
				СтрокаБезХарактеристики = СтрокаЦен;
			ИначеЕсли СтрокаЦен.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры Тогда
				СтрокаСХарактеристикой = СтрокаЦен;
			КонецЕсли;
		КонецЦикла;

		Если СтрокаСХарактеристикой <> Неопределено Тогда
			НайденнаяСтрока = СтрокаСХарактеристикой;
		ИначеЕсли СтрокаБезХарактеристики <> Неопределено Тогда
			НайденнаяСтрока = СтрокаБезХарактеристики;
		Иначе
			НайденнаяСтрока = Неопределено;
		КонецЕсли;

		Если (НайденнаяСтрока <> Неопределено) И (НайденнаяСтрока.Цена <> 0) Тогда
			Цена = НайденнаяСтрока.Цена * (1 + ?(ТипЦенРассчитывается, НайденнаяСтрока.ПроцентСкидкиНаценки / 100, 0));
			Цена = Ценообразование.ОкруглитьЦену(Цена, ТипЦен.ПорядокОкругления, ТипЦен.ОкруглятьВБольшуюСторону);
			Цена = Ценообразование.ПересчитатьЦенуПриИзмененииВалюты(Цена, НайденнаяСтрока.ВалютаЦены, Валюта, Курс, Кратность);

			СтрокаТовара.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмеренияЦены;
		Иначе
			Цена = 0;
		КонецЕсли;

		СтрокаТовара.Цена = Цена;
	КонецЦикла;

КонецПроцедуры // ПерезаполнитьЦены()

//++ГРД начало
// Процедура перезаполняет цены в табличной части по ценам АТТ
//
Процедура ПерезаполнитьЦены_2(Склад) Экспорт

	СтруктураЗначений = Новый Структура;
	СтруктураЗначений.Вставить("НовыйТипЦен", ТипЦен);
	
	Если Склад.ВидСклада=Перечисления.ВидыСкладов.Оптовый или Склад=Null Тогда   
		ВидЦен=Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры;
	Иначе
		ВидЦен=Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам;
	КонецЕсли;	
		
	ЗапросПоЦенам = ЛК_Ценообразование.СформироватьЗапросПоЦенам(СтруктураЗначений,ВидЦен, Товары.ВыгрузитьКолонку("Номенклатура"),
	   РабочаяДата,Неопределено,,Склад).Выгрузить();
	ЗапросПоЦенам.Индексы.Добавить("Номенклатура");

	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ТипЦенРассчитывается = ТипЦен.Рассчитывается;

	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(Валюта, РабочаяДата);
	Курс = СтруктураКурса.Курс;
	Кратность = СтруктураКурса.Кратность;

	Для Каждого СтрокаТовара Из Товары Цикл
		ХарактеристикаНоменклатуры = СтрокаТовара.ХарактеристикаНоменклатуры;

		СтруктураПоиска = Новый Структура("Номенклатура", СтрокаТовара.Номенклатура);

		СтрокиЦен = ЗапросПоЦенам.НайтиСтроки(СтруктураПоиска);

		СтрокаБезХарактеристики = Неопределено;
		СтрокаСХарактеристикой = Неопределено;

		Для Каждого СтрокаЦен Из СтрокиЦен Цикл
			Если СтрокаЦен.ХарактеристикаНоменклатуры = ПустаяХарактеристика Тогда
				СтрокаБезХарактеристики = СтрокаЦен;
			ИначеЕсли СтрокаЦен.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры Тогда
				СтрокаСХарактеристикой = СтрокаЦен;
			КонецЕсли;
		КонецЦикла;

		Если СтрокаСХарактеристикой <> Неопределено Тогда
			НайденнаяСтрока = СтрокаСХарактеристикой;
		ИначеЕсли СтрокаБезХарактеристики <> Неопределено Тогда
			НайденнаяСтрока = СтрокаБезХарактеристики;
		Иначе
			НайденнаяСтрока = Неопределено;
		КонецЕсли;

		Если (НайденнаяСтрока <> Неопределено) И (НайденнаяСтрока.Цена <> 0) Тогда
			Цена = НайденнаяСтрока.Цена * (1 + ?(ТипЦенРассчитывается, НайденнаяСтрока.ПроцентСкидкиНаценки / 100, 0));
			Цена = Ценообразование.ОкруглитьЦену(Цена, ТипЦен.ПорядокОкругления, ТипЦен.ОкруглятьВБольшуюСторону);
			Цена = Ценообразование.ПересчитатьЦенуПриИзмененииВалюты(Цена, НайденнаяСтрока.ВалютаЦены, Валюта, Курс, Кратность);

			СтрокаТовара.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмеренияЦены;
		Иначе
			Цена = 0;
		КонецЕсли;

		СтрокаТовара.Цена = Цена;
	КонецЦикла;

КонецПроцедуры // ПерезаполнитьЦены()
//++ГРД конец

// Функция формирует табличный документ - печатная форма ценника.
//
// Возвращаемое значение:
//  ТабличныйДокумент - сформированный табличный документ или Неопределено, если есть ошибки.
//
Функция ПечатьЦенника(Параметр, чТЗ = Неопределено) Экспорт

// НЧАН	
// Параметр: 0 - печать 5х6, 1 - печать 3х3;
	Если Параметр = 0 Тогда
	 	 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 6;
	ИначеЕсли Параметр = 1 Тогда
		 КоличествоСтолбцов = 3;
		 КоличествоСтрок = 3;
    ИначеЕсли Параметр = 2 Тогда  //Балашева
		 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 11;  
	КонецЕсли;
	 
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не выбрана организация!");
		Возврат Неопределено;
	КонецЕсли;

	ТабДокумент                     = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Ценник";
	Если Параметр = 0 Тогда
	 	 Макет                      = ПолучитьМакет("Ценник2");
	ИначеЕсли Параметр = 1 Тогда
		 Макет                      = ПолучитьМакет("Ценник3");
	ИначеЕсли Параметр = 2 Тогда                               // Балашева
		 Макет                      = ПолучитьМакет("Ценник4"); 
	КонецЕсли;	
	//ОбластьЦенника                  = Макет.ПолучитьОбласть("Строка|Столбец");


	ДатаПечати = СсылкаДок.Дата;

	ТекСтолбец = 0;
	ТекСтрока  = 0;
	
	ЗП = Новый Запрос;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Товары.Выгрузить();
	
	ТЗ.Колонки.Добавить("НаименованиеНом", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	  //ТЗ.Колонки.Добавить("ШаблонПечати", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	ТЗ.Колонки.Добавить("ШаблонПечати", Новый ОписаниеТипов("ПеречислениеСсылка.ШаблоныПечатиЦенников",,,,,,)); // Балашева
	
	//ТЗ.Колонки.Добавить("ШтрихКод");
	Для Каждого Стр Из ТЗ Цикл
	//	Отбор = Новый Структура;
	//	Отбор.Вставить("Владелец", Стр.Номенклатура);
	//	ШтКод = РегистрыСведений.Штрихкоды.Выбрать(Отбор, "Убыв");
	//
		Стр.НаименованиеНом = Стр.Номенклатура.Наименование;
		
		Стр.ШаблонПечати = Стр.Номенклатура.ШаблонДляПечати;
		
	КонецЦикла;
	
	Если ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ПереоценкаТоваровВРознице") Тогда
		РЗ = чТЗ;
	ИначеЕсли ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ИнвентаризацияТоваровНаСкладе") Тогда
		РЗ = чТЗ;
	Иначе

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТаблЗн.ЕдиницаИзмерения КАК ЕдИзм,
			               |	ТаблЗн.Количество,
			               |	ТаблЗн.Номенклатура КАК НКЛ,
			               |	ТаблЗн.НомерСтроки КАК НомСтр,
			               |	ТаблЗн.Печать,
			               |	ТаблЗн.СтараяЦена,
			               |	ТаблЗн.ХарактеристикаНоменклатуры,
			               |	ТаблЗн.НаименованиеНом,
			               |	ТаблЗн.Цена,
						   |    ТаблЗн.ШаблонПечати
			               |ПОМЕСТИТЬ Номен
			               |ИЗ
			               |	&ТЗ КАК ТаблЗн
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Номен.ЕдИзм,
			               |	Номен.Количество,
			               |	Номен.НКЛ,
			               |	Номен.НомСтр,
			               |	Номен.Печать,
			               |	Номен.СтараяЦена,
			               |	Номен.ХарактеристикаНоменклатуры,
			               |	Номен.Цена,
			               |	ПеремещениеТоваровТовары.Штрихкод,
			               |	ПеремещениеТоваровТовары.ЕдиницаИзмерения,
			               |	Номен.НаименованиеНом,
						   |    Номен.ШаблонПечати
			               |ПОМЕСТИТЬ Номен2
			               |ИЗ
			               |	Номен КАК Номен
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
			               |		ПО Номен.НКЛ = ПеремещениеТоваровТовары.Номенклатура
			               |ГДЕ
			               |	ПеремещениеТоваровТовары.Ссылка = &СсылкаДок
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Номен.НКЛ,
			               |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
			               |	МАКСИМУМ(Штрихкоды.ТипШтрихкода) КАК ТипШтрихкода,
			               |	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения
			               |ПОМЕСТИТЬ ШК
			               |ИЗ
			               |	Номен2 КАК Номен
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
			               |		ПО Номен.НКЛ = Штрихкоды.Владелец
			               |			И Номен.ЕдИзм = Штрихкоды.ЕдиницаИзмерения
			               |ГДЕ
			               |	Штрихкоды.ТипШтрихкода = &ТипШтрихкода
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Номен.НКЛ,
			               |	Штрихкоды.ЕдиницаИзмерения
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Номен.НКЛ,
			               |	Номенклатура.НоменклатурнаяГруппа,
			               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория,
			               |	НаценкиНаНоменклатурныеГруппы.ПроцентНаценки
			               |ПОМЕСТИТЬ Цены
			               |ИЗ
			               |	Номен2 КАК Номен
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаценкиНаНоменклатурныеГруппы КАК НаценкиНаНоменклатурныеГруппы
			               |			ПО Номенклатура.НоменклатурнаяГруппа = НаценкиНаНоменклатурныеГруппы.НоменклатурнаяГруппа
			               |		ПО Номен.НКЛ = Номенклатура.Ссылка
			               |ГДЕ
			               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория = &ЦеноваяКатегория
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Номен.НКЛ,
			               |	Номенклатура.НоменклатурнаяГруппа,
			               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория,
			               |	НаценкиНаНоменклатурныеГруппы.ПроцентНаценки
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Номен.НКЛ КАК Номенклатура,
			               |	Номен.ЕдИзм КАК ЕдиницаИзмерения,
			               |	Номен.Количество,
			               |	Номен.НомСтр КАК НомерСтроки,
			               |	Номен.Печать,
			               |	Номен.СтараяЦена,
			               |	Номен.ХарактеристикаНоменклатуры,
			               |	Номен.Цена,
			               |	ШК.Штрихкод КАК ШтрихкодИзРегистра,
			               |	ШК.ТипШтрихкода КАК ТипШтрихкодаИзРегистра,
			               |	Цены.ЦеноваяКатегория,
			               |	Цены.ПроцентНаценки,
			               |	Номен.Штрихкод КАК ШтрихкодИзДокумента,
			               |	Номен.ЕдиницаИзмерения КАК ЕдиницаИзмеренияИзДокумента,
			               |	ПеремещениеТоваровТовары.Цена КАК ЦенаРознич,
			               |	Номен.НаименованиеНом КАК НаименованиеНом,
						   |    Номен.ШаблонПечати       
			               |ИЗ
			               |	Номен2 КАК Номен
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ШК КАК ШК
			               |		ПО Номен.НКЛ = ШК.НКЛ
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
			               |		ПО Номен.НКЛ = Цены.НКЛ
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
			               |		ПО Номен.НКЛ = ПеремещениеТоваровТовары.Номенклатура
			               |			И Номен.ХарактеристикаНоменклатуры = ПеремещениеТоваровТовары.ХарактеристикаНоменклатуры
			               |ГДЕ
			               |	ПеремещениеТоваровТовары.Ссылка = &СсылкаДок
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	Номен.НКЛ,
			               |	Номен.ЕдИзм,
			               |	Номен.Количество,
			               |	Номен.НомСтр,
			               |	Номен.Печать,
			               |	Номен.СтараяЦена,
			               |	Номен.ХарактеристикаНоменклатуры,
			               |	Номен.Цена,
			               |	ШК.Штрихкод,
			               |	ШК.ТипШтрихкода,
			               |	Цены.ЦеноваяКатегория,
			               |	Номен.Штрихкод,
			               |	Номен.ЕдиницаИзмерения,
			               |	Цены.ПроцентНаценки,
			               |	ПеремещениеТоваровТовары.Цена,
			               |	Номен.НаименованиеНом,
						   |    Номен.ШаблонПечати 
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	НаименованиеНом";
			
			Запрос.УстановитьПараметр("ТЗ", ТЗ);     
			Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
			Запрос.УстановитьПараметр("ЦеноваяКатегория", ТипЦен.ЦеноваяКатегория);
			Запрос.УстановитьПараметр("СсылкаДок", СсылкаДок);
			РЗ = Запрос.Выполнить().Выгрузить();
		КонецЕсли;	
		
		Если Параметр = 3 Тогда
			
		 ТабДокумент = ПечатьЦенниковРазныхШаблонов(РЗ);
		 //возврат ТаблДокумент;
			
		Иначе 
	
// НЧАН     
    ОбластьЦенника                  = Макет.ПолучитьОбласть("Строка|Столбец");
	
	СформироватьТабличныйДокумент(РЗ, ТабДокумент, Параметр, Макет, ТекСтолбец, ТекСтрока, КоличествоСтолбцов, КоличествоСтрок);
	
//	Для Каждого СтрокаТаблицы Из РЗ Цикл
//		Если СтрокаТаблицы.Печать Тогда 
//// НЧАН
//			//Если СтрокаТаблицы.Штрихкод = NULL Тогда
//			Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) < 2 Тогда
//				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2");  
//			Иначе
//				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец");
//			КонецЕсли;
//// КЧАН			
//			Для Тмп = 1 По СтрокаТаблицы.Количество Цикл
//				
//				ДатаПечати = Формат(ДатаПечати, "ДФ=dd.MM.yy");	
//				ОбластьЦенника.Параметры.Заполнить(СтрокаТаблицы);
//				
//				Индекс1 = СтрДлина(СтрокаТаблицы.Номенклатура.НаименованиеПолное);       // НЧАН
//				Индекс2 = Найти(НРег(СтрокаТаблицы.Номенклатура.НаименованиеПолное), "пр-во");
//				СтранаПр = СокрЛП(Прав(СтрокаТаблицы.Номенклатура.НаименованиеПолное,  Индекс1-Индекс2));
//				Если Индекс2 <> 0 Тогда
//					Номенкл  = СокрЛП(Лев(СтрокаТаблицы.Номенклатура.НаименованиеПолное, Индекс2-1));
//				Иначе
//					Номенкл = СокрЛП(СтрокаТаблицы.Номенклатура.НаименованиеПолное);
//				КонецЕсли;
//				ОбластьЦенника.Параметры.ОписаниеНоменклатуры            = Номенкл + Символы.ПС; //" " +СтрокаТаблицы.ХарактеристикаНоменклатуры; 
//				ОбластьЦенника.Параметры.ПрВо						 	 = "П" + СтранаПр; 
//				//ОбластьЦенника.Параметры.НоменклатураНаименование        = СтрокаТаблицы.Номенклатура.НаименованиеПолное;
////				ОбластьЦенника.Параметры.ХарактеристикаНаименование      = СтрокаТаблицы.ХарактеристикаНоменклатуры;
//				ОбластьЦенника.Параметры.ЕдиницаНаименование             = СтрокаТаблицы.ЕдиницаИзмеренияИзДокумента;
////				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Цена, , "00");
//// НЧАН
//				//Цена = РасчетЦеныПоЦеновымГруппам (СтрокаТаблицы.Номенклатура, ТипЦен, СтрокаТаблицы.ПроцентНаценки);
//				Цена = СтрокаТаблицы.ЦенаРознич;
//				//строкаЦена = Строка(Формат(Цена, "ЧДЦ=2"));
//				//СтрокаЦена = СтрЗаменить(СтрокаЦена, ",", " руб ");
//				//СтрокаЦена = СтрокаЦена + " руб";
//				
//				//Балашева
//				Если Параметр = 2 Тогда
//					Цена = ОбщегоНазначения.ФорматСумм(Цена,,"00");
//					Рубли = Цел(Цена);
//                    Копейки = (Цена - Рубли) * 100;
//					Если СтрДлина(Копейки)< 2 Тогда
//					Копейки = Строка(Копейки) + "0";	
//				КонецЕсли;
//				    Рубли = Формат(Цел(Цена), "ЧГ=0");
//					ОбластьЦенника.Параметры.Цена = Рубли;
//					ОбластьЦенника.Параметры.Копейки = Копейки;
//				Иначе  
//				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(Цена, , "00");
//				КонецЕсли;
//// КЧАН
//				ОбластьЦенника.Параметры.Валюта 						 = "руб";//ОбщегоНазначения.ФорматСумм(,Валюта,);
//				ОбластьЦенника.Параметры.ДатаПечати                      = ДатаПечати;
////				ОбластьЦенника.Параметры.Организация                     = Организация;
//				ОбластьЦенника.Параметры.ОрганизацияНаименование         = ИПпоСкладу;                        // Организация;
////				ОбластьЦенника.Параметры.НоменклатураСтранаПроисхождения = СтрокаТаблицы.Номенклатура.СтранаПроисхождения;

////				Если СтрокаТаблицы.Штрихкод <> NULL Тогда    // НЧАН 
//Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) > 2 Тогда
//	            Если Параметр = 2 Тогда
//					ОбластьЦенника.Параметры.ШК =СтрокаТаблицы.ШтрихкодИзДокумента;
//				КонецЕсли;
//					РисунокШтрихКод = ОбластьЦенника.Рисунки.D1;
//					ЗаполнитьРисунокШтрихКодом(РисунокШтрихКод, СтрокаТаблицы.ШтрихкодИзДокумента);
//					//Балашева 22.08
//					Если Параметр = 2 Тогда
//						РисунокШтрихКод.Объект.ОтображатьТекст = Ложь;
//					КонецЕсли;
//					//--

////				    ЗаполнитьРисунокШтрихКодом(СтрокаТаблицы.Штрихкод, СтрокаТаблицы.ТипШтрихкода, РисунокШтрихКод);
//				КонецЕсли;

//				Если ТекСтолбец = 0 Тогда
//					ТабДокумент.Вывести(ОбластьЦенника);
//				Иначе
//					ТабДокумент.Присоединить(ОбластьЦенника);
//				КонецЕсли;

//				ТекСтолбец = ТекСтолбец + 1;

//				Если ТекСтолбец = КоличествоСтолбцов Тогда
//					ТекСтрока  = ТекСтрока + 1;
//					ТекСтолбец = 0;
//				КонецЕсли;

//				Если ТекСтрока = КоличествоСтрок Тогда
//					ТекСтрока = 0;
//					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
//				КонецЕсли;
//			КонецЦикла;
//		КонецЕсли;
//	КонецЦикла;
	
	КВО = РЗ.Количество();
	Если КВО < КоличествоСтолбцов Тогда 
		Сч = КоличествоСтолбцов - КВО;
		Пока Сч > 0 Цикл
		ОбластьСтолбец = Макет.ПолучитьОбласть("Строка|Столбец1");
		ТабДокумент.Присоединить(ОбластьСтолбец);	
		Сч = Сч - 1;
		КонецЦикла;
	КонецЕсли;
	
	//Балашева
		
	ТабДокумент.НижнийКолонтитул.НачальнаяСтраница = 1;
	Если   ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ИнвентаризацияТоваровНаСкладе") или ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ПереоценкаТоваровВРознице") Тогда
		ТабДокумент.НижнийКолонтитул.ТекстСлева = "Документ № " + СсылкаДок.Номер + " от " + СсылкаДок.Дата + " Получатель: " + СсылкаДок.Склад;     
	Иначе  		
    ТабДокумент.НижнийКолонтитул.ТекстСлева = "Документ № " + СсылкаДок.Номер + " от " + СсылкаДок.Дата + " Получатель: " + СсылкаДок.СкладПолучатель;
	КонецЕсли;
	ТабДокумент.НижнийКолонтитул.Выводить = Истина;  		
    ТабДокумент.РазмерКолонтитулаСнизу = 10; 
	//--

		
	ТабДокумент.ТолькоПросмотр = Истина;
//	ТабДокумент.АвтоМасштаб = Истина;
    КонецЕсли;
	Возврат ТабДокумент;

КонецФункции // ПечатьЦенника()

//Балашева
Функция ПечатьЦенниковРазныхШаблонов(ТабЗнач)
	
	Шаблон3х3 = Новый Массив; //ПарамШаблона = 1
	Шаблон5х6 = Новый Массив; //ПарамШаблона = 0
	ШаблонМал = Новый Массив; //ПарамШаблона = 2
	ШаблонМалБезШК = Новый Массив; //ПарамШаблона = 3
	
	Для Каждого Стр ИЗ ТабЗнач Цикл
		Если Стр.ШаблонПечати = Перечисления.ШаблоныПечатиЦенников.Ш3х3 Тогда
			Шаблон3х3.Добавить(Стр);
		ИначеЕсли Стр.ШаблонПечати	= Перечисления.ШаблоныПечатиЦенников.Ш5х6 Тогда
			Шаблон5х6.Добавить(Стр);
		ИначеЕсли Стр.ШаблонПечати = Перечисления.ШаблоныПечатиЦенников.Шмал Тогда
			ШаблонМал.Добавить(Стр);
		ИначеЕсли Стр.ШаблонПечати = Перечисления.ШаблоныПечатиЦенников.ШмалБезШК Тогда
			ШаблонМалБезШК.Добавить(Стр)	
		Иначе
			Шаблон5х6.Добавить(Стр);
		КонецЕсли;	 
	КонецЦикла;
	//МассивТабДок = Новый Массив;
	ДокументОбщий = Новый ТабличныйДокумент;
	ТабДок                     = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Ценник"; 
	
	Если Шаблон5х6.Количество() > 0 Тогда
		ТабДок5х6 = 	ОформлениеТабДок(Шаблон5х6, 0, ТабДок);
		//ЗадатьФорматСтрок(ТабДок5х6);
		ДокументОбщий .Вывести(ТабДок5х6);
		//ДокументОбщий.Показать();
		ДокументОбщий .ВывестиГоризонтальныйРазделительСтраниц();
		//МассивТабДок.Добавить(ТабДок5х6);
	КонецЕсли;
	
	Если Шаблон3х3.Количество() > 0 Тогда
		ТабДок.Очистить();
		ТабДок3х3 = 	ОформлениеТабДок(Шаблон3х3, 1, ТабДок);
		ЗадатьФорматСтрок(ТабДок3х3);
		ДокументОбщий .Вывести(ТабДок3х3);
		ДокументОбщий .ВывестиГоризонтальныйРазделительСтраниц();
		//МассивТабДок.Добавить(ТабДок3х3);
	КонецЕсли;
	Если ШаблонМал.Количество() > 0 Тогда
		ТабДок.Очистить();
		ТабДокМал = 	ОформлениеТабДок(ШаблонМал, 2, ТабДок);
		//ЗадатьФорматСтрок(ТабДокМал);
		ДокументОбщий .Вывести(ТабДокМал);
		ДокументОбщий .ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	Если ШаблонМалБезШК.Количество() > 0 Тогда
		ТабДок.Очистить();
		ТабДокМалБезШК = 	ОформлениеТабДок(ШаблонМалБезШК, 3, ТабДок);
		//ЗадатьФорматСтрок(ТабДокМалБезШК);
		ДокументОбщий .Вывести(ТабДокМалБезШК);
		ДокументОбщий .ВывестиГоризонтальныйРазделительСтраниц();
		
		//МассивТабДок.Добавить(ТабДокМал);
		//ЗадатьФорматСтрок(ТабДокМал); //Новая процедура 
	КонецЕсли; 
	
	Возврат ДокументОбщий;
	//Возврат ТабДокМал;	 
КонецФункции

Функция ОформлениеТабДок(МассивШаблон, ПарамШаблона, ТабДокумент)   
	
	ТекСтолбец = 0;
	ТекСтрока  = 0;
	Если ПарамШаблона = 0 Тогда
	 	 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 6;
	ИначеЕсли ПарамШаблона = 1 Тогда
		 КоличествоСтолбцов = 2;
		 КоличествоСтрок = 3;
	 ИначеЕсли ПарамШаблона = 2 Тогда  
		 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 11;
	 ИначеЕсли ПарамШаблона = 3 Тогда  
		 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 11;	 
	 КонецЕсли; 
	 
	 Если не ЗначениеЗаполнено(ДатаПечати) тогда //Условие добавил Вик 2020_09_30
		 ДатаПечати = РабочаяДата;
	КонецЕсли;
	 
	 Если ПарамШаблона = 0 Тогда
		 Макет                      = ПолучитьМакет("Ценник2");
	 ИначеЕсли ПарамШаблона = 1 Тогда
		 Макет                      = ПолучитьМакет("Ценник3");
	 ИначеЕсли ПарамШаблона = 2 Тогда 
		 //ИначеЕсли ПарамШаблона = 2 Тогда
		 Макет                      = ПолучитьМакет("Ценник4"); 
	 ИначеЕсли  ПарамШаблона = 3 Тогда 
		 Макет                      = ПолучитьМакет("Ценник5");	 
	 КонецЕсли;

		
	СформироватьТабличныйДокумент(МассивШаблон, ТабДокумент, ПарамШаблона, Макет, ТекСтолбец, ТекСтрока, КоличествоСтолбцов, КоличествоСтрок);

	//Для Каждого СтрокаТаблицы Из МассивШаблон Цикл
	//	Если СтрокаТаблицы.Печать Тогда 
	//		
	//		Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) < 2 Тогда
	//			ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2");  
	//		Иначе
	//			//Если ПарамШаблона = 3 Тогда
	//			//	ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2"); 
	//			//Иначе
	//				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец");
	//			//КонецЕсли;
	//		КонецЕсли;
	//	
	//		Для Тмп = 1 По СтрокаТаблицы.Количество Цикл
	//			
	//			ДатаПечати = Формат(ДатаПечати, "ДФ=dd.MM.yy");	
	//			ОбластьЦенника.Параметры.Заполнить(СтрокаТаблицы);
	//			
	//			Индекс1 = СтрДлина(СтрокаТаблицы.Номенклатура.НаименованиеПолное);       
	//			Индекс2 = Найти(НРег(СтрокаТаблицы.Номенклатура.НаименованиеПолное), "пр-во");
	//			СтранаПр = СокрЛП(Прав(СтрокаТаблицы.Номенклатура.НаименованиеПолное,  Индекс1-Индекс2));
	//			Если Индекс2 <> 0 Тогда
	//				Номенкл  = СокрЛП(Лев(СтрокаТаблицы.Номенклатура.НаименованиеПолное, Индекс2-1));
	//			Иначе
	//				Номенкл = СокрЛП(СтрокаТаблицы.Номенклатура.НаименованиеПолное);
	//			КонецЕсли;
	//			ОбластьЦенника.Параметры.ОписаниеНоменклатуры            = Номенкл + Символы.ПС; //" " +СтрокаТаблицы.ХарактеристикаНоменклатуры; 
	//			ОбластьЦенника.Параметры.ПрВо						 	 = "П" + СтранаПр; 
	//			ОбластьЦенника.Параметры.ЕдиницаНаименование             = СтрокаТаблицы.ЕдиницаИзмеренияИзДокумента;
	//			Цена = СтрокаТаблицы.ЦенаРознич;
	//			Если  ПарамШаблона = 2 Тогда
	//				Цена = ОбщегоНазначения.ФорматСумм(Цена,,"00");
	//				Рубли = Цел(Цена);
	//                Копейки = (Цена - Рубли) * 100;
	//				Если СтрДлина(Копейки)< 2 Тогда
	//				Копейки = Строка(Копейки) + "0";	
	//			КонецЕсли;
	//			    Рубли = Формат(Цел(Цена), "ЧГ=0");
	//				ОбластьЦенника.Параметры.Цена = Рубли;
	//				ОбластьЦенника.Параметры.Копейки = Копейки;
	//			Иначе
	//				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(Цена, , "00"); 
	//				КонецЕсли;
	//			ОбластьЦенника.Параметры.Валюта 						 = "руб";       //ОбщегоНазначения.ФорматСумм(,Валюта,);
	//			ОбластьЦенника.Параметры.ДатаПечати                      = ДатаПечати;
	//			ОбластьЦенника.Параметры.ОрганизацияНаименование         = ИПпоСкладу;                        // Организация;
	//			Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) > 2 Тогда
	//				Если ПарамШаблона = 2  Тогда
	//				//Если ПарамШаблона = 2 Или ПарамШаблона = 3 Тогда	
	//					ОбластьЦенника.Параметры.ШК =СтрокаТаблицы.ШтрихкодИзДокумента;
	//				КонецЕсли;
	//				//Если Не ПарамШаблона = 3 Тогда
	//					РисунокШтрихКод = ОбластьЦенника.Рисунки.D1;
	//					ЗаполнитьРисунокШтрихКодом(РисунокШтрихКод, СтрокаТаблицы.ШтрихкодИзДокумента);
	//					Если ПарамШаблона = 2 Тогда
	//						РисунокШтрихКод.Объект.ОтображатьТекст = Ложь;
	//					КонецЕсли;
	//				//КонецЕсли;
	//			КонецЕсли;

	//			Если ТекСтолбец = 0 Тогда
	//				ТабДокумент.Вывести(ОбластьЦенника);
	//				//Табдокумент.Рисунки.D1.Объект.УстановитьШрифт("Arial",3);
	//			Иначе
	//				ТабДокумент.Присоединить(ОбластьЦенника);
	//				//Табдокумент.Рисунки.D1.Объект.УстановитьШрифт("Arial",3)
	//			КонецЕсли;

	//			ТекСтолбец = ТекСтолбец + 1;

	//			Если ТекСтолбец = КоличествоСтолбцов Тогда
	//				ТекСтрока  = ТекСтрока + 1;
	//				ТекСтолбец = 0;
	//			КонецЕсли;

	//			Если ТекСтрока = КоличествоСтрок Тогда
	//				ТекСтрока = 0;
	//				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//			КонецЕсли;
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЦикла;
	
	КВО = МассивШаблон.Количество();
	Если КВО < КоличествоСтолбцов Тогда 
		Сч = КоличествоСтолбцов - КВО;
		Пока Сч > 0 Цикл
		ОбластьСтолбец = Макет.ПолучитьОбласть("Строка|Столбец1");
		ТабДокумент.Присоединить(ОбластьСтолбец);	
		Сч = Сч - 1;
		КонецЦикла;
	КонецЕсли;
	
	ТабДокумент.НижнийКолонтитул.НачальнаяСтраница = 1;
	Если   ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ИнвентаризацияТоваровНаСкладе") или ТипЗнч(СсылкаДок) = Тип("ДокументСсылка.ПереоценкаТоваровВРознице") Тогда
		ТабДокумент.НижнийКолонтитул.ТекстСлева = "Документ № " + СсылкаДок.Номер + " от " + СсылкаДок.Дата + " Получатель: " + СсылкаДок.Склад;     
	Иначе 
    ТабДокумент.НижнийКолонтитул.ТекстСлева = "Документ № " + СсылкаДок.Номер + " от " + СсылкаДок.Дата + " Получатель: " + СсылкаДок.СкладПолучатель;
	КонецЕсли;
	ТабДокумент.НижнийКолонтитул.Выводить = Истина;  		
    ТабДокумент.РазмерКолонтитулаСнизу = 10; 
	//--
	
	ТабДокумент.ТолькоПросмотр = Истина;

	
	Возврат ТабДокумент;
КонецФункции

Процедура ЗадатьФорматСтрок(прТаб)

лкКоличествоСтрок = прТаб.ВысотаТаблицы;
лкКоличествоКолонок = прТаб.ШиринаТаблицы;
лкШирина1 = "";
лкШирина2 = "";
лкСтрока1 = 0;
лкСтрока2 = 0;
Для лкСтр=1 По лкКоличествоСтрок Цикл

лкШирина2 = "";
Для лкКол=1 По лкКоличествоКолонок Цикл
лкШирина2 = лкШирина2 + "," + прТаб.Область(лкСтр,лкКол).ШиринаКолонки;
КонецЦикла;
Если лкШирина1 = лкШирина2 Тогда
лкСтрока2 = лкСтрока2 + 1;
Иначе
Если лкСтрока1 <> 0 Тогда
прТаб.Область(лкСтрока1,,лкСтрока2).СоздатьФорматСтрок();
КонецЕсли;
лкШирина1 = лкШирина2;
лкСтрока1 = лкСтр;
лкСтрока2 = лкСтр;
КонецЕсли;

КонецЦикла;

Если лкСтрока1 <> 0 Тогда
прТаб.Область(лкСтрока1,,лкСтрока2).СоздатьФорматСтрок();
КонецЕсли;

КонецПроцедуры   

Процедура СформироватьТабличныйДокумент(Данные, ТабДокумент, Параметр, Макет, ТекСтолбец, ТекСтрока, КоличествоСтолбцов, КоличествоСтрок)

	Для Каждого СтрокаТаблицы Из Данные Цикл
		Если СтрокаТаблицы.Печать Тогда			
			//Вик 20200921
			Попытка
				Если  СтрокаТаблицы.ШаблонПечати = Перечисления.ШаблоныПечатиЦенников.Шмал Тогда
					Если СтрДлина(цел(СтрокаТаблицы.ЦенаРознич)) > 5 тогда						
						Макет.Область("R5C4").Шрифт = Новый Шрифт(Макет.Область("R5C4").Шрифт, , 13);
					иначе
						Макет.Область("R5C4").Шрифт = Новый Шрифт(Макет.Область("R5C4").Шрифт, , 16);
					КонецЕсли; 
				КонецЕсли;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			//КонецВик  
				
			// НЧАН
			//Если СтрокаТаблицы.Штрихкод = NULL Тогда
			Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) < 2 Тогда
				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2");  
			Иначе
				Если Параметр = 3 Тогда
					ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2"); 
				Иначе
					ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец");
				КонецЕсли;
			КонецЕсли;
			// КЧАН			
			Для Тмп = 1 По СтрокаТаблицы.Количество Цикл
				
				ДатаПечати = Формат(ДатаПечати, "ДФ=dd.MM.yy");	
				ОбластьЦенника.Параметры.Заполнить(СтрокаТаблицы);
				
				Индекс1 = СтрДлина(СтрокаТаблицы.Номенклатура.НаименованиеПолное);       // НЧАН
				Индекс2 = Найти(НРег(СтрокаТаблицы.Номенклатура.НаименованиеПолное), "пр-во");
				СтранаПр = СокрЛП(Прав(СтрокаТаблицы.Номенклатура.НаименованиеПолное,  Индекс1-Индекс2));
				Если Индекс2 <> 0 Тогда
					Номенкл  = СокрЛП(Лев(СтрокаТаблицы.Номенклатура.НаименованиеПолное, Индекс2-1));
				Иначе
					Номенкл = СокрЛП(СтрокаТаблицы.Номенклатура.НаименованиеПолное);
				КонецЕсли;
				ОбластьЦенника.Параметры.ОписаниеНоменклатуры            = Номенкл + Символы.ПС; //" " +СтрокаТаблицы.ХарактеристикаНоменклатуры; 
				ОбластьЦенника.Параметры.ПрВо						 	 = "П" + СтранаПр; 
				//ОбластьЦенника.Параметры.НоменклатураНаименование        = СтрокаТаблицы.Номенклатура.НаименованиеПолное;
				//				ОбластьЦенника.Параметры.ХарактеристикаНаименование      = СтрокаТаблицы.ХарактеристикаНоменклатуры;
				ОбластьЦенника.Параметры.ЕдиницаНаименование             = СтрокаТаблицы.ЕдиницаИзмеренияИзДокумента;
				//				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Цена, , "00");
				// НЧАН
				//Цена = РасчетЦеныПоЦеновымГруппам (СтрокаТаблицы.Номенклатура, ТипЦен, СтрокаТаблицы.ПроцентНаценки);
				Цена = СтрокаТаблицы.ЦенаРознич;
				//строкаЦена = Строка(Формат(Цена, "ЧДЦ=2"));
				//СтрокаЦена = СтрЗаменить(СтрокаЦена, ",", " руб ");
				//СтрокаЦена = СтрокаЦена + " руб";
				
				//Балашева
				Если Параметр = 2 Или Параметр = 3 Тогда
					Цена = ОбщегоНазначения.ФорматСумм(Цена,,"00");
					Рубли = Цел(Цена);
					Копейки = (Цена - Рубли) * 100;
					Если СтрДлина(Копейки)< 2 Тогда
						Копейки = Строка(Копейки) + "0";	
					КонецЕсли;
					//Рубли = Формат(Цел(Цена), "ЧГ=0");
					Если Параметр = 2 Тогда 
						Рубли = Формат(Цел(Цена), "ЧГ=0");
					ИначеЕсли  Параметр = 3 Тогда
						Рубли = Формат(Цел(Цена), "ЧГ=0, ЧРГ= ");
					КонецЕсли;
					ОбластьЦенника.Параметры.Цена = Рубли;
					ОбластьЦенника.Параметры.Копейки = Копейки;
				Иначе  
					ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(Цена, , "00");
				КонецЕсли;
				// КЧАН
				ОбластьЦенника.Параметры.Валюта 						 = "руб";//ОбщегоНазначения.ФорматСумм(,Валюта,);
				ОбластьЦенника.Параметры.ДатаПечати                      = ДатаПечати;
				//				ОбластьЦенника.Параметры.Организация                     = Организация;
				ОбластьЦенника.Параметры.ОрганизацияНаименование         = ИПпоСкладу;                        // Организация;
				//				ОбластьЦенника.Параметры.НоменклатураСтранаПроисхождения = СтрокаТаблицы.Номенклатура.СтранаПроисхождения;
				
				//				Если СтрокаТаблицы.Штрихкод <> NULL Тогда    // НЧАН 
				Если СтрДлина(СтрокаТаблицы.ШтрихкодИзДокумента) > 2 Тогда
					//Если Параметр = 2 Тогда
					//	ОбластьЦенника.Параметры.ШК =СтрокаТаблицы.ШтрихкодИзДокумента;
					//КонецЕсли;
					//	РисунокШтрихКод = ОбластьЦенника.Рисунки.D1;
					//	ЗаполнитьРисунокШтрихКодом(РисунокШтрихКод, СтрокаТаблицы.ШтрихкодИзДокумента);
					//	//Балашева 22.08
					//	Если Параметр = 2 Тогда
					//		РисунокШтрихКод.Объект.ОтображатьТекст = Ложь;
					//	КонецЕсли;
					Если Параметр = 2 Или Параметр = 3 Тогда	
						ОбластьЦенника.Параметры.ШК =СтрокаТаблицы.ШтрихкодИзДокумента;
					КонецЕсли;
					Если Не Параметр = 3 Тогда
						РисунокШтрихКод = ОбластьЦенника.Рисунки.D1;
						ЗаполнитьРисунокШтрихКодом(РисунокШтрихКод, СтрокаТаблицы.ШтрихкодИзДокумента);
						Если Параметр = 2 Тогда
							РисунокШтрихКод.Объект.ОтображатьТекст = Ложь;
						КонецЕсли;
					КонецЕсли;
								
					//--
					
					//				    ЗаполнитьРисунокШтрихКодом(СтрокаТаблицы.Штрихкод, СтрокаТаблицы.ТипШтрихкода, РисунокШтрихКод);
				КонецЕсли;
				
				Если ТекСтолбец = 0 Тогда
					ТабДокумент.Вывести(ОбластьЦенника);
				Иначе
					ТабДокумент.Присоединить(ОбластьЦенника);
				КонецЕсли;
				
				ТекСтолбец = ТекСтолбец + 1;
				
				Если ТекСтолбец = КоличествоСтолбцов Тогда
					ТекСтрока  = ТекСтрока + 1;
					ТекСтолбец = 0;
				КонецЕсли;
				
				Если ТекСтрока = КоличествоСтрок Тогда
					ТекСтрока = 0;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры   


//++ГРД начало
//Выполняется при запуске печати ценника из формы обработки "Печать ценников"
// Функция формирует табличный документ - печатная форма ценника.
//
// Возвращаемое значение:
//  ТабличныйДокумент - сформированный табличный документ или Неопределено, если есть ошибки.
//
Функция ПечатьЦенникаИзОбработки(Параметр, чТЗ = Неопределено) Экспорт

// НЧАН	
// Параметр: 0 - печать 5х6, 1 - печать 3х3;
	Если Параметр = 0 Тогда
	 	 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 6;
	ИначеЕсли Параметр = 1 Тогда
		 КоличествоСтолбцов = 3;
		 КоличествоСтрок = 3;
	ИначеЕсли Параметр = 2 Тогда
		 КоличествоСтолбцов = 5;
		 КоличествоСтрок = 6;	 
	КонецЕсли;
	 
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не выбрана организация!");
		Возврат Неопределено;
	КонецЕсли;

	ТабДокумент                     = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Ценник";
	Если Параметр = 0 Тогда
	 	 Макет                      = ПолучитьМакет("Ценник2");
	ИначеЕсли Параметр = 1 Тогда
		 Макет                      = ПолучитьМакет("Ценник3");
	ИначеЕсли Параметр = 2 Тогда                                //Балашева
		 Макет                      = ПолучитьМакет("Ценник4");   	 
	КонецЕсли;	
	ОбластьЦенника                  = Макет.ПолучитьОбласть("Строка|Столбец");

	ДатаПечати = РабочаяДата;

	ТекСтолбец = 0;
	ТекСтрока  = 0;
	
	ЗП = Новый Запрос;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Товары.Выгрузить();
	
	ТЗ.Колонки.Добавить("НаименованиеНом", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(100)));
	//ТЗ.Колонки.Добавить("ШтрихКод");
	Для Каждого Стр Из ТЗ Цикл
	//	Отбор = Новый Структура;
	//	Отбор.Вставить("Владелец", Стр.Номенклатура);
	//	ШтКод = РегистрыСведений.Штрихкоды.Выбрать(Отбор, "Убыв");
	//
		Стр.НаименованиеНом = Стр.Номенклатура.Наименование;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст =
					"ВЫБРАТЬ
	               |	ТаблЗн.ЕдиницаИзмерения КАК ЕдИзм,
	               |	ТаблЗн.Количество,
	               |	ТаблЗн.Номенклатура КАК НКЛ,
	               |	ТаблЗн.НомерСтроки КАК НомСтр,
	               |	ТаблЗн.Печать,
	               |	ТаблЗн.СтараяЦена,
	               |	ТаблЗн.ХарактеристикаНоменклатуры,
	               |	ТаблЗн.НаименованиеНом,
	               |	ТаблЗн.Цена
	               |ПОМЕСТИТЬ Номен
	               |ИЗ
	               |	&ТЗ КАК ТаблЗн
	               |ГДЕ
	               |	ТаблЗн.Цена <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номен.ЕдИзм,
	               |	Номен.Количество,
	               |	Номен.НКЛ,
	               |	Номен.НомСтр,
	               |	Номен.Печать,
	               |	Номен.СтараяЦена,
	               |	Номен.ХарактеристикаНоменклатуры,
	               |	Номен.Цена,
	               |	Номен.НаименованиеНом
	               |ПОМЕСТИТЬ Номен2
	               |ИЗ
	               |	Номен КАК Номен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номен.НКЛ,
	               |	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
	               |	МАКСИМУМ(Штрихкоды.ТипШтрихкода) КАК ТипШтрихкода,
	               |	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	               |ПОМЕСТИТЬ ШК
	               |ИЗ
	               |	Номен2 КАК Номен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	               |		ПО Номен.НКЛ = Штрихкоды.Владелец
	               |			И Номен.ЕдИзм = Штрихкоды.ЕдиницаИзмерения
	               |ГДЕ
	               |	Штрихкоды.ТипШтрихкода = &ТипШтрихкода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Номен.НКЛ,
	               |	Штрихкоды.ЕдиницаИзмерения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номен.НКЛ,
	               |	Номенклатура.НоменклатурнаяГруппа,
	               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория,
	               |	НаценкиНаНоменклатурныеГруппы.ПроцентНаценки
	               |ПОМЕСТИТЬ Цены
	               |ИЗ
	               |	Номен2 КАК Номен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаценкиНаНоменклатурныеГруппы КАК НаценкиНаНоменклатурныеГруппы
	               |			ПО Номенклатура.НоменклатурнаяГруппа = НаценкиНаНоменклатурныеГруппы.НоменклатурнаяГруппа
	               |		ПО Номен.НКЛ = Номенклатура.Ссылка
	               |ГДЕ
	               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория = &ЦеноваяКатегория
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Номен.НКЛ,
	               |	Номенклатура.НоменклатурнаяГруппа,
	               |	НаценкиНаНоменклатурныеГруппы.ЦеноваяКатегория,
	               |	НаценкиНаНоменклатурныеГруппы.ПроцентНаценки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номен.НКЛ КАК Номенклатура,
	               |	Номен.ЕдИзм КАК ЕдиницаИзмерения,
	               |	Номен.Количество,
	               |	Номен.НомСтр КАК НомерСтроки,
	               |	Номен.Печать,
	               |	Номен.СтараяЦена,
	               |	Номен.ХарактеристикаНоменклатуры,
	               |	Номен.Цена,
	               |	ШК.Штрихкод КАК ШтрихкодИзРегистра,
	               |	ШК.ТипШтрихкода КАК ТипШтрихкодаИзРегистра,
	               |	Цены.ЦеноваяКатегория,
	               |	Цены.ПроцентНаценки,
	               |	Номен.НаименованиеНом КАК НаименованиеНом
	               |ИЗ
	               |	Номен2 КАК Номен
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ШК КАК ШК
	               |		ПО Номен.НКЛ = ШК.НКЛ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	               |		ПО Номен.НКЛ = Цены.НКЛ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Номен.НКЛ,
	               |	Номен.ЕдИзм,
	               |	Номен.Количество,
	               |	Номен.НомСтр,
	               |	Номен.Печать,
	               |	Номен.СтараяЦена,
	               |	Номен.ХарактеристикаНоменклатуры,
	               |	Номен.Цена,
	               |	ШК.Штрихкод,
	               |	ШК.ТипШтрихкода,
	               |	Цены.ЦеноваяКатегория,
	               |	Цены.ПроцентНаценки,
	               |	Номен.НаименованиеНом
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НаименованиеНом";
	Запрос.УстановитьПараметр("ТЗ", ТЗ);     
	Запрос.УстановитьПараметр("ТипШтрихкода", ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13);
	Запрос.УстановитьПараметр("ЦеноваяКатегория", ТипЦен.ЦеноваяКатегория);
	//Запрос.УстановитьПараметр("СсылкаДок", СсылкаДок);
	РЗ = Запрос.Выполнить().Выгрузить();
	
//++ГРД 200318
//если в таблице есть пропущенные штрихкоды, заполняем их еще раз:
	Для каждого СтрокаТаблицы из РЗ Цикл; 
			Если СтрокаТаблицы.ШтрихкодИзРегистра = NULL Тогда
				Запрос=новый Запрос;
				Запрос.Текст=
					"ВЫБРАТЬ
					|	ТаблицаЗначений.Номенклатура КАК Номенклатура,
					|	ТаблицаЗначений.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
					|	ТаблицаЗначений.Количество КАК Количество,  
					|	ТаблицаЗначений.Печать КАК Печать,
					|	ТаблицаЗначений.НаименованиеНом КАК НаименованиеПолное,  
					|	ТаблицаЗначений.ЕдиницаИзмерения КАК ЕдиницаИзмерения, 
					|	ТаблицаЗначений.Цена  КАК Цена 
					|ПОМЕСТИТЬ ВременнаяТаблица
					|ИЗ
					|	&ТаблицаЗначений КАК ТаблицаЗначений
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВременнаяТаблица.Номенклатура КАК Номенклатура,
					|	ВременнаяТаблица.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
					|	ВременнаяТаблица.Количество КАК Количество,
					|	ВременнаяТаблица.Печать КАК Печать,
					|	ВременнаяТаблица.НаименованиеПолное КАК НаименованиеПолное,  
					|	ВременнаяТаблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения, 
					|	ВременнаяТаблица.Цена  КАК Цена, 
					|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры1,
					|	ВложенныйЗапрос.Владелец,
					|	ВложенныйЗапрос.Штрихкод КАК ШтрихкодИзРегистра,
					|	ВложенныйЗапрос.Дата
					|ИЗ
					|	ВременнаяТаблица КАК ВременнаяТаблица
					|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
					|			МАКСИМУМ(Штрихкоды.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
					|			Штрихкоды.Владелец КАК Владелец,
					|			МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,
					|			МАКСИМУМ(Штрихкоды.Дата) КАК Дата
					|		ИЗ
					|			РегистрСведений.Штрихкоды КАК Штрихкоды
					|		
					|		СГРУППИРОВАТЬ ПО
					|			Штрихкоды.Владелец) КАК ВложенныйЗапрос
					|		ПО ВременнаяТаблица.Номенклатура = ВложенныйЗапрос.Владелец
					|			И ВременнаяТаблица.ХарактеристикаНоменклатуры = ВложенныйЗапрос.ХарактеристикаНоменклатуры";
				Запрос.УстановитьПараметр("ТаблицаЗначений",РЗ);	
				Результат=Запрос.Выполнить().Выгрузить();
				РЗ.Очистить();
				РЗ=Результат;
				Прервать;
			КонецЕсли;		
	КонецЦикла;
//++ГРД			
	
	
// НЧАН     
	Для Каждого СтрокаТаблицы Из РЗ Цикл
		Если СтрокаТаблицы.Печать Тогда 
// НЧАН		
			Если СтрДлина(СтрокаТаблицы.ШтрихкодИзРегистра) < 2 Тогда
				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец2");  
			Иначе
				ОбластьЦенника  = Макет.ПолучитьОбласть("Строка|Столбец");
			КонецЕсли;
// КЧАН			
			Для Тмп = 1 По СтрокаТаблицы.Количество Цикл
				
				ДатаПечати = Формат(ДатаПечати, "ДФ=dd.MM.yy");	
				ОбластьЦенника.Параметры.Заполнить(СтрокаТаблицы);
				Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура.НаименованиеПолное) Тогда 
					Индекс1 = СтрДлина(СтрокаТаблицы.Номенклатура.НаименованиеПолное);       // НЧАН
					Индекс2 = Найти(НРег(СтрокаТаблицы.Номенклатура.НаименованиеПолное), "пр-во");
					СтранаПр = СокрЛП(Прав(СтрокаТаблицы.Номенклатура.НаименованиеПолное,  Индекс1-Индекс2));
					Если Индекс2 <> 0 Тогда
						Номенкл  = СокрЛП(Лев(СтрокаТаблицы.Номенклатура.НаименованиеПолное, Индекс2-1));
					Иначе
						Номенкл = СокрЛП(СтрокаТаблицы.Номенклатура.НаименованиеПолное);
					КонецЕсли;
				Иначе
					Номенкл = СокрЛП(СтрокаТаблицы.Номенклатура.Наименование);
					СтранаПр= "р-во:"	
				КонецЕсли;
				
				ОбластьЦенника.Параметры.ОписаниеНоменклатуры            = Номенкл + Символы.ПС; //" " +СтрокаТаблицы.ХарактеристикаНоменклатуры; 
				ОбластьЦенника.Параметры.ПрВо						 	 = "П" + СтранаПр; 
				//ОбластьЦенника.Параметры.НоменклатураНаименование        = СтрокаТаблицы.Номенклатура.НаименованиеПолное;
//				ОбластьЦенника.Параметры.ХарактеристикаНаименование      = СтрокаТаблицы.ХарактеристикаНоменклатуры;
				ОбластьЦенника.Параметры.ЕдиницаНаименование             = СтрокаТаблицы.ЕдиницаИзмерения;
//				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(СтрокаТаблицы.Цена, , "00");
// НЧАН
				//Цена = РасчетЦеныПоЦеновымГруппам (СтрокаТаблицы.Номенклатура, ТипЦен, СтрокаТаблицы.ПроцентНаценки);
				Цена = СтрокаТаблицы.Цена;
				//строкаЦена = Строка(Формат(Цена, "ЧДЦ=2"));
				//СтрокаЦена = СтрЗаменить(СтрокаЦена, ",", " руб ");
				//СтрокаЦена = СтрокаЦена + " руб";
				//Балашева
				Если Параметр = 2 Тогда
					Цена = ОбщегоНазначения.ФорматСумм(Цена,,"00");
					Рубли = Цел(Цена);
                    Копейки = (Цена - Рубли) * 100;
					Если СтрДлина(Копейки)< 2 Тогда
					Копейки = Строка(Копейки) + "0";	
				КонецЕсли;
				    Рубли = Формат(Цел(Цена), "ЧГ=0");
					ОбластьЦенника.Параметры.Цена = Рубли;
					ОбластьЦенника.Параметры.Копейки = Копейки;
				Иначе 				
				ОбластьЦенника.Параметры.Цена                            = ОбщегоНазначения.ФорматСумм(Цена, , "00");
			КонецЕсли;
			//--
// КЧАН
				ОбластьЦенника.Параметры.Валюта 						 = "руб";//ОбщегоНазначения.ФорматСумм(,Валюта,);
				ОбластьЦенника.Параметры.ДатаПечати                      = ДатаПечати;
//				ОбластьЦенника.Параметры.Организация                     = Организация;
				ОбластьЦенника.Параметры.ОрганизацияНаименование         = ИПпоСкладу;   // Организация;
//				ОбластьЦенника.Параметры.НоменклатураСтранаПроисхождения = СтрокаТаблицы.Номенклатура.СтранаПроисхождения;

//				Если СтрокаТаблицы.Штрихкод <> NULL Тогда    // НЧАН 
                Если СтрДлина(СтрокаТаблицы.ШтрихкодИзРегистра) > 2 Тогда
	                Если Параметр = 2 Тогда
					ОбластьЦенника.Параметры.ШК =СтрокаТаблицы.ШтрихкодИзДокумента;
				    КонецЕсли;

					РисунокШтрихКод = ОбластьЦенника.Рисунки.D1;
					ЗаполнитьРисунокШтрихКодом(РисунокШтрихКод, СтрокаТаблицы.ШтрихкодИзРегистра);
					Если Параметр = 2 Тогда
						РисунокШтрихКод.Объект.ОтображатьТекст = Ложь;
					КонецЕсли;
//				    ЗаполнитьРисунокШтрихКодом(СтрокаТаблицы.Штрихкод, СтрокаТаблицы.ТипШтрихкода, РисунокШтрихКод);
				КонецЕсли;

				Если ТекСтолбец = 0 Тогда
					ТабДокумент.Вывести(ОбластьЦенника);
				Иначе
					ТабДокумент.Присоединить(ОбластьЦенника);
				КонецЕсли;

				ТекСтолбец = ТекСтолбец + 1;

				Если ТекСтолбец = КоличествоСтолбцов Тогда
					ТекСтрока  = ТекСтрока + 1;
					ТекСтолбец = 0;
				КонецЕсли;

				Если ТекСтрока = КоличествоСтрок Тогда
					ТекСтрока = 0;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	КВО = РЗ.Количество();
	Если КВО < КоличествоСтолбцов Тогда 
		Сч = КоличествоСтолбцов - КВО;
		Пока Сч > 0 Цикл
		ОбластьСтолбец = Макет.ПолучитьОбласть("Строка|Столбец1");
		ТабДокумент.Присоединить(ОбластьСтолбец);	
		Сч = Сч - 1;
		КонецЦикла;
	КонецЕсли;
		
	ТабДокумент.ТолькоПросмотр = Истина;
//	ТабДокумент.АвтоМасштаб = Истина;

	Возврат ТабДокумент;

КонецФункции // ПечатьЦенникаИзОбработки()
//++ГРД конец

// Функция выполняет проверку параметров для заполнения цен.
//
// Возвращаемое значение:
//  Булево - Истина, если все параметры заданы.
//
Функция ПроверитьПараметрыЗаполненияЦен(ПечетьБезПроверкиЗаполненияПараметров = Неопределено) Экспорт

	Перем РезультатПроверки, СтрокаСообщения;

	РезультатПроверки = Истина;
	СтрокаСообщения = "";
	
	Если НЕ ЗначениеЗаполнено(ТипЦен) Тогда
		РезультатПроверки = Ложь;
		СтрокаСообщения = "Не выбран тип цен! Укажите тип цен и повторите перезаполнение цен." + Символы.ПС;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		РезультатПроверки = Ложь;
		СтрокаСообщения = СтрокаСообщения + "Не выбрана валюта!  Укажите валюту и повторите перезаполнение цен.";
	КонецЕсли;

	Если НЕ РезультатПроверки И ПечетьБезПроверкиЗаполненияПараметров <> Истина Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения);
	КонецЕсли;
	Возврат РезультатПроверки;

КонецФункции // ПроверитьПараметрыЗаполненияЦен()

// НЧАН
//Процедура ЗаполнитьЦеныПоКатегориямНаценки() Экспорт

//	СтруктураЗначений = Новый Структура;
//	СтруктураЗначений.Вставить("НовыйТипЦен", ТипЦен);

//	ЗапросПоЦенам = Ценообразование.СформироватьЗапросПоЦенам(СтруктураЗначений,
//	   Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры,
//	   Товары.ВыгрузитьКолонку("Номенклатура"),
//	   РабочаяДата,
//	   Неопределено).Выгрузить();
//	ЗапросПоЦенам.Индексы.Добавить("Номенклатура");

//	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
//	ТипЦенРассчитывается = ТипЦен.Рассчитывается;

//	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(Валюта, РабочаяДата);
//	Курс = СтруктураКурса.Курс;
//	Кратность = СтруктураКурса.Кратность;

//	Для Каждого СтрокаТовара Из Товары Цикл
//		ХарактеристикаНоменклатуры = СтрокаТовара.ХарактеристикаНоменклатуры;

//		СтруктураПоиска = Новый Структура("Номенклатура", СтрокаТовара.Номенклатура);

//		СтрокиЦен = ЗапросПоЦенам.НайтиСтроки(СтруктураПоиска);

//		СтрокаБезХарактеристики = Неопределено;
//		СтрокаСХарактеристикой = Неопределено;

//		Для Каждого СтрокаЦен Из СтрокиЦен Цикл
//			Если СтрокаЦен.ХарактеристикаНоменклатуры = ПустаяХарактеристика Тогда
//				СтрокаБезХарактеристики = СтрокаЦен;
//			ИначеЕсли СтрокаЦен.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры Тогда
//				СтрокаСХарактеристикой = СтрокаЦен;
//			КонецЕсли;
//		КонецЦикла;

//		Если СтрокаСХарактеристикой <> Неопределено Тогда
//			НайденнаяСтрока = СтрокаСХарактеристикой;
//		ИначеЕсли СтрокаБезХарактеристики <> Неопределено Тогда
//			НайденнаяСтрока = СтрокаБезХарактеристики;
//		Иначе
//			НайденнаяСтрока = Неопределено;
//		КонецЕсли;

//		Если (НайденнаяСтрока <> Неопределено) И (НайденнаяСтрока.Цена <> 0) Тогда
//			Цена = НайденнаяСтрока.Цена * (1 + ?(ТипЦенРассчитывается, НайденнаяСтрока.ПроцентСкидкиНаценки / 100, 0));
//			Цена = Ценообразование.ОкруглитьЦену(Цена, ТипЦен.ПорядокОкругления, ТипЦен.ОкруглятьВБольшуюСторону);
//			Цена = Ценообразование.ПересчитатьЦенуПриИзмененииВалюты(Цена, НайденнаяСтрока.ВалютаЦены, Валюта, Курс, Кратность);

//			СтрокаТовара.ЕдиницаИзмерения = НайденнаяСтрока.ЕдиницаИзмеренияЦены;
//		Иначе
//			Цена = 0;
//		КонецЕсли;

//		СтрокаТовара.Цена = Цена;
//	КонецЦикла;

//КонецПроцедуры
// НЧАН
//Функция РасчетЦеныПоЦеновымГруппам (Номенклатура, ТипЦен, ПроцентНаценки) Экспорт
//	
//	Об = Обработки.ЛК_ФормированиеРозничныхЦен.Создать();
//	ЦенаЗакупочная     = Об.ПолучитьЗакупочнуюЦену(Номенклатура);
//	ЦенаБазовая        = Об.ПолучитьБазовуюЦену(Номенклатура);
//	ЦенаРозничная      = Об.ПолучитьРозничнуюЦену(Номенклатура,ТипЦен);
//	ИндивидуальнаяЦена = Об.ПолучитьИндивидуальнуюЦену(Номенклатура,ТипЦен);
//	ТекущийПроцент     = ПроцентНаценки;
//	
//	Попытка
//		Если ИндивидуальнаяЦена <> 0 И ИндивидуальнаяЦена <> Неопределено тогда
//			Цена = ИндивидуальнаяЦена;
//		ИначеЕсли  (ИндивидуальнаяЦена = 0 ИЛИ ИндивидуальнаяЦена = Неопределено) и ЦенаБазовая<>0 тогда
//			Цена = ОКР(ЦенаБазовая + ЦенаБазовая*ТекущийПроцент/100,-1);
//		Иначе
//			Цена = ОКР(ЦенаЗакупочная + ЦенаЗакупочная*ТекущийПроцент/100,-1);
//		КонецЕсли;
//	Исключение
//		Сообщить(Строка(Номенклатура) + " : Возможно на номенклатурную группу, в которую входит товар не назначена ценовая категория");
//		Сообщить(ОписаниеОшибки());
//	КонецПопытки;
//	
//	Возврат Цена;
//	
//КонецФункции
// НЧАН
Процедура ЗаполнитьРисунокШтрихКодом (РисунокШтрихКод, ШтрихКод, ТипШК = Неопределено ) Экспорт
	Попытка
		Если ТипШК = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 ИЛИ ТипШК = Неопределено Тогда // Получение штрихкода как текст строка при неизвестном типе ШК			
			НЧ = 13;
			РисунокШтрихКод.Объект.ТипКода = 1;
		ИначеЕсли  ТипШК = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
			НЧ = 8;
			РисунокШтрихКод.Объект.ТипКода = 0;  		
		Иначе
			НЧ = 0;
		КонецЕсли;
		ШКЧ = СокрП(Строка(ШтрихКод));
		КЗ = НЧ - СтрДлина(ШКЧ);									
		Пока КЗ > 0 Цикл
			ШКЧ = "0" + ШКЧ;
			КЗ = КЗ - 1;
		КонецЦикла;	
		
		Если НЕ ЛК_РаботаСДокументами.ПроверкаEAN13(ШКЧ) Тогда
			ШКЧ = Прав(ШКЧ, 12);
		КонецЕсли;	
		
		РисунокШтрихКод.Объект.ТекстКода = ШКЧ;
		РисунокШтрихКод.Объект.Сообщение = ШКЧ;
		
	Исключение;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

// КЧАН

#КонецЕсли

