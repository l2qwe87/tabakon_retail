
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ВладелецФормы <> Неопределено тогда 
		Объект.ДокументСсылка	=	ВладелецФормы.Ссылка;
		ЗаполнитьТоварыНаСервере(Объект.ДокументСсылка); 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТоварыНаСервере(Ссылка)
	Объект.Товары.Загрузить(Ссылка.Товары.Выгрузить());	
	
	ПроставитьСтавку(); 	
КонецПроцедуры

&НаКлиенте
Процедура ДокументСсылкаПриИзменении(Элемент)
	ЗаполнитьТоварыНаСервере(Объект.ДокументСсылка);
КонецПроцедуры

&НаКлиенте
Процедура РазбитьПоПоставщикам(Команда)
	ПроставитьСтавку();
КонецПроцедуры   

&НаСервере 
Процедура ПроставитьСтавку()
	Для каждого Строка из Объект.Товары цикл
		Строка.Поставщик = Строка.Номенклатура.ОсновнойПоставщик;
		
		СтруктураНдсПоставщик	=	ПолучитьСтавку(Строка.Поставщик, Строка.Номенклатура);
		
		Строка.СтавкаНДС		=   СтруктураНдсПоставщик.СтавкаНДС;
		Если не ЗначениеЗаполнено(Строка.Поставщик) тогда
			Строка.Поставщик = СтруктураНдсПоставщик.Поставщик;	
		КонецЕсли; 		
		
		//Если не ЗначениеЗаполнено(Строка.Поставщик) тогда
		//	Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		//иначе
		//	Строка.СтавкаНДС = ПолучитьСтавку(Строка.Поставщик);
		//КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавку(Поставщик, Номенклатура);
	УслКонтрагент   = "";
	УслНоменклатура = "";
	Если ЗначениеЗаполнено(Поставщик) тогда
		УслКонтрагент = " И ПоступлениеТоваровУслугТовары.Ссылка.Контрагент = &Контрагент ";
	иначе
		УслНоменклатура = " И ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура ";
	КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	      	 	             |	ПоступлениеТоваровУслугТовары.Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	      	 	             |ГДЕ
	      	 	             |	ПоступлениеТоваровУслугТовары.Ссылка.Проведен 
							 |  И не ПоступлениеТоваровУслугТовары.Ссылка.Контрагент.Родитель = &СтарыеПоставщики "+ УслКонтрагент +"
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ПоступлениеТоваровУслугТовары.Ссылка.Дата УБЫВ");
	Запрос.УстановитьПараметр("Контрагент",Поставщик);
	Запрос.УстановитьПараметр("СтарыеПоставщики",Справочники.Контрагенты.НайтиПоКоду("УТ0000001")); 	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	СтруктураВозврата = Новый Структура;
	Если Рез.Количество() >0 тогда
		СтруктураВозврата.Вставить("СтавкаНДС",Рез[0].СтавкаНДС);
		СтруктураВозврата.Вставить("Поставщик",Рез[0].Ссылка.Контрагент);
		
		Возврат СтруктураВозврата;
	иначе
		СтруктураВозврата.Вставить("СтавкаНДС",Перечисления.СтавкиНДС.БезНДС);
		СтруктураВозврата.Вставить("Поставщик",Справочники.Контрагенты.ПустаяСсылка());

		Возврат СтруктураВозврата;	
	КонецЕсли;
КонецФункции

#Область Документы

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	НовыйДок = СоздатьПеремещениеНаСервере();
	
	ПараметрыФормы = Новый Структура("Ключ", НовыйДок);
	ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПТиУ(Команда)
	НовыйДок = СоздатьПТиУНаСервере();
	
	ПараметрыФормы = Новый Структура("Ключ", НовыйДок);
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратПоставщику(Команда)
	НовыйДок = СоздатьВозвратПоставщикуНаСервере();
	
	ПараметрыФормы = Новый Структура("Ключ", НовыйДок);
	ОткрытьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента",ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРТиУ(Команда)
	НовыйДок = СоздатьРТиУНаСервере();
	
	ПараметрыФормы = Новый Структура("Ключ", НовыйДок);
	ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента",ПараметрыФормы);

КонецПроцедуры

#Конецобласти


#Область Документы_НаСервере

&НаСервере
Функция  СоздатьВозвратПоставщикуНаСервере()
	НовыйДок = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
	НовыйДок.Заполнить(Объект.ДокументСсылка);
	Если флНДС = 1 тогда
		НовыйДок.УчитыватьНДС 		= Истина;
		НовыйДок.СуммаВключаетНДС	= Истина;
	КонецЕсли;
	
	ОбработатьНДС(НовыйДок.Товары,НовыйДок);
	
	Возврат НовыйДок;
КонецФункции

&НаСервере
Функция  СоздатьПеремещениеНаСервере()
	НовыйДок = Документы.ПеремещениеТоваров.СоздатьДокумент();
	НовыйДок.Заполнить(Объект.ДокументСсылка);
	ОбработатьНДС(НовыйДок.Товары,НовыйДок);
	
	Возврат НовыйДок;
КонецФункции

&НаСервере
Функция  СоздатьПТиУНаСервере()
	НовыйДок = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	НовыйДок.Заполнить(Объект.ДокументСсылка);
	Если флНДС = 1 тогда
		НовыйДок.УчитыватьНДС 		= Истина;
		НовыйДок.СуммаВключаетНДС	= Истина;
	КонецЕсли;
	
	ОбработатьНДС(НовыйДок.Товары,НовыйДок);
	
	Возврат НовыйДок;
КонецФункции

&НаСервере
Функция  СоздатьРТиУНаСервере()
	НовыйДок = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	НовыйДок.Заполнить(Объект.ДокументСсылка);
	Если флНДС = 1 тогда
		НовыйДок.УчитыватьНДС 		= Истина;
		НовыйДок.СуммаВключаетНДС	= Истина;
	КонецЕсли;
	
	ОбработатьНДС(НовыйДок.Товары,НовыйДок);
	
	Возврат НовыйДок;
КонецФункции 

#Конецобласти

&НаСервере
Процедура ОбработатьНДС(ДокТовары,НовыйДок);
	ДокТовары.Очистить();
	КачНовый = Справочники.Качество.Новый;
	Для каждого Строка из Объект.Товары цикл
		Если флНДС = 0 и Строка.СтавкаНДС <> Перечисления.СтавкиНДС.БезНДС тогда
			Продолжить;	
			
		ИначеЕсли флНДС = 1 и Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС тогда
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ДокТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		Если ТипЗнч(НовыйДок) <> Тип("ДокументОбъект.ПоступлениеТоваровУслуг") тогда
			НоваяСтрока.Качество = КачНовый;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрока,НовыйДок);
		
		Если ТипЗнч(НовыйДок) <> Тип("ДокументОбъект.ПеремещениеТоваров") тогда 
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(НоваяСтрока,НовыйДок);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры




