#Если Клиент Тогда

Процедура ВывестиТитульныйЛист(ТекНастройка, ТабличныйДокумент, Макет)
	
	ОбластьОрганизация      = ТекНастройка.Макет.ПолучитьОбласть("ТитульныйЛист");
	
	ОбластьОрганизация.Параметры.НазваниеОрганизации = ТекНастройка.ПредставлениеОрганизации;
	ОбластьОрганизация.Параметры.ПредставлениеПериода = УправлениеОтчетами.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, 0);
	
	Если ЗначениеЗаполнено(Склад) И НЕ ТекНастройка.НовыйФормат Тогда
		ОбластьОрганизация.Параметры.Подразделение = Склад;
	КонецЕсли;
	
	Если ТекНастройка.НовыйФормат Тогда  
		ОбластьОрганизация.Параметры.ИННКПП = ТекНастройка.СведенияОбОрганизации.ИНН + ?(Организация.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо, " / " + ТекНастройка.СведенияОбОрганизации.КПП, "");
	КонецЕсли;
	
	ОбластьОрганизация.Параметры.Организация = Организация;
	
	ТабличныйДокумент.Вывести(ОбластьОрганизация);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ТабличныйДокумент.Область("R1:R" + ТабличныйДокумент.ВысотаТаблицы).Имя = "ТитульныйЛист";
	
КонецПроцедуры

Функция ТекстЗапроса153()
	Текст =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.Номенклатура.НаименованиеПолное КАК СТРОКА(200)) КАК ТоварНаименование,
	|	СведенияОбАлкогольнойПродукции.КоэффПересчетаДал * 10 КАК Емкость,
	|	СведенияОбАлкогольнойПродукции.КоэффПересчетаДал КАК КоэффПересчетаДал,
	|	СведенияОбАлкогольнойПродукции.ВидПродукции.Наименование КАК ВидПродукции,
	|	СведенияОбАлкогольнойПродукции.ВидПродукции.КодВидаПродукции КАК КодВидаПродукции
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.ВидПродукции + "" ("" + АлкогольнаяПродукция.ТоварНаименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидПродукцииПоступление,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.КодВидаПродукции
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодВидаПоступление,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|					И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|				ТОГДА &ОрганизацияНаименование
	|			КОГДА Обороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|					И ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходныйОрдер.Перемещение)
	|				ТОГДА &ОрганизацияНаименование
	|			КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|				ТОГДА АвансовыйОтчетТовары.Поставщик.НаименованиеПолное
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.Регистратор.Контрагент.НаименованиеПолное
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК СТРОКА(1000)) КАК Поставщик,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|					И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|				ТОГДА &ОрганизацияИНН
	|			КОГДА Обороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|					И ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходныйОрдер.Перемещение)
	|				ТОГДА &ОрганизацияИНН
	|			КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|				ТОГДА АвансовыйОтчетТовары.Поставщик.ИНН
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.Регистратор.Контрагент.ИНН
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК СТРОКА(1000)) КАК ИНН,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента = """"
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).НомерВходящегоДокумента = """"
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).Номер
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).НомерВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|							И (АвансовыйОтчетТовары.НомерВходящегоДокумента <> """"
	|								ИЛИ АвансовыйОтчетТовары.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|						ТОГДА АвансовыйОтчетТовары.НомерВходящегоДокумента
	|					ИНАЧЕ Обороты.Регистратор.Номер
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК НомерТТН,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Дата
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).Дата
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).ДатаВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|							И (АвансовыйОтчетТовары.НомерВходящегоДокумента <> """"
	|								ИЛИ АвансовыйОтчетТовары.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|						ТОГДА АвансовыйОтчетТовары.ДатаВходящегоДокумента
	|					ИНАЧЕ Обороты.Регистратор.Дата
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДатаТТН,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.Емкость
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕмкостьПоступление,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПоступление,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.КоличествоОборот * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОбъемПоступление,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА Обороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДокументПоступление,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА Обороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДокументРасход,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И Обороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА ""Проданная продукция""
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И (Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщикуИзНТТ
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|			ТОГДА ""Продукция, возвращенная поставщику""
	|		КОГДА Обороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
	|			ТОГДА ""Недостачи продукции""
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|			ТОГДА ""Продукция, переданная в другое подразделение""
	|		КОГДА Обороты.Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.РасходПоНакладной)
	|						ТОГДА ""Проданная продукция""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.Перемещение)
	|						ТОГДА ""Продукция, переданная в другое подразделение""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.ВозвратПоставщику)
	|						ТОГДА ""Продукция, возвращенная поставщику""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.ВозвратПоПриходномуОрдеру)
	|						ТОГДА ""Продукция, возвращенная поставщику""
	|				КОНЕЦ
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА ""Списанная продукция""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК СодержаниеРасход,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА АлкогольнаяПродукция.ВидПродукции + "" ("" + АлкогольнаяПродукция.ТоварНаименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидПродукцииРасход,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА АлкогольнаяПродукция.Емкость
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ЕмкостьРасход,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот < 0
	|				ТОГДА -Обороты.КоличествоОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРасход,
	|	СУММА(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот < 0
	|				ТОГДА -Обороты.КоличествоОборот * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОбъемРасход,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента = """"
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПреобразоватьНомер
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Обороты(&ДатаНач, &ДатаКон, Регистратор, &Условие) КАК Обороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|			ПО Обороты.Номенклатура = АвансовыйОтчетТовары.Номенклатура
	|				И (Обороты.Регистратор = АвансовыйОтчетТовары.Ссылка
	|					ИЛИ Обороты.Регистратор = АвансовыйОтчетТовары.Ссылка.СкладОрдер)
	|		ПО АлкогольнаяПродукция.Номенклатура = Обороты.Номенклатура
	|ГДЕ
	|	НЕ Обороты.Регистратор ССЫЛКА Документ.КорректировкаКачестваТоваров
	|	И НЕ Обороты.Регистратор ССЫЛКА Документ.КорректировкаСерийИХарактеристикТоваров
	|	И ВЫБОР
	|			КОГДА НЕ Обороты.Регистратор.ДоговорКонтрагента ЕСТЬ NULL 
	|				ТОГДА НЕ Обороты.Регистратор.ДоговорКонтрагента.ВидДоговора В (&ИсключаемыеВидыДоговоров)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Обороты.Период,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.ВидПродукции + "" ("" + АлкогольнаяПродукция.ТоварНаименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.КодВидаПродукции
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА АлкогольнаяПродукция.Емкость
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА Обороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА Обороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА АлкогольнаяПродукция.ВидПродукции + "" ("" + АлкогольнаяПродукция.ТоварНаименование + "")""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА АлкогольнаяПродукция.Емкость
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|					И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|				ТОГДА &ОрганизацияНаименование
	|			КОГДА Обороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|					И ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходныйОрдер.Перемещение)
	|				ТОГДА &ОрганизацияНаименование
	|			КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|				ТОГДА АвансовыйОтчетТовары.Поставщик.НаименованиеПолное
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.Регистратор.Контрагент.НаименованиеПолное
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК СТРОКА(1000)),
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА Обороты.КоличествоОборот > 0
	|					И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
	|						ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|				ТОГДА &ОрганизацияИНН
	|			КОГДА Обороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|					И ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходныйОрдер.Перемещение)
	|				ТОГДА &ОрганизацияИНН
	|			КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|				ТОГДА АвансовыйОтчетТовары.Поставщик.ИНН
	|			КОГДА Обороты.КоличествоОборот > 0
	|				ТОГДА Обороты.Регистратор.Контрагент.ИНН
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК СТРОКА(1000)),
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента = """"
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Номер
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).НомерВходящегоДокумента = """"
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).Номер
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).НомерВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|							И (АвансовыйОтчетТовары.НомерВходящегоДокумента <> """"
	|								ИЛИ АвансовыйОтчетТовары.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|						ТОГДА АвансовыйОтчетТовары.НомерВходящегоДокумента
	|					ИНАЧЕ Обороты.Регистратор.Номер
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Дата
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|									ТОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).Дата
	|								ИНАЧЕ ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслугВНТТ).ДатаВходящегоДокумента
	|							КОНЕЦ
	|					КОГДА НЕ АвансовыйОтчетТовары.Ссылка ЕСТЬ NULL 
	|							И (АвансовыйОтчетТовары.НомерВходящегоДокумента <> """"
	|								ИЛИ АвансовыйОтчетТовары.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|						ТОГДА АвансовыйОтчетТовары.ДатаВходящегоДокумента
	|					ИНАЧЕ Обороты.Регистратор.Дата
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И Обороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА ""Проданная продукция""
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И (Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщикуИзНТТ
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|			ТОГДА ""Продукция, возвращенная поставщику""
	|		КОГДА Обороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
	|			ТОГДА ""Недостачи продукции""
	|		КОГДА Обороты.КоличествоОборот < 0
	|				И (Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|					ИЛИ Обороты.Регистратор ССЫЛКА Документ.КомплектацияНоменклатуры)
	|			ТОГДА ""Продукция, переданная в другое подразделение""
	|		КОГДА Обороты.Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫБОР
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.РасходПоНакладной)
	|						ТОГДА ""Проданная продукция""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.Перемещение)
	|						ТОГДА ""Продукция, переданная в другое подразделение""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.ВозвратПоставщику)
	|						ТОГДА ""Продукция, возвращенная поставщику""
	|					КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.РасходныйОрдерНаТовары).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходныйОрдер.ВозвратПоПриходномуОрдеру)
	|						ТОГДА ""Продукция, возвращенная поставщику""
	|				КОНЕЦ
	|		КОГДА Обороты.КоличествоОборот < 0
	|			ТОГДА ""Списанная продукция""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Обороты.КоличествоОборот > 0
	|			ТОГДА ВЫБОР
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|						ТОГДА ВЫБОР
	|								КОГДА ВЫРАЗИТЬ(Обороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента = """"
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслугВНТТ
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|						ТОГДА ИСТИНА
	|					КОГДА Обороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обороты.Период";
	Возврат Текст;
КонецФункции

Функция ТекстЗапроса164()
	Текст =
	"ВЫБРАТЬ
	|	ПродажиОбороты.Период КАК ДатаПродажи,
	|	ПродажиОбороты.Номенклатура,
	|	ПродажиОбороты.Номенклатура.НаименованиеПолное КАК НаименованиеПродукции,
	|	ПродажиОбороты.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.КодВидаПродукции КАК КодВидаПродукции,
	|	ПродажиОбороты.Номенклатура.ОбъемДАЛ * 10 КАК ОбъемРасход,
	|	ПродажиОбороты.КоличествоОборот КАК КоличествоРасход
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			День,
	|			Организация = &Организация
	|				И Номенклатура.АлкогольнаяПродукция
	|				И ДокументПродажи ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				&Условие
	|				) КАК ПродажиОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПродажи";
	Возврат Текст;
КонецФункции

Функция ПреобразоватьНомерДокументаДляВыводаНаПечать(Знач Номер, МассивПрефиксов)
	
	Для Каждого ТекущийПрефикс ИЗ МассивПрефиксов Цикл
		
		// удаление префикса из номера документа
		Если Найти(Номер, ТекущийПрефикс)=1 Тогда 
			Номер = Сред(Номер, СтрДлина(ТекущийПрефикс)+1);
		КонецЕсли;
		
		// так же, может остаться "минус" впереди
		Если Лев(Номер, 1) = "-" Тогда
			Номер = Сред(Номер, 2);
		КонецЕсли;
		
		// удаление ведущих нулей
		Пока Лев(Номер, 1)="0" Цикл
			Номер = Сред(Номер, 2);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Номер;
	
КонецФункции	

Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	ТабличныйДокумент.Очистить();
		
	// Выведем шапку
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивНастроек = Новый Массив;
	
	ДатаНачалаИспользованияНовойФормыЖурнала = Константы.ДатаНачалаПримененияПриказа164.Получить();
	Сведения1 = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, КонецПериода);
	Сведения2 = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, ДатаНачалаИспользованияНовойФормыЖурнала-86400);
	СтрокаКлючей = "НовыйФормат, Макет, НачалоПериода, КонецПериода, СведенияОбОрганизации, ВыводитьИтогиПоДням";
	
	Если НачалоПериода >= ДатаНачалаИспользованияНовойФормыЖурнала Тогда
		
		МассивНастроек.Добавить(Новый Структура(СтрокаКлючей,
			Истина, ПолучитьМакет("ПФ_MXL_164"), НачалоПериода, КонецПериода, Сведения1, Истина));
		
	ИначеЕсли КонецПериода < ДатаНачалаИспользованияНовойФормыЖурнала Тогда
		
		МассивНастроек.Добавить(Новый Структура(СтрокаКлючей,
			Ложь, ПолучитьМакет("Макет"), НачалоПериода, КонецПериода, Сведения1, Ложь));
		
	Иначе
		
		МассивНастроек.Добавить(Новый Структура(СтрокаКлючей,
			Ложь, ПолучитьМакет("Макет"), НачалоПериода, ДатаНачалаИспользованияНовойФормыЖурнала-86400, Сведения2, Ложь));
												
		МассивНастроек.Добавить(Новый Структура(СтрокаКлючей,
			Истина, ПолучитьМакет("ПФ_MXL_164"), ДатаНачалаИспользованияНовойФормыЖурнала, КонецПериода, Сведения1, Истина));
		
	КонецЕсли;
	
	НомерСтроки = Макс(НомерНачальнойСтроки, 1);
	
	Для Каждого ТекНастройка Из МассивНастроек Цикл
		
		ТекНастройка.Вставить("ПредставлениеОрганизации",
			ФормированиеПечатныхФорм.ОписаниеОрганизации(ТекНастройка.СведенияОбОрганизации, "ПолноеНаименование,"));

		Если ТитульныйЛист Тогда
			ВывестиТитульныйЛист(ТекНастройка, ТабличныйДокумент, ТекНастройка.Макет);
		КонецЕсли;
		
		ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Шапка");

		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Склад", 			Склад);
		Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(НачалоПериода));
		Запрос.УстановитьПараметр("ДатаКон", 		Новый Граница(КонецДня(КонецПериода), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", 	Организация);

		Если НЕ ТекНастройка.НовыйФормат Тогда
			
			Текст = ТекстЗапроса153();
			Запрос.УстановитьПараметр("ОрганизацияНаименование", ТекНастройка.ПредставлениеОрганизации);
			Запрос.УстановитьПараметр("ОрганизацияИНН",	ТекНастройка.СведенияОбОрганизации.ИНН);
			ИсключаемыеВидыДоговоров = Новый СписокЗначений;
			ИсключаемыеВидыДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СКомитентом);
			Запрос.УстановитьПараметр("ИсключаемыеВидыДоговоров", ИсключаемыеВидыДоговоров);
			
			СтрокаУсловия = "Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) И 
			| Организация = &Организация";
			
			Если ЗначениеЗаполнено(Склад) Тогда
				СтрокаУсловия = СтрокаУсловия + " И Склад = &Склад";
			КонецЕсли;
		
		Иначе	
			
			Текст = ТекстЗапроса164();
			Если ЗначениеЗаполнено(Склад) Тогда
				СтрокаУсловия = " И ДокументПродажи.Склад = &Склад";
			КонецЕсли;	  
			  
		КонецЕсли;
				
		Текст = СтрЗаменить(Текст, "&Условие", СтрокаУсловия);
		Запрос.Текст = Текст;
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Не ТекНастройка.ВыводитьИтогиПоДням Тогда
			
			ОбъемРасход 			= 0;
			КоличествоРасход		= 0;
			
			Если НЕ ТекНастройка.НовыйФормат Тогда 
				ОбъемПоступление		= 0;
				КоличествоПоступление	= 0; 
			КонецЕсли;
			
			ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Строка");
			
			МассивПрефиксовНомеровДокументов = ОбщегоНазначения.СформироватьМассивПрефиксовДляРИБИОрганизации(Организация);
			
			Пока Выборка.Следующий() Цикл
				
				ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, Выборка);
				ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
				
				Если НЕ ТекНастройка.НовыйФормат Тогда
					
					ОбъемПоступление 		= ОбъемПоступление + Выборка.ОбъемПоступление;			
					КоличествоПоступление 	= КоличествоПоступление + Выборка.КоличествоПоступление;
					ОбластьМакета.Параметры.НомерТТН = ПреобразоватьНомерДокументаДляВыводаНаПечать(Выборка.НомерТТН,МассивПрефиксовНомеровДокументов);
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ОбъемРасход 			= ОбъемРасход + Выборка.ОбъемРасход;
				КоличествоРасход 		= КоличествоРасход + Выборка.КоличествоРасход;
				
				НомерСтроки 			= НомерСтроки + 1;
				
			КонецЦикла;
			
			ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Итоги");
			
			Если НЕ ТекНастройка.НовыйФормат Тогда
				ОбластьМакета.Параметры.ОбъемПоступление 		= ОбъемПоступление;
				ОбластьМакета.Параметры.КоличествоПоступление 	= КоличествоПоступление;
				ОбластьМакета.Параметры.ОбъемРасход 			= ОбъемРасход;
				ОбластьМакета.Параметры.КоличествоРасход 		= КоличествоРасход;
			Иначе
				ОбластьМакета.Параметры.ОбъемРасход 			= "";
				ОбластьМакета.Параметры.КоличествоРасход 		= КоличествоРасход;
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
		Иначе
			Выгрузка = Результат.Выгрузить();
			
			Периоды = Выгрузка.Скопировать(,"ДатаПродажи");
			Периоды.Свернуть("ДатаПродажи");
			
			Для Каждого День Из Периоды Цикл
				
				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Строка");
				СтрокиДня = Выгрузка.Скопировать(Новый Структура("ДатаПродажи", День.ДатаПродажи));
				
				Для Каждого ТекСтрока Из СтрокиДня Цикл
					ТекСтрока.НаименованиеПродукции = СокрЛП(ТекСтрока.НаименованиеПродукции);
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
					ТабличныйДокумент.Вывести(ОбластьМакета);
					НомерСтроки = НомерСтроки + 1;
				КонецЦикла; // по строкам дня
				
				ИтогиПоКоду = СтрокиДня.Скопировать();
				ИтогиПоКоду.Свернуть("КодВидаПродукции", "КоличествоРасход");
				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоКоду");
				Для Каждого ТекСтрока Из ИтогиПоКоду Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла; // по кодам

				ИтогиПоНаименованию = СтрокиДня.Скопировать();
				ИтогиПоНаименованию.Свернуть("НаименованиеПродукции", "КоличествоРасход");
				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоНаименованию");
				Для Каждого ТекСтрока Из ИтогиПоНаименованию Цикл
					ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ТекСтрока);
					ТабличныйДокумент.Вывести(ОбластьМакета);
				КонецЦикла;

				ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("ИтогиПоКоличеству");
				ОбластьМакета.Параметры.КоличествоРасход = СтрокиДня.Итог("КоличествоРасход");
				ТабличныйДокумент.Вывести(ОбластьМакета);

			КонецЦикла; // по дням
			
		КонецЕсли;
		
		ОбластьМакета = ТекНастройка.Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(
		ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
КонецПроцедуры

#КонецЕсли
