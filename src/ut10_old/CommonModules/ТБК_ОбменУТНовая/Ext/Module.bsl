Функция ЗарегестрироватьПоТаблицеТовары(тчТовары) ЭКСПОРТ
	
	мНомен = тчТовары.ВыгрузитьКолонку("Номенклатура");
	мХарактеристики = тчТовары.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"); 
	мЕдИзм = тчТовары.ВыгрузитьКолонку("ЕдиницаИзмерения");
	
	
	мУзлы = Новый Массив;
	
	мУзлы = ПолучитьВсеУзлыРозницы();
	
	
	Для Каждого эл из мНомен Цикл		
		Если ЗначениеЗаполнено(эл) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,эл);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого эл из мХарактеристики Цикл
		Если ЗначениеЗаполнено(эл) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,эл);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого эл из мЕдИзм Цикл
		Если ЗначениеЗаполнено(эл) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,эл);
		КонецЕсли;
	КонецЦикла;

	
	ЗарегестрироватьШтрихКодыНажатиеПоМассив(мНомен);
	
	Сообщить("Обработано для регистрации "+тчТовары.Количество()+" строк документа");
КонецФУнкции


Функция ПолучитьВсеУзлыРозницы()
	узлы = ПланыОбмена.Полный.Выбрать();
	
	мрезультат = новый Массив;
	
	
	Пока узлы.Следующий() Цикл
		Если ЗначениеЗаполнено(узлы.НомерОтправленного) Тогда
			мрезультат.Добавить(узлы.Ссылка);
		КонецЕсли;
	Конеццикла;
	
	Возврат мрезультат;

КонецФункции

Функция ЗарегестрироватьШтрихКодыНажатиеПоМассив(мНомен, регестрироватьЕдизм = ложь)
	мУзлы = Новый Массив;
	
	мУзлы = ПолучитьВсеУзлыРозницы();
	
	Для Каждого эл из мНомен Цикл
		
		Если НЕ ЗначениеЗаполнено(эл.Наименование) Тогда
			продолжить;
		КонецЕсли;
		
		
		нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		нз.Отбор.Владелец.Установить(эл, истина);
		нз.Прочитать();
		Для Каждого запись из нз Цикл
			
			Если НЕ ЗначениеЗаполнено(запись.Штрихкод) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(запись.ЕдиницаИзмерения.Наименование) Тогда
				Продолжить;
			КонецЕсли;
			//ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,запись);
			
			нзРег = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
			нзРег.Отбор.Штрихкод.Установить(запись.Штрихкод, истина);
			нзРег.Отбор.Владелец.Установить(запись.Владелец, истина);
			нзРег.Отбор.ТипШтрихкода.Установить(запись.ТипШтрихкода, истина);
			нзРег.Отбор.ЕдиницаИзмерения.Установить(запись.ЕдиницаИзмерения, истина);
			нзРег.Отбор.ХарактеристикаНоменклатуры.Установить(запись.ХарактеристикаНоменклатуры, истина);
			нзРег.Отбор.СерияНоменклатуры.Установить(запись.СерияНоменклатуры, истина);
			нзРег.Отбор.Качество.Установить(запись.Качество, истина);
			нзРег.Отбор.УдалитьКод.Установить(запись.УдалитьКод, истина);
			
			нзРег.Отбор.Дата.Установить(запись.Дата, истина);
			
			нзРег.Прочитать();
						
			Если нзРег.Количество() >0 Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,нзРег);
			КонецЕсли;
			Если регестрироватьЕдизм Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(мУзлы,запись.ЕдиницаИзмерения);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецФУнкции
