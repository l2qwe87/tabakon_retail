
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура вызывается перед записью организации в базу.
//
// Параметры:
//  Организация             - СправочникОбъект.КлассификаторОрганизацийЕГАИС - загружаемая организация,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеОрганизации(Организация, ДополнительныеПараметры) Экспорт

	

КонецПроцедуры // ПриЗагрузкеОрганизации()

// Процедура вызывается перед записью алкогольной продукции в базу.
//
// Параметры:
//  АлкогольнаяПродукция - СправочникОбъект.КлассификаторАлкогольнойПродукцииЕГАИС - загружаемая алкогольная продукция,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеАлкогольнойПродукции(АлкогольнаяПродукция, ДополнительныеПараметры) Экспорт

	

КонецПроцедуры // ПриЗагрузкеАлкогольнойПродукции()

// Процедура вызывается при загрузке ТТН (перед записью).
//
// Параметры:
//  ТТН_Объект              - ДокументОбъект.ТоварноТранспортнаяНакладнаяЕГАИС - загружаемая ТТН,
//  РезультатЗагрузкиТТН    - Структура - возвращаемая структура результата загрузки,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриЗагрузкеТТН(ТТН_Объект, РезультатЗагрузкиТТН, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры // ПриЗагрузкеТТН()

// Процедура вызывается при получении ошибки передачи данных в ЕГАИС.
//
// Параметры:
//  ТТН                     - ДокументСсылка.ТоварноТранспортнаяНакладнаяЕГАИС - ТТН с измененным статусом,
//  ДополнительныеПараметры - Произвольный - параметры прикладной конфигурации.
//
Процедура ПриИзмененииСтатусаТТНПриОшибке(ТТН, ДополнительныеПараметры) Экспорт

	

КонецПроцедуры // ПриИзмененииСтатусаТТНПриОшибке()

// Возвращает имя справочника, содержащего классификатор видов алкогольной продукции.
//
// Параметры: нет.
//
// Возвращаемое значение:
//   Строка   - имя справочника.
//
Функция СправочникВидовАлкогольнойПродукции() Экспорт

	Возврат "ВидыАлкогольнойПродукции";

КонецФункции // СправочникВидовАлкогольнойПродукции()

// Получает список доступных транспортных модулей ЕГАИС.
//
// Параметры: нет.
//
// Возвращаемое значение:
//   Массив   - список транспортных модулей ЕГАИС.
//
Функция ДоступныеТранспортныеМодули() Экспорт

	Результат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС,
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Код КАК ИдентификаторФСРАР,
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Представление КАК Представление,
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ИНН КАК ИНН,
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.КПП КАК КПП,
	|	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ПредставлениеАдреса КАК Адрес,
	|	НастройкиОбменаЕГАИС.АдресУТМ,
	|	НастройкиОбменаЕГАИС.ПортУТМ,
	|	НастройкиОбменаЕГАИС.Организация,
	|	НастройкиОбменаЕГАИС.Склад
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеМодуля = Новый Структура;
		
		Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		
			ДанныеМодуля.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
		
		КонецЦикла;
		
		ДанныеМодуля.Вставить("Наименование", 
			Строка(Выборка.ОрганизацияЕГАИС)+" "+Строка(Выборка.Организация)+" "+Строка(Выборка.Склад));

		Результат.Добавить(ДанныеМодуля);
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ДоступныеТранспортныеМодули()

// Процедура запуска регламентного задания ОбработкаОтветовЕГАИС.
//
// Параметры: нет.
//
Процедура ЗапуститьОбработкуОтветовЕГАИС() Экспорт
	
	СписокУТМ = ДоступныеТранспортныеМодули();
	
	Для каждого ТранспортныйМодуль Из СписокУТМ Цикл
		ИнтеграцияЕГАИСКлиентСервер.ОбработатьОтветыИзУТМ(ТранспортныйМодуль, Ложь);
	КонецЦикла;
	
КонецПроцедуры // ЗапуститьОбработкуОтветовЕГАИС()

// Возвращает имя реквизита справочника видов алкогольной продукции, содержащего код вида.
//
// Параметры: нет.
//
// Возвращаемое значение:
//   Строка   - имя реквизита.
//
Функция ИмяКодаВидаПродукции() Экспорт
	Возврат "КодВидаПродукции";
КонецФункции

// Возвращает используемый транспортный модуль
//
Функция ИспользуемыйТранспортныйМодуль(Склад = Неопределено, Организация = Неопределено) Экспорт
		
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Код КАК ИдентификаторФСРАР,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Представление КАК Представление,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ИНН КАК ИНН,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.КПП КАК КПП,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ПредставлениеАдреса КАК Адрес,
	 |	НастройкиОбменаЕГАИС.АдресУТМ,
	 |	НастройкиОбменаЕГАИС.ПортУТМ,
	 |	НастройкиОбменаЕГАИС.Организация,
	 |	НастройкиОбменаЕГАИС.Склад,
	 |	0 КАК Приоритет
	 |ИЗ
	 |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	 |ГДЕ
	 |	НастройкиОбменаЕГАИС.Организация = &Организация
	 |	И НастройкиОбменаЕГАИС.Склад = &Склад
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Код,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Представление,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ИНН,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.КПП,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ПредставлениеАдреса,
	 |	НастройкиОбменаЕГАИС.АдресУТМ,
	 |	НастройкиОбменаЕГАИС.ПортУТМ,
	 |	НастройкиОбменаЕГАИС.Организация,
	 |	НастройкиОбменаЕГАИС.Склад,
	 |	1
	 |ИЗ
	 |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	 |ГДЕ
	 |	НастройкиОбменаЕГАИС.Организация = &Организация
	 |	И НастройкиОбменаЕГАИС.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Код,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Представление,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ИНН,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.КПП,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ПредставлениеАдреса,
	 |	НастройкиОбменаЕГАИС.АдресУТМ,
	 |	НастройкиОбменаЕГАИС.ПортУТМ,
	 |	НастройкиОбменаЕГАИС.Организация,
	 |	НастройкиОбменаЕГАИС.Склад,
	 |	2
	 |ИЗ
	 |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	 |ГДЕ
	 |	НастройкиОбменаЕГАИС.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	 |	И НастройкиОбменаЕГАИС.Склад = &Склад
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Код,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.Представление,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ИНН,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.КПП,
	 |	НастройкиОбменаЕГАИС.ОрганизацияЕГАИС.ПредставлениеАдреса,
	 |	НастройкиОбменаЕГАИС.АдресУТМ,
	 |	НастройкиОбменаЕГАИС.ПортУТМ,
	 |	НастройкиОбменаЕГАИС.Организация,
	 |	НастройкиОбменаЕГАИС.Склад,
	 |	3
	 |ИЗ
	 |	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	 |ГДЕ
	 |	НастройкиОбменаЕГАИС.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	 |	И НастройкиОбменаЕГАИС.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Приоритет";

	Запрос.УстановитьПараметр("Склад", ?(ЗначениеЗаполнено(Склад), Склад, Справочники.Склады.ПустаяСсылка()));
	Запрос.УстановитьПараметр("Организация", ?(ЗначениеЗаполнено(Организация), Организация, Справочники.Организации.ПустаяСсылка()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДанныеМодуля = Новый Структура;
		
		Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
			
			ДанныеМодуля.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
			
		КонецЦикла;
		
		ДанныеМодуля.Вставить("Наименование", 
			Строка(Выборка.ОрганизацияЕГАИС)+" "+Строка(Выборка.Организация)+" "+Строка(Выборка.Склад));

		Возврат ДанныеМодуля;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции 

// Структура обязательных реквизитов передачи в ЕГАИС
//
Функция СтруктураРеквизитовАктаПодтвержденияВЕГАИС() Экспорт
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("Номер","");
	Параметры.Вставить("Дата", "");
	Параметры.Вставить("Отказ", Ложь);
	Параметры.Вставить("Комментарий", "");
	Параметры.Вставить("ТТН", "");
	Параметры.Вставить("ТаблицаТоваров", Новый Массив);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает пустую таблицу товаров, необходимую для подписи чека в ЕГАИС
//
// Возвращаемое значение
//  ТаблицаЗначений
//
Функция ТаблицаТоваровДляПодписиЧека() Экспорт
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("Наименование");
	ТаблицаТоваров.Колонки.Добавить("НомерСекции");
	ТаблицаТоваров.Колонки.Добавить("Цена");
	ТаблицаТоваров.Колонки.Добавить("Количество");
	ТаблицаТоваров.Колонки.Добавить("Скидка");
	ТаблицаТоваров.Колонки.Добавить("СтавкаНДС");
	ТаблицаТоваров.Колонки.Добавить("ПараметрыАлкогольнойПродукции");
	
	Возврат ТаблицаТоваров;
	
КонецФункции

Функция ТекстЗапросаРеквизитыШапки_ТТН_ЕГАИС() Экспорт
	Текст = 
	"ВЫБРАТЬ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.НомерВходящий КАК НомерВходящегоДокумента,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.ДатаВходящая  КАК ДатаВходящегоДокумента,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка 		КАК ТоварноТранспортнаяНакладнаяЕГАИС,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Склад 		КАК Склад,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Организация	КАК Организация,
	|	ИСТИНА 											КАК ПолученИзЕГАИС,
	|	ВЫБОР
	|		КОГДА ТоварноТранспортнаяНакладнаяЕГАИС.Поставщик = &ПустаяСсылкаПоставщика
	|			ТОГДА ТоварноТранспортнаяНакладнаяЕГАИС.Грузоотправитель
	|		ИНАЧЕ ТоварноТранспортнаяНакладнаяЕГАИС.Поставщик
	|	КОНЕЦ 											   КАК Поставщик,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Грузоотправитель КАК Грузоотправитель,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Грузополучатель  КАК Грузополучатель
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Документ.ТоварноТранспортнаяНакладнаяЕГАИС КАК ТоварноТранспортнаяНакладнаяЕГАИС
	|ГДЕ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.НомерВходящегоДокумента,
	|	ТаблицаВЗапросе.ДатаВходящегоДокумента,
	|	ТаблицаВЗапросе.ТоварноТранспортнаяНакладнаяЕГАИС,
	|	ТаблицаВЗапросе.Склад КАК СкладОрдер,
	|	ТаблицаВЗапросе.Организация,
	|	ТаблицаВЗапросе.ПолученИзЕГАИС,
	|	ВЫБОР
	|		КОГДА СоответствиеОрганизацийЕГАИС.Контрагент ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ СоответствиеОрганизацийЕГАИС.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СоответствиеОрганизацийЕГАИСГрузоотправитель.Контрагент ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ СоответствиеОрганизацийЕГАИСГрузоотправитель.Контрагент
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА СоответствиеОрганизацийЕГАИСГрузополучатель.Контрагент ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		ИНАЧЕ СоответствиеОрганизацийЕГАИСГрузополучатель.Контрагент
	|	КОНЕЦ КАК Грузополучатель
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
	|		ПО ТаблицаВЗапросе.Поставщик = СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИСГрузоотправитель
	|		ПО ТаблицаВЗапросе.Грузоотправитель = СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИСГрузополучатель
	|		ПО ТаблицаВЗапросе.Грузополучатель = СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС";
	Возврат Текст;
КонецФункции

Функция ТекстЗапросаРеквизитыТЧ_ТТН_ЕГАИС() Экспорт
	Текст = 
	"ВЫБРАТЬ
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.АлкогольнаяПродукция,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.Количество,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.Количество КАК КоличествоУпаковок,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.Сумма,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.Цена,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.ИдентификаторУпаковки,
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.ИдентификаторСтроки
	|ПОМЕСТИТЬ ТаблицаЕГАИС
	|ИЗ
	|	Документ.ТоварноТранспортнаяНакладнаяЕГАИС.Товары КАК ТоварноТранспортнаяНакладнаяЕГАИСТовары
	|ГДЕ
	|	ТоварноТранспортнаяНакладнаяЕГАИСТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЕГАИС.АлкогольнаяПродукция,
	|	ТаблицаЕГАИС.Количество,
	|	ТаблицаЕГАИС.КоличествоУпаковок,
	|	ТаблицаЕГАИС.Сумма,
	|	ТаблицаЕГАИС.Цена,
	|	ТаблицаЕГАИС.ИдентификаторУпаковки,
	|	ТаблицаЕГАИС.ИдентификаторСтроки,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика,
	|	СоответствиеНоменклатурыЕГАИС.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИскатьСоответствиеБезУпаковок
	|ПОМЕСТИТЬ ТаблицаСоответствий
	|ИЗ
	|	ТаблицаЕГАИС КАК ТаблицаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЕГАИС.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И ТаблицаЕГАИС.ИдентификаторУпаковки = СоответствиеНоменклатурыЕГАИС.ИдентификаторУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСоответствий.АлкогольнаяПродукция,
	|	ТаблицаСоответствий.Количество,
	|	ТаблицаСоответствий.КоличествоУпаковок,
	|	ТаблицаСоответствий.Сумма,
	|	ТаблицаСоответствий.Цена,
	|	ТаблицаСоответствий.ИдентификаторУпаковки,
	|	ТаблицаСоответствий.ИдентификаторСтроки,
	|	ТаблицаСоответствий.Номенклатура,
	|	ТаблицаСоответствий.Характеристика,
	|	ТаблицаСоответствий.ЕдиницаИзмерения,
	|	ТаблицаСоответствий.ИскатьСоответствиеБезУпаковок
	|ПОМЕСТИТЬ ТаблицаПодготовкаДополнительногоПоиска
	|ИЗ
	|	ТаблицаСоответствий КАК ТаблицаСоответствий
	|ГДЕ
	|	ТаблицаСоответствий.ИскатьСоответствиеБезУпаковок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДополнительногноПоиска.АлкогольнаяПродукция,
	|	ВЫБОР
	|		КОГДА СоответствиеНоменклатурыЕГАИС.ЕдиницаИзмерения = &ЕдиницаИзмеренияПустоеЗначение
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПараметрРанжирования,
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.ЕдиницаИзмерения
	|ИЗ
	|	ТаблицаПодготовкаДополнительногоПоиска КАК ТаблицаДополнительногноПоиска
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаДополнительногноПоиска.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПараметрРанжирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСоответствий.АлкогольнаяПродукция,
	|	ТаблицаСоответствий.Количество,
	|	ТаблицаСоответствий.КоличествоУпаковок,
	|	ТаблицаСоответствий.Сумма,
	|	ТаблицаСоответствий.Цена,
	|	ТаблицаСоответствий.ИдентификаторУпаковки,
	|	ТаблицаСоответствий.ИдентификаторСтроки,
	|	ТаблицаСоответствий.Номенклатура,
	|	ТаблицаСоответствий.Характеристика,
	|	ТаблицаСоответствий.ЕдиницаИзмерения,
	|	ТаблицаСоответствий.ИскатьСоответствиеБезУпаковок
	|ИЗ
	|	ТаблицаСоответствий КАК ТаблицаСоответствий";
	Возврат Текст;
КонецФункции

Процедура ЗаполнитьТЧПоступленияПоДаннымТТН_ЕГАИС(ТаблицаДанныеЕГАИС, ТаблицаДополнительныхДанные, ПоступлениеТоваровОбъект) Экспорт
	
	СкладШапки = ?(ТипЗнч(ПоступлениеТоваровОбъект.СкладОрдер) = Тип("СправочникСсылка.Склады"),
		ПоступлениеТоваровОбъект.СкладОрдер, Справочники.Склады.ПустаяСсылка());
		
	Для Каждого СтрокаДанныхЕГАИС Из ТаблицаДанныеЕГАИС Цикл
		СтрокаТаблицы = ПоступлениеТоваровОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаДанныхЕГАИС);
		
		Если СтрокаДанныхЕГАИС.ИскатьСоответствиеБезУпаковок Тогда
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("АлкогольнаяПродукция", СтрокаДанныхЕГАИС.АлкогольнаяПродукция);
			
			МассивСтрок = ТаблицаДополнительныхДанные.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрок.Количество() > 0 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, МассивСтрок[0]);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ЕдиницаИзмерения) Тогда
				СтрокаТаблицы.ЕдиницаИзмерения = СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков;
			КонецЕсли;
			
			СтрокаТаблицы.Коэффициент = СтрокаТаблицы.ЕдиницаИзмерения.Коэффициент;
			СтрокаТаблицы.СтавкаНДС   = СтрокаТаблицы.Номенклатура.СтавкаНДС;
			
			ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(СтрокаТаблицы,ПоступлениеТоваровОбъект);
			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТаблицы, ПоступлениеТоваровОбъект);
			
		КонецЕсли;
		
		СтрокаТаблицы.Склад = СкладШапки;
		
	КонецЦикла;
КонецПроцедуры

// Возвращается структуру для установки отбора по умолчанию при выборе ТТН ЕГАИС
// Ключи в структуре должны соответствовать именам доступных полей отбора списка в форме выбора ТТН ЕГАИС
//
Функция ПолучитьПараметрыОтбораТТН_ЕГАИС(ДокументИБ) Экспорт
	ПараметрыОтбора = Новый Структура;
	
	ПараметрыОтбора.Вставить("СтатусОбработкиТТН_ЕГАИС", Перечисления.СтатусыОбработкиТТН_ЕГАИС.ПустаяСсылка());
	
	ПараметрыОтбора.Вставить("ПометкаУдаления", Ложь);
	
	Если ЗначениеЗаполнено(ДокументИБ.Организация) Тогда
		ПараметрыОтбора.Вставить("Организация", ДокументИБ.Организация);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументИБ.СкладОрдер) И ТипЗнч(ДокументИБ.СкладОрдер) = Тип("СправочникСсылка.Склады") Тогда
		ПараметрыОтбора.Вставить("Склад", ДокументИБ.СкладОрдер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументИБ.Контрагент) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СоответствиеОрганизацийЕГАИС.ОрганизацияЕГАИС
		               |ИЗ
		               |	РегистрСведений.СоответствиеОрганизацийЕГАИС КАК СоответствиеОрганизацийЕГАИС
		               |ГДЕ
		               |	СоответствиеОрганизацийЕГАИС.Контрагент = &Контрагент";
		Запрос.УстановитьПараметр("Контрагент", ДокументИБ.Контрагент);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПараметрыОтбора.Вставить("Поставщик", Выборка.ОрганизацияЕГАИС);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыОтбора;
КонецФункции

// Проверяет возможность сопоставления документов
//
// Параметры:
//  ТТН_ЕГАИС         - ДокументСсылка.ТоварноТранспортнаяНакладнаяЕГАИС
//  ДокументИБ        - ДокументОбъект.ПоступлениеТоваровУслуг
//  Отказ             - Булево
//  СообщатьОПричинах - Булево
//
Процедура ПроверитьВозможностьСопоставления(ТТН_ЕГАИС, ДокументИБ, Отказ, СообщатьОПричинах = Истина) Экспорт
	СписокПричин = Новый СписокЗначений;
	
	// Проверка документа ИБ
	Если ДокументИБ.АктПереданВЕГАИС Тогда
		СписокПричин.Добавить("Акт передан в ЕГАИС.");
	КонецЕсли;
	
	// Проверка ТТН ЕГАИС
	СтатусТТН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТН_ЕГАИС, "СтатусОбработкиТТН_ЕГАИС");
	Если СтатусТТН = Перечисления.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС Тогда
		СписокПричин.Добавить("По ТТН передан отказ в ЕГАИС.");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка,
	               |	ПоступлениеТоваровУслуг.Представление
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.ТоварноТранспортнаяНакладнаяЕГАИС = &ТоварноТранспортнаяНакладнаяЕГАИС
	               |	И ПоступлениеТоваровУслуг.Ссылка <> &ТекущийДокумент";
	Запрос.УстановитьПараметр("ТоварноТранспортнаяНакладнаяЕГАИС", ТТН_ЕГАИС);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументИБ.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СписокПричин.Добавить("ТТН уже сопоставлена с документом - "+Выборка.Представление);
	КонецЕсли;
	
	Если ТТН_ЕГАИС.ПометкаУдаления Тогда
		СписокПричин.Добавить("ТТН помечена на удаление.");
	КонецЕсли;
	
	// Вывод сообщений
	Отказ = СписокПричин.Количество() > 0;
	Если Отказ И СообщатьОПричинах Тогда
		Сообщить("Выполнить сопоставление невозможно по следующим причинам:", СтатусСообщения.Важное);
		Для Каждого Причина Из СписокПричин Цикл
			Сообщить(Причина.Значение, СтатусСообщения.Информация);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Выполняет сопоставление документов
//
// Параметры:
//  ТТН_ЕГАИС   - ДокументСсылка.ТоварноТранспортнаяНакладнаяЕГАИС
//  ДокументИБ  - ДокументОбъект.ПоступлениеТоваровУслуг
//  ЗаполнятьТЧ - Булево
//
Процедура ВыполнитьСопоставление(ТТН_ЕГАИС, ДокументИБ, ЗаполнятьТЧ) Экспорт
	
	// Заполнение шапки
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРеквизитыШапки_ТТН_ЕГАИС();
	Запрос.УстановитьПараметр("Ссылка", ТТН_ЕГАИС);
	Запрос.УстановитьПараметр("ПустаяСсылкаПоставщика", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ТЗ = Результат.Выгрузить();
		СтрокаТЗ = ТЗ[0];
		
		Для Каждого Колонка Из ТЗ.Колонки Цикл
			ИмяРеквизита = Колонка.Имя;
			ЗначениеРеквизита = СтрокаТЗ[ИмяРеквизита];
			Если ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				ДокументИБ[ИмяРеквизита] = ЗначениеРеквизита;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

	// Заполнение табличной части
	Если Не ЗаполнятьТЧ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРеквизитыТЧ_ТТН_ЕГАИС();
	
	Запрос.УстановитьПараметр("Ссылка", ТТН_ЕГАИС);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПустоеЗначение", Справочники.ЕдиницыИзмерения.ПустаяСсылка());
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаДанныеЕГАИС = Результат[4].Выгрузить();
	ТаблицаДополнительныхДанные = Результат[3].Выгрузить();

	ЗаполнитьТЧПоступленияПоДаннымТТН_ЕГАИС(ТаблицаДанныеЕГАИС, ТаблицаДополнительныхДанные, ДокументИБ);
	
КонецПроцедуры
