// Заполняет реквизиты значениями по умолчанию
//
// Параметры: 
//  ПараметрОбъектКопирования	- содержкит ссылку на документ копирования в случае, 
//								  если новый документ создается копированием.
//  ПараметрОснование			- содержкит ссылку на документ-основание в случае, 
//								  если новый документ создается на основании другого.
//

Перем           таблАКЦИИ,таблПремииШтрафы;
Перем 			ВсегоОтдел;
Перем 			ВсегоСмены;
Перем 			ВсегоДопСмены;				
Перем 			ВсегоПроцентГрупп;
Перем 			ВсегоСменыИПроценты;
Перем 			ВсегоСуммаСмен;
Перем 			ВсегоПремия;
Перем 			ВсегоПремияАкционныеТовары;
Перем 			ВсегоУдержаниеПремииЗаАкционныйТовар;
Перем 			ВсегоДопСмена;
Перем 			ВсегоВычеты;
Перем           ИтоговаяСумма;
Перем           ГлобСмены;


Процедура ИнициализироватьНовыйДокумент(ПараметрОбъектКопирования, ПараметрОснование) Экспорт
	
	#Если Клиент Или ВнешнееСоединение Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ПараметрОбъектКопирования, ПараметрОснование);
	#КонецЕсли
	
КонецПроцедуры // ИнициализироватьНовыйДокумент()	

//старый, неработающий вариант
Процедура ВыполнитьРасчетАвтозаполнениеТЧ(Администратор) Экспорт
	//Начисления.Очистить();
	//
	//// Запрос и заполнение данных временной таблицы соответствий элементов номенклатуры группам для %
	//ТекстЗапросаВерхнегоУровня = "// Получение групп и элементов верхнего уровня
	//				|ВЫБРАТЬ
	//				|	СоставГрупп.Номенклатура,
	//				|	СоставГрупп.Группа
	//				|	
	//				|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	//				|ИЗ
	//				|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГрупп;
	//				|";
	//				
	//ТекстЗапросаЭлементовСледующегоУровня = "// Получение групп и элементов следующего уровня (циклически)
	//				|ВЫБРАТЬ
	//				|	СпрНоменклатура.Ссылка,
	//				|	ГруппыНоменклатуры.Группа
	//				|	
	//				|	ПОМЕСТИТЬ ВТ_ТекущиеЭлементы	
	//				|ИЗ
	//				|	Справочник.Номенклатура КАК СпрНоменклатура
	//				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГруппыНоменклатуры КАК ГруппыНоменклатуры
	//				|			ПО СпрНоменклатура.Родитель = ГруппыНоменклатуры.Номенклатура
	//				|ГДЕ
	//				|	СпрНоменклатура.Родитель В ИЕРАРХИИ(ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	//				|	И НЕ СпрНоменклатура.Ссылка	В (ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	//				|
	//				|;
	//				|
	//				|// Делаем выборку из ВТ_ТекущиеЭлементы и если она пуста - выход из цикла запросов
	//				|ВЫБРАТЬ ВТ_ТекущиеЭлементы.* ИЗ ВТ_ТекущиеЭлементы
	//				|";

	//ТекстЗапросаОперацииВТ = "// Объединяем данные таблиц элементов первого и всех следующих уровней
	//				|ВЫБРАТЬ
	//				|	ВТ_ГруппыНоменклатуры.*
	//				|	
	//				|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры1
	//				|ИЗ
	//				|	ВТ_ГруппыНоменклатуры
	//				|
	//				|ОБЪЕДИНИТЬ ВЫБРАТЬ
	//				|	ВТ_ТекущиеЭлементы.*
	//				|ИЗ
	//				|	ВТ_ТекущиеЭлементы;
	//				|
	//				|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры;
	//				|УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы;
	//				|
	//				|ВЫБРАТЬ
	//				|	ВТ_ГруппыНоменклатуры1.*
	//				|	
	//				|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	//				|ИЗ
	//				|	ВТ_ГруппыНоменклатуры1;
	//				|
	//				|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры1;
	//				|";
	//						
	//Запрос = Новый Запрос;
	//Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//Запрос.Текст = ТекстЗапросаВерхнегоУровня + Символы.ПС + ТекстЗапросаЭлементовСледующегоУровня;
	//
	//Пока НЕ Запрос.Выполнить().Пустой() Цикл
	//	Запрос.Текст = ТекстЗапросаОперацииВТ + ТекстЗапросаЭлементовСледующегоУровня;
	//КонецЦикла;

	//Запрос.Текст = "УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы";
	//Запрос.Выполнить();
	//
	//// Получение данных заполнения ТЧ "Начисления"
	//СписокОсновныхВР = Новый СписокЗначений;
	//СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера);
	//СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладВДень);
	//СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопВыход);
	//СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопПремия);
	//
	//Запрос.УстановитьПараметр("СписокОсновныхВР", СписокОсновныхВР);
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	//Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	//Запрос.Текст = ПолучитьМакет("ТекстЗапросаАвтозаполненияТЧНачисления").ПолучитьТекст();
	//
	//РезЗапроса = Запрос.Выполнить();
	//
	//Если РезЗапроса.Пустой() Тогда Возврат; 
	//КонецЕсли;
	//
	//Выборка = РезЗапроса.Выбрать();
	//
	//		Пока Выборка.Следующий() Цикл			
	//			
	//			Запросец = Новый Запрос;
	//			//Запросец.УстановитьПараметр("Склад", Стр.Ссылка);
	//			Запросец.УстановитьПараметр("Продавец", Выборка.Продавец);
	//			Запросец.Текст = "ВЫБРАТЬ
	//			                 |	ФизическиеЛица.Ссылка,
	//			                 |	ФизическиеЛица.Отдел.Ссылка КАК Отдел
	//			                 |ИЗ
	//			                 |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	//			                 |ГДЕ
	//			                 |	ФизическиеЛица.Ссылка = &Продавец";
	//			Запросец = Запросец.Выполнить().Выгрузить();
	//			Для каждого Строчка из Запросец Цикл
	//				СтрокаТЧ = Начисления.Добавить();
	//				СтрокаТЧ.Сотрудник = Выборка.Продавец;
	//				СтрокаТЧ.Отдел = Строчка.Отдел;
	//				СтрокаТЧ.Оклад = Выборка.Оклад;
	//				СтрокаТЧ.ОкладСтажера = Выборка.ОкладСтажера;
	//				СтрокаТЧ.ДопСмены = Выборка.ДопСмена;
	//				СтрокаТЧ.ДопПремия = Выборка.ДопПремия;
	//				СтрокаТЧ.НДФЛ = Выборка.НДФЛ;
	//				СтрокаТЧ.ПремияСуммой = Выборка.Премия;
	//				СтрокаТЧ.Удержания = Выборка.Удержания;
	//				СтрокаТЧ.ПремияАкционныеТовары = Выборка.ПремияЗаАкционныйТовар;
	//				СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров = Выборка.УдержаниеПремииЗаАкционныйТовар;
	//				СтрокаТЧ.ПроцентГрупп = Выборка.ПремияСГруппПроцентов;
	//			КонецЦикла;
	//		КонецЦикла;
	////===============================================================================
КонецПроцедуры	          

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр РасчетыПоЗаработнойПлате Приход
	Движения.РасчетыПоЗаработнойПлате.Записывать = Истина;
	Движения.РасчетыПоЗаработнойПлате.Очистить();
	
	ДатаОкончанияПериода = КонецМесяца(Период);
	
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		// Запись Оклада  
		Если ТекСтрокаНачисления.Оклад <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ОкладВДень;
			Движение.Сумма = ТекСтрокаНачисления.Оклад; 
		КонецЕсли;
		
		// Запись Оклада стажера 
		Если ТекСтрокаНачисления.ОкладСтажера <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера;
			Движение.Сумма = ТекСтрокаНачисления.ОкладСтажера; 
		КонецЕсли;
		
		// Запись Доп.смен 
		Если ТекСтрокаНачисления.ДопСмены <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ДопВыход;
			Движение.Сумма = ТекСтрокаНачисления.ДопСмены; 
		КонецЕсли;
		
		// Запись Премии с групп по %
		Если ТекСтрокаНачисления.ПроцентГрупп <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ПремияСГрупп;
			Движение.Сумма = ТекСтрокаНачисления.ПроцентГрупп; 
		КонецЕсли;
		
		// Запись Доп. премии
		Если ТекСтрокаНачисления.ДопПремия <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ДопПремия;
			Движение.Сумма = ТекСтрокаНачисления.ДопПремия; 
		КонецЕсли;
		
		// Запись Премии с продаж акционных товаров
		Если ТекСтрокаНачисления.ПремияАкционныеТовары <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ПремияЗаАкционныеТовары;
			Движение.Сумма = ТекСтрокаНачисления.ПремияАкционныеТовары; 
		КонецЕсли;
		
		// Запись Удержаний с возвратов акционных товаров
		Если ТекСтрокаНачисления.УдержаниеВозвратаАкционныхТоваров <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.УдержаниеЗаВозвратАкционногоТовара;
			Движение.Сумма = ТекСтрокаНачисления.УдержаниеВозвратаАкционныхТоваров; 
		КонецЕсли;
		
		// Запись НДФЛ
		Если ТекСтрокаНачисления.НДФЛ <> 0 Тогда
			Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = ДатаОкончанияПериода;
			Движение.Организация = Организация;
			Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
			Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.ПодоходныйНалог;
			Движение.Сумма = ТекСтрокаНачисления.НДФЛ; 
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

//старый вариант ЛК Андрей
Процедура ВыполнитьРасчетТЧ(Администратор) Экспорт
	Начисления.Очистить();

	
	
	// Запрос и заполнение данных временной таблицы соответствий элементов номенклатуры группам для %
	ТекстЗапросаВерхнегоУровня = "// Получение групп и элементов верхнего уровня
					|ВЫБРАТЬ
					|	СоставГрупп.Номенклатура,
					|	СоставГрупп.Группа
					|	
					|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
					|ИЗ
					|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГрупп;
					|";
					
	ТекстЗапросаЭлементовСледующегоУровня = "// Получение групп и элементов следующего уровня (циклически)
					|ВЫБРАТЬ
					|	СпрНоменклатура.Ссылка,
					|	ГруппыНоменклатуры.Группа
					|	
					|	ПОМЕСТИТЬ ВТ_ТекущиеЭлементы	
					|ИЗ
					|	Справочник.Номенклатура КАК СпрНоменклатура
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГруппыНоменклатуры КАК ГруппыНоменклатуры
					|			ПО СпрНоменклатура.Родитель = ГруппыНоменклатуры.Номенклатура
					|ГДЕ
					|	СпрНоменклатура.Родитель В ИЕРАРХИИ(ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
					|	И НЕ СпрНоменклатура.Ссылка	В (ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
					|
					|;
					|
					|// Делаем выборку из ВТ_ТекущиеЭлементы и если она пуста - выход из цикла запросов
					|ВЫБРАТЬ ВТ_ТекущиеЭлементы.* ИЗ ВТ_ТекущиеЭлементы
					|";

	ТекстЗапросаОперацииВТ = "// Объединяем данные таблиц элементов первого и всех следующих уровней
					|ВЫБРАТЬ
					|	ВТ_ГруппыНоменклатуры.*
					|	
					|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры1
					|ИЗ
					|	ВТ_ГруппыНоменклатуры
					|
					|ОБЪЕДИНИТЬ ВЫБРАТЬ
					|	ВТ_ТекущиеЭлементы.*
					|ИЗ
					|	ВТ_ТекущиеЭлементы;
					|
					|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры;
					|УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы;
					|
					|ВЫБРАТЬ
					|	ВТ_ГруппыНоменклатуры1.*
					|	
					|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
					|ИЗ
					|	ВТ_ГруппыНоменклатуры1;
					|
					|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры1;
					|";
							
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаВерхнегоУровня + Символы.ПС + ТекстЗапросаЭлементовСледующегоУровня;
	
	Пока НЕ Запрос.Выполнить().Пустой() Цикл
		Запрос.Текст = ТекстЗапросаОперацииВТ + ТекстЗапросаЭлементовСледующегоУровня;
	КонецЦикла;

	Запрос.Текст = "УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы";
	Запрос.Выполнить();
	
	// Получение данных заполнения ТЧ "Начисления"
	СписокОсновныхВР = Новый СписокЗначений;
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладВДень);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопВыход);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопПремия);
		
	Запрос.УстановитьПараметр("СписокОсновныхВР", СписокОсновныхВР);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.Текст = ПолучитьМакет("ТекстЗапросаАвтозаполненияТЧНачисления").ПолучитьТекст();
	
	РезЗапроса = Запрос.Выполнить();
	
	Если РезЗапроса.Пустой() Тогда Возврат; 
	КонецЕсли;
	
	Выборка = РезЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл			
		//=============================
		
		ОкладВДень=0;
		ОкладЗаДоп=0;
		Миним=0;
		Подоходный=0;
		Премия=0;
		
		Смены=0;
		ДопСмены=0;
		
		Запр = Новый Запрос;
		Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
		Запр.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
		Запр.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
		Запр.Текст = "ВЫБРАТЬ
		             |	ОтчетОРозничныхПродажахПродавцы.Продавец,
		             |	ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец,
		             |	ОтчетОРозничныхПродажахПродавцы.ЭтоДопСмена
		             |ИЗ
		             |	Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		             |		ПО ОтчетОРозничныхПродажахПродавцы.Ссылка = ОтчетОРозничныхПродажах.Ссылка
		             |ГДЕ
		             |	ОтчетОРозничныхПродажах.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		             |	И ОтчетОРозничныхПродажахПродавцы.Продавец = &Продавец
		             |	И ОтчетОРозничныхПродажах.ПометкаУдаления = ЛОЖЬ";
		Запр = Запр.Выполнить().Выгрузить();
		Для каждого Строчка из Запр Цикл
			Если Строчка.ЭтоГлавныйпродавец=Истина Тогда
				Смены=Смены+1;
			КонецЕсли;		
			Если Строчка.ЭтоДопСмена=Истина Тогда
				ДопСмены=ДопСмены+1;
			КонецЕсли;
		КонецЦикла;	
		
		Вычеты=0;
		Запр = Новый Запрос;
		Запр.УстановитьПараметр("Период", ЭтотОбъект.Период);
		Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
		Запр.Текст = "ВЫБРАТЬ
		|	ВычетыСотрудники.Сумма КАК Сумма,
		|	ВычетыСотрудники.ПериодВычета,
		|	ВычетыСотрудники.СтатьяЗатрат
		|ИЗ
		|	Документ.Вычеты.Сотрудники КАК ВычетыСотрудники
		|ГДЕ
		|	ВычетыСотрудники.ПериодВычета = &Период
		|	И ВычетыСотрудники.Сотрудник = &Продавец";
		
		Запр = Запр.Выполнить().Выгрузить();
		Для каждого Строчка из Запр Цикл
			Вычеты = Вычеты + Строчка.Сумма;
		КонецЦикла;	
				
		Запр = Новый Запрос;
		Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
		Запр.Текст = "ВЫБРАТЬ
		|	ПриемНаРаботуОсновныеНачисления.Сумма,
		|	ПриемНаРаботуОсновныеНачисления.ВидРасчета
		|ИЗ
		|	Документ.ПриемНаРаботу.ОсновныеНачисления КАК ПриемНаРаботуОсновныеНачисления
		|ГДЕ
		|	ПриемНаРаботуОсновныеНачисления.Ссылка.Сотрудник.Ссылка = &Продавец";
		Запр = Запр.Выполнить().Выгрузить();
		Для каждого Строчка из Запр Цикл
			
			Если Строка(Строчка.ВидРасчета)=Строка("Оклад в день") Тогда
				ОкладВДень=Строчка.Сумма;
			КонецЕсли;
			Если Строка(Строчка.ВидРасчета)=Строка("Доп. выход") Тогда
				ОкладЗаДоп=Строчка.Сумма;
			КонецЕсли;
			Если Строка(Строчка.ВидРасчета)=Строка("Минимальная") Тогда
				Миним=Строчка.Сумма;
			КонецЕсли;
			Если Строка(Строчка.ВидРасчета)=Строка("Подоходный налог") Тогда
				Подоходный=Строчка.Сумма;
			КонецЕсли;
			Если Строка(Строчка.ВидРасчета)=Строка("Премия") Тогда
				Премия=Строчка.Сумма;
			КонецЕсли;
		КонецЦикла;
		
					СледМесяц=ДобавитьМесяц(ЭтотОбъект.Период, 1);
			Запр = Новый Запрос;
			Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запр.УстановитьПараметр("Дата", КонецМесяца(СледМесяц));
			Запр.Текст = "ВЫБРАТЬ
			|	ИсторияСотрудников.Сотрудник,
			|	ИсторияСотрудников.Дата КАК Дата,
			|	ИсторияСотрудников.Событие,
			|	ИсторияСотрудников.ИзменённыйЭлемент
			|ИЗ
			|	РегистрСведений.ИсторияСотрудников КАК ИсторияСотрудников
			|ГДЕ
			|	ИсторияСотрудников.Дата > &Дата
			|	И ИсторияСотрудников.Сотрудник = &Продавец 			
			|	И ИсторияСотрудников.Событие ПОДОБНО ""%->%""
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ";
			Запр = Запр.Выполнить().Выгрузить();
			Для каждого Строчка из Запр Цикл
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Оклад в день") Тогда
					СтрокаОкладВДень=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладВДень, 1)<>"-" Цикл
						ОкладВДень=ОкладВДень+Лев(СтрокаОкладВДень, 1);
						СтрокаОкладВДень = Сред(СтрокаОкладВДень, 2);
					КонецЦикла;
					ОкладВДень=Число(ОкладВДень);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Доп. выход") Тогда
					СтрокаОкладЗаДоп=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладЗаДоп, 1)<>"-" Цикл
						ОкладЗаДоп=ОкладЗаДоп+Лев(СтрокаОкладЗаДоп, 1);
						СтрокаОкладЗаДоп = Сред(СтрокаОкладЗаДоп, 2);
					КонецЦикла;
					ОкладЗаДоп=Число(ОкладЗаДоп);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Минимальная") Тогда
					СтрокаМиним=Строчка.Событие;
					Миним="";
					Пока Лев(СтрокаМиним, 1)<>"-" Цикл
						Миним=Миним+Лев(СтрокаМиним, 1);
						СтрокаМиним = Сред(СтрокаМиним, 2);
					КонецЦикла;
					Миним=Число(Миним);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Подоходный налог") Тогда
					СтрокаПодоходный=Строчка.Событие;
					Подоходный="";
					Пока Лев(СтрокаПодоходный, 1)<>"-" Цикл
						Подоходный=Подоходный+Лев(СтрокаПодоходный, 1);
						СтрокаПодоходный = Сред(СтрокаПодоходный, 2);
					КонецЦикла;
					Подоходный=Число(Подоходный);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Премия") Тогда
					СтрокаПремия=Строчка.Событие;
					Премия="";
					Пока Лев(СтрокаПремия, 1)<>"-" Цикл
						Премия=Премия+Лев(СтрокаПремия, 1);
						СтрокаПремия = Сред(СтрокаПремия, 2);
					КонецЦикла;
					Премия=Число(Премия);
				КонецЕсли;
		КонецЦикла;
		
		//Для бывших стажеров
		ВыплатаСтажерам=0;
		Запр = Новый Запрос;
		Запр.УстановитьПараметр("Период", ЭтотОбъект.Период);
		Запр.УстановитьПараметр("Сотрудник", Выборка.Продавец);
		Запр.Текст = "ВЫБРАТЬ
		             |	ВыплатыСтажерамСотрудники.Сотрудник,
		             |	ВыплатыСтажерамСотрудники.Сумма,
		             |	ВыплатыСтажерамСотрудники.ПериодНачисления
		             |ИЗ
		             |	Документ.ВыплатыСтажерам.Сотрудники КАК ВыплатыСтажерамСотрудники
		             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыплатыСтажерам КАК ВыплатыСтажерам
		             |		ПО ВыплатыСтажерамСотрудники.Ссылка = ВыплатыСтажерам.Ссылка
		             |ГДЕ
		             |	ВыплатыСтажерамСотрудники.ПериодНачисления = &Период
		             |	И ВыплатыСтажерамСотрудники.Сотрудник = &Сотрудник
		             |	И ВыплатыСтажерам.ПометкаУдаления = ЛОЖЬ";
		Запр = Запр.Выполнить().Выгрузить();
		Для каждого Строчка из Запр Цикл
			ВыплатаСтажерам=Строчка.Сумма;
		КонецЦикла;
		
		Если Смены<14 Тогда
			Премия=0;
		КонецЕсли;
		//СуммаСтажировки=Выборка.ОкладСтажера;
		СуммаСмен=Смены+ДопСмены;
		//Доплата за более чем 15 смен
		СуммаДоп=0;
		Если Строка(Выборка.ПремияСГруппПроцентов)<>"" Тогда
			ПремияСГруппПроцентов=Выборка.ПремияСГруппПроцентов;
		Иначе
			ПремияСГруппПроцентов=0;
		КонецЕсли;
		//Если Смены>14 Тогда
		СменыИПроценты=Смены*ОкладВДень+ПремияСГруппПроцентов;
		Если Смены=0 Тогда
		ЗаработокЗаДень=СменыИПроценты;	
		Иначе
		ЗаработокЗаДень=СменыИПроценты/Смены;
		КонецЕсли;
		ОфициальнаяЗПЗаДень=Миним/15;
		Разница=ОфициальнаяЗПЗаДень-ЗаработокЗаДень;
		Если Разница>0 Тогда
		СуммаДоп=Разница*Смены;
		КонецЕсли;
		//КонецЕсли;
		//===========		
		Если Строка(Выборка.ОкладСтажера)<>"" Тогда
		Зап = Новый Запрос;
		Зап.УстановитьПараметр("Продавец", Выборка.Продавец);
		Зап.Текст = "ВЫБРАТЬ
		             |	ПриемНаСтажировку.СтавкаЗаСмену,
		             |	ПриемНаСтажировку.НачалоСтажировки,
		             |	ПриемНаСтажировку.ОкончаниеСтажировки
		             |ИЗ
		             |	Документ.ПриемНаСтажировку КАК ПриемНаСтажировку
		             |ГДЕ
		             |	ПриемНаСтажировку.Стажер.Ссылка = &Продавец";
		Зап = Зап.Выполнить().Выгрузить();
		Для каждого Строчка из Зап Цикл
		ОкладСтажера=Строчка.СтавкаЗаСмену;
		Дни=1+(НачалоДня(Строчка.ОкончаниеСтажировки) - НачалоДня(Строчка.НачалоСтажировки)) / 86400;
	КонецЦикла;
Иначе 
	Дни=0;
	ОкладСтажера=0;
	КонецЕсли;
		//=============================
		Если Строка(Администратор)<>"" Тогда
			Запросец = Новый Запрос;
			Запросец.УстановитьПараметр("Администратор", Администратор);
			Запросец.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запросец.Текст = "ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка,
			|	ФизическиеЛица.Отдел.Ссылка КАК Отдел
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &Продавец
			|	И ФизическиеЛица.Отдел.Ответственный.Ссылка = &Администратор";
					Иначе 
			Запросец = Новый Запрос;
			Запросец.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запросец.Текст = "ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка,
			|	ФизическиеЛица.Отдел.Ссылка КАК Отдел
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &Продавец";
		КонецЕсли;

		Запросец = Запросец.Выполнить().Выгрузить();   //ЭТО СТАРЫЙ ЗАПРОС! НЕ РАБОЧИЙ!
		Для каждого Строчка из Запросец Цикл
			СтрокаТЧ = Начисления.Добавить();          //ВАЖНО! - многие имена не совпадают с действительными данными!
			СтрокаТЧ.Сотрудник = Выборка.Продавец;
			СтрокаТЧ.Отдел = Строчка.Отдел;
			//СтрокаТЧ.СуммаСмен = Выборка.Оклад;     //Зарплата в день умножить на количество дней
			СтрокаТЧ.СуммаСмен = Смены*ОкладВДень;
			СтрокаТЧ.Оклад = ОкладВДень;
			СтрокаТЧ.ОкладСтажера = ВыплатаСтажерам;
			СтрокаТЧ.ДопСмены = ОкладЗаДоп;
			СтрокаТЧ.ДопПремия = Премия; //Только за 15 дней.
			СтрокаТЧ.НДФЛ = Подоходный;
			СтрокаТЧ.ПремияСуммой = Выборка.Премия;    //Берётся из документа Премии
			СтрокаТЧ.Удержания = Вычеты;
			СтрокаТЧ.ПремияАкционныеТовары = Выборка.ПремияЗаАкционныйТовар;
			СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров = Выборка.УдержаниеПремииЗаАкционныйТовар;
			СтрокаТЧ.ПроцентГрупп = Выборка.ПремияСГруппПроцентов;      //Сумма %
			СтрокаТЧ.Минимальная = Миним;      //Минимальный оклад
			СтрокаТЧ.КолвоСмен = Смены;           //кол-во смен
			СтрокаТЧ.КолвоДопСмен = ДопСмены;
			СтрокаТЧ.СуммаДопСмен = Выборка.ДопСмена;
			СтрокаТЧ.СменыИПроценты = СтрокаТЧ.СуммаСмен+СтрокаТЧ.ПроцентГрупп;
			СтрокаТЧ.СуммаСДоплатой = СтрокаТЧ.СменыИПроценты+СуммаДоп;
			Выдача = (СтрокаТЧ.ОкладСтажера+СтрокаТЧ.СуммаСДоплатой+СтрокаТЧ.ПремияАкционныеТовары+
			СтрокаТЧ.ДопПремия+СтрокаТЧ.ПремияСуммой-СтрокаТЧ.Удержания-СтрокаТЧ.НДФЛ-
			СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров);              //Всего
			Выдача = Выдача/10;
			Выдача = (Окр(Выдача+0.49, 0));
			СтрокаТЧ.Итог = Выдача*10;                               //Всего
			//СтрокаТЧ.КВыдаче = СтрокаТЧ.Итог-СтрокаТЧ.СуммаСмен;     //К Выдаче старое
			КВыдаче = СтрокаТЧ.СуммаСДоплатой-СтрокаТЧ.СуммаСмен+СтрокаТЧ.ПремияСуммой+Премия-Подоходный-
			Вычеты+СтрокаТЧ.ПремияАкционныеТовары-СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров;
			КВыдаче = КВыдаче/10;
			КВыдаче = (Окр(КВыдаче+0.49, 0));
			СтрокаТЧ.КВыдаче=КВыдаче*10;
			Выдача = (Выдача*10)+СтрокаТЧ.СуммаДопСмен;
			СтрокаТЧ.ИтоговыйДоход = Выдача;                        //Итоговый Доход
	КонецЦикла;
КонецЦикла;
	//===============================================================================
КонецПроцедуры	

//Последний вариант ЛК Андрей
Процедура ВыполнитьРасчетТЧТест(Администратор) Экспорт
	Начисления.Очистить();
	
	// Запрос и заполнение данных временной таблицы соответствий элементов номенклатуры группам для %
	ТекстЗапросаВерхнегоУровня = "// Получение групп и элементов верхнего уровня
	|ВЫБРАТЬ
	|	СоставГрупп.Номенклатура,
	|	СоставГрупп.Группа
	|	
	|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	|ИЗ
	|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГрупп;
	|";
	
	ТекстЗапросаЭлементовСледующегоУровня = "// Получение групп и элементов следующего уровня (циклически)
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	ГруппыНоменклатуры.Группа
	|	
	|	ПОМЕСТИТЬ ВТ_ТекущиеЭлементы	
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГруппыНоменклатуры КАК ГруппыНоменклатуры
	|			ПО СпрНоменклатура.Родитель = ГруппыНоменклатуры.Номенклатура
	|ГДЕ
	|	СпрНоменклатура.Родитель В ИЕРАРХИИ(ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	|	И НЕ СпрНоменклатура.Ссылка	В (ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	|
	|;
	|
	|// Делаем выборку из ВТ_ТекущиеЭлементы и если она пуста - выход из цикла запросов
	|ВЫБРАТЬ ВТ_ТекущиеЭлементы.* ИЗ ВТ_ТекущиеЭлементы
	|";
	
	ТекстЗапросаОперацииВТ = "// Объединяем данные таблиц элементов первого и всех следующих уровней
	|ВЫБРАТЬ
	|	ВТ_ГруппыНоменклатуры.*
	|	
	|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры1
	|ИЗ
	|	ВТ_ГруппыНоменклатуры
	|
	|ОБЪЕДИНИТЬ ВЫБРАТЬ
	|	ВТ_ТекущиеЭлементы.*
	|ИЗ
	|	ВТ_ТекущиеЭлементы;
	|
	|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры;
	|УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы;
	|
	|ВЫБРАТЬ
	|	ВТ_ГруппыНоменклатуры1.*
	|	
	|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	|ИЗ
	|	ВТ_ГруппыНоменклатуры1;
	|
	|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры1;
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаВерхнегоУровня + Символы.ПС + ТекстЗапросаЭлементовСледующегоУровня;
	
	Пока НЕ Запрос.Выполнить().Пустой() Цикл
		Запрос.Текст = ТекстЗапросаОперацииВТ + ТекстЗапросаЭлементовСледующегоУровня;
	КонецЦикла;
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы";
	Запрос.Выполнить();
	
	// Получение данных заполнения ТЧ "Начисления"
	СписокОсновныхВР = Новый СписокЗначений;
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладВДень);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопВыход);
	СписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопПремия);
	
	Запрос.УстановитьПараметр("СписокОсновныхВР", СписокОсновныхВР);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.Текст = ПолучитьМакет("ТекстЗапросаАвтозаполненияТЧНачисления").ПолучитьТекст();
	
	РезЗапроса = Запрос.Выполнить();
	
	Если РезЗапроса.Пустой() Тогда Возврат; 
	КонецЕсли;
	
	Выборка = РезЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл			
		//=============================
		
		Если Строка(Администратор)<>"" Тогда
			Запросец = Новый Запрос;
			Запросец.УстановитьПараметр("Администратор", Администратор);
			Запросец.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запросец.Текст = "ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка,
			|	ФизическиеЛица.Отдел.Ссылка КАК Отдел
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &Продавец
			|	И ФизическиеЛица.Отдел.Ответственный.Ссылка = &Администратор";
		Иначе 
			Запросец = Новый Запрос;
			Запросец.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запросец.Текст = "ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка,
			|	ФизическиеЛица.Отдел.Ссылка КАК Отдел
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &Продавец";
		КонецЕсли;		
		
		Резуль = Запросец.Выполнить();
		Борка = Резуль.Выбрать();
		
		Если Борка.Следующий() Тогда
			
			Апрос = Новый Запрос; 
			Апрос.УстановитьПараметр("Сотрудник", Выборка.Продавец);
			Апрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
			Апрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
			
			Апрос.Текст="ВЫБРАТЬ
			            |	КадровоеПеремещение.ДатаПеревода КАК Дата
			            |ИЗ
			            |	Документ.КадровоеПеремещение КАК КадровоеПеремещение
			            |ГДЕ
			            |	КадровоеПеремещение.Сотрудник = &Сотрудник
			            |	И КадровоеПеремещение.ДатаПеревода МЕЖДУ &НачалоПериода И &КонецПериода
			            |	И КадровоеПеремещение.ПометкаУдаления = ЛОЖЬ
			            |
			            |УПОРЯДОЧИТЬ ПО
			            |	Дата";
			Результат = Апрос.Выполнить();
			Выбор = Результат.Выбрать();
			
			Если Выбор.Следующий() Тогда        //Если Истина, то много строк. 
				
				ТочкаПерехода=Выбор.Дата;
				
				Апрос = Новый Запрос; 
				Апрос.УстановитьПараметр("Сотрудник", Выборка.Продавец);
				Апрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
				Апрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
				
				Апрос.Текст="ВЫБРАТЬ
				|	КадровоеПеремещение.ОтделПеремещения КАК Откуда,
				|	КадровоеПеремещение.ОтделПеревода КАК Куда,
				|	КадровоеПеремещение.ДатаПеревода КАК Дата
				|ИЗ
				|	Документ.КадровоеПеремещение КАК КадровоеПеремещение
				|ГДЕ
				|	КадровоеПеремещение.Сотрудник = &Сотрудник
				|	И КадровоеПеремещение.ДатаПеревода МЕЖДУ &НачалоПериода И &КонецПериода
				|	И КадровоеПеремещение.ПометкаУдаления = ЛОЖЬ
				|
				|УПОРЯДОЧИТЬ ПО
				|	Дата";
				Рез = Апрос.Выполнить();
				Выб = Рез.Выбрать();
				ВтороеПеремещение=0;
				
				ВсегоОтдел = 0;
				ВсегоСмены = 0;
				ВсегоДопСмены = 0;				
				ВсегоПроцентГрупп = 0;
				ВсегоСменыИПроценты = 0;
				ВсегоСуммаСмен =0;
				ВсегоПремия = 0;
				ВсегоПремияАкционныеТовары = 0;
				ВсегоУдержаниеПремииЗаАкционныйТовар = 0;
				ВсегоДопСмена = 0;
				ВсегоВычеты= 0;
				
				Пока Выб.Следующий() Цикл
					
					ВтороеПеремещение=ВтороеПеремещение+1;
					
					Если ВтороеПеремещение=1 Тогда
						Начало=НачалоМесяца(ЭтотОбъект.Период);
						Конец=Выб.Дата;
					Иначе 
						Начало=Конец;
						Конец=Выб.Дата;
					КонецЕсли;
					Конец=Конец-1;
					Откуда=Выб.Откуда;
					Куда=Выб.Куда;
					Последняя=Ложь;
					Продавец=Выборка.Продавец;
					Запросы(Начало, Конец, Откуда, Куда, Продавец, Последняя);
				КонецЦикла;
				Откуда=Выб.Куда;
				Начало=Конец;
				Конец=КонецМесяца(ЭтотОбъект.Период);
				Последняя=Истина;
				Запросы(Начало, Конец, Откуда, Куда, Продавец, Последняя);
				
			Иначе    //////////////Ниже нормальный процесс 
				ОкладВДень=0;
				ОкладЗаДоп=0;
				Миним=0;
				Подоходный=0;
				Премия=0;
				
				Смены=0;
				ДопСмены=0;
				
			Запр = Новый Запрос;
				Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
				Запр.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
				Запр.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
			Запр.Текст = "ВЫБРАТЬ
			             |	ОтчетОРозничныхПродажахПродавцы.Продавец,
			             |	ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец,
			             |	ОтчетОРозничныхПродажахПродавцы.ЭтоДопСмена,
			             |	ОтчетОРозничныхПродажахПродавцы.Ссылка.Склад,
			             |	ОтчетОРозничныхПродажахПродавцы.Ссылка.Ссылка
			             |ИЗ
			             |	Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
			             |ГДЕ
			             |	ОтчетОРозничныхПродажахПродавцы.Продавец = &Продавец
			             |	И ОтчетОРозничныхПродажахПродавцы.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			             |	И ОтчетОРозничныхПродажахПродавцы.Ссылка.ПометкаУдаления = ЛОЖЬ";
			Запр = Запр.Выполнить().Выгрузить();
			Для каждого Строчка из Запр Цикл
				Если Строчка.ЭтоГлавныйпродавец=Истина Тогда
					Смены=Смены+1;
					Если Строчка.Склад<>Борка.Отдел Тогда
						Сообщить("В документе "+Строчка.Ссылка+" главным продавцом указан продавец "+Выборка.Продавец+", в данный момент времени приписанный к другому отделу"); 
					КонецЕсли;	
				КонецЕсли;		
				Если Строчка.ЭтоДопСмена=Истина Тогда
					ДопСмены=ДопСмены+1;
				КонецЕсли;
			КонецЦикла;
	
				
				Вычеты=0;
				Запр = Новый Запрос;
				Запр.УстановитьПараметр("Период", ЭтотОбъект.Период);
				Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
				Запр.Текст = "ВЫБРАТЬ
				|	ВычетыСотрудники.Сумма КАК Сумма,
				|	ВычетыСотрудники.ПериодВычета,
				|	ВычетыСотрудники.СтатьяЗатрат
				|ИЗ
				|	Документ.Вычеты.Сотрудники КАК ВычетыСотрудники
				|ГДЕ
				|	ВычетыСотрудники.ПериодВычета = &Период
				|	И ВычетыСотрудники.Сотрудник = &Продавец";
				
				Запр = Запр.Выполнить().Выгрузить();
				Для каждого Строчка из Запр Цикл
					Вычеты = Вычеты + Строчка.Сумма;
				КонецЦикла;	
				
				Запр = Новый Запрос;
				Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
				Запр.Текст = "ВЫБРАТЬ
				|	ПриемНаРаботуОсновныеНачисления.Сумма,
				|	ПриемНаРаботуОсновныеНачисления.ВидРасчета
				|ИЗ
				|	Документ.ПриемНаРаботу.ОсновныеНачисления КАК ПриемНаРаботуОсновныеНачисления
				|ГДЕ
				|	ПриемНаРаботуОсновныеНачисления.Ссылка.Сотрудник.Ссылка = &Продавец";
				Запр = Запр.Выполнить().Выгрузить();
				Для каждого Строчка из Запр Цикл
					
					Если Строка(Строчка.ВидРасчета)=Строка("Оклад в день") Тогда
						ОкладВДень=Строчка.Сумма;
					КонецЕсли;
					Если Строка(Строчка.ВидРасчета)=Строка("Доп. выход") Тогда
						ОкладЗаДоп=Строчка.Сумма;
					КонецЕсли;
					Если Строка(Строчка.ВидРасчета)=Строка("Минимальная") Тогда
						Миним=Строчка.Сумма;
					КонецЕсли;
					Если Строка(Строчка.ВидРасчета)=Строка("Подоходный налог") Тогда
						Подоходный=Строчка.Сумма;
					КонецЕсли;
					Если Строка(Строчка.ВидРасчета)=Строка("Премия") Тогда
						Премия=Строчка.Сумма;
					КонецЕсли;
					
				КонецЦикла;
				
			СледМесяц=ДобавитьМесяц(ЭтотОбъект.Период, 1);
			Запр = Новый Запрос;
			Запр.УстановитьПараметр("Продавец", Выборка.Продавец);
			Запр.УстановитьПараметр("Дата", КонецМесяца(СледМесяц));
			Запр.Текст = "ВЫБРАТЬ
			|	ИсторияСотрудников.Сотрудник,
			|	ИсторияСотрудников.Дата КАК Дата,
			|	ИсторияСотрудников.Событие,
			|	ИсторияСотрудников.ИзменённыйЭлемент
			|ИЗ
			|	РегистрСведений.ИсторияСотрудников КАК ИсторияСотрудников
			|ГДЕ
			|	ИсторияСотрудников.Дата > &Дата
			|	И ИсторияСотрудников.Сотрудник = &Продавец 			
			|	И ИсторияСотрудников.Событие ПОДОБНО ""%->%""
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ";
			Запр = Запр.Выполнить().Выгрузить();
			Для каждого Строчка из Запр Цикл
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Оклад в день") Тогда
					СтрокаОкладВДень=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладВДень, 1)<>"-" Цикл
						ОкладВДень=ОкладВДень+Лев(СтрокаОкладВДень, 1);
						СтрокаОкладВДень = Сред(СтрокаОкладВДень, 2);
					КонецЦикла;
					ОкладВДень=Число(ОкладВДень);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Доп. выход") Тогда
					СтрокаОкладЗаДоп=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладЗаДоп, 1)<>"-" Цикл
						ОкладЗаДоп=ОкладЗаДоп+Лев(СтрокаОкладЗаДоп, 1);
						СтрокаОкладЗаДоп = Сред(СтрокаОкладЗаДоп, 2);
					КонецЦикла;
					ОкладЗаДоп=Число(ОкладЗаДоп);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Минимальная") Тогда
					СтрокаМиним=Строчка.Событие;
					Миним="";
					Пока Лев(СтрокаМиним, 1)<>"-" Цикл
						Миним=Миним+Лев(СтрокаМиним, 1);
						СтрокаМиним = Сред(СтрокаМиним, 2);
					КонецЦикла;
					Миним=Число(Миним);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Подоходный налог") Тогда
					СтрокаПодоходный=Строчка.Событие;
					Подоходный="";
					Пока Лев(СтрокаПодоходный, 1)<>"-" Цикл
						Подоходный=Подоходный+Лев(СтрокаПодоходный, 1);
						СтрокаПодоходный = Сред(СтрокаПодоходный, 2);
					КонецЦикла;
					Подоходный=Число(Подоходный);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Премия") Тогда
					СтрокаПремия=Строчка.Событие;
					Премия="";
					Пока Лев(СтрокаПремия, 1)<>"-" Цикл
						Премия=Премия+Лев(СтрокаПремия, 1);
						СтрокаПремия = Сред(СтрокаПремия, 2);
					КонецЦикла;
					Премия=Число(Премия);
				КонецЕсли;
		КонецЦикла;	
				
			//КонецЦикла;
				
				//Для бывших стажеров
				ВыплатаСтажерам=0;
				Запр = Новый Запрос;
				Запр.УстановитьПараметр("Период", ЭтотОбъект.Период);
				Запр.УстановитьПараметр("Сотрудник", Выборка.Продавец);
				Запр.Текст = "ВЫБРАТЬ
				|	ВыплатыСтажерамСотрудники.Сотрудник,
				|	ВыплатыСтажерамСотрудники.Сумма,
				|	ВыплатыСтажерамСотрудники.ПериодНачисления
				|ИЗ
				|	Документ.ВыплатыСтажерам.Сотрудники КАК ВыплатыСтажерамСотрудники
				|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыплатыСтажерам КАК ВыплатыСтажерам
				|		ПО ВыплатыСтажерамСотрудники.Ссылка = ВыплатыСтажерам.Ссылка
				|ГДЕ
				|	ВыплатыСтажерамСотрудники.ПериодНачисления = &Период
				|	И ВыплатыСтажерамСотрудники.Сотрудник = &Сотрудник
				|	И ВыплатыСтажерам.ПометкаУдаления = ЛОЖЬ";
				Запр = Запр.Выполнить().Выгрузить();
				Для каждого Строчка из Запр Цикл
					ВыплатаСтажерам=Строчка.Сумма;
				КонецЦикла;
				
				Если Смены<14 Тогда
					Премия=0;
				КонецЕсли;
				//СуммаСтажировки=Выборка.ОкладСтажера;
				СуммаСмен=Смены+ДопСмены; 
				СуммаДопСмен=ОкладЗаДоп*ДопСмены;
				//Доплата за более чем 15 смен
				СуммаДоп=0;
				Если Строка(Выборка.ПремияСГруппПроцентов)<>"" Тогда
					ПремияСГруппПроцентов=Выборка.ПремияСГруппПроцентов;
				Иначе
					ПремияСГруппПроцентов=0;
				КонецЕсли;
				//Если Смены>14 Тогда
				СменыИПроценты=Смены*ОкладВДень+ПремияСГруппПроцентов;
				Если Смены=0 Тогда
					ЗаработокЗаДень=СменыИПроценты;	
				Иначе
					ЗаработокЗаДень=СменыИПроценты/Смены;
				КонецЕсли;
				ОфициальнаяЗПЗаДень=Миним/15;
				Разница=ОфициальнаяЗПЗаДень-ЗаработокЗаДень;
				Если Разница>0 Тогда
					СуммаДоп=Разница*Смены;
				КонецЕсли;
				
				
				СтрокаТЧ = Начисления.Добавить();          //ВАЖНО! - многие имена не совпадают с действительными данными!
				СтрокаТЧ.Сотрудник = Выборка.Продавец;
				СтрокаТЧ.Отдел = Борка.Отдел;
				//СтрокаТЧ.СуммаСмен = Выборка.Оклад;     //Зарплата в день умножить на количество дней
				СтрокаТЧ.СуммаСмен = Смены*ОкладВДень;
				СтрокаТЧ.Оклад = ОкладВДень;
				СтрокаТЧ.ОкладСтажера = ВыплатаСтажерам;
				СтрокаТЧ.ДопСмены = ОкладЗаДоп;
				СтрокаТЧ.ДопПремия = Премия; //Только за 15 дней.
				СтрокаТЧ.НДФЛ = Подоходный;
				СтрокаТЧ.ПремияСуммой = Выборка.Премия;    //Берётся из документа Премии
				СтрокаТЧ.Удержания = Вычеты;
				СтрокаТЧ.ПремияАкционныеТовары = Выборка.ПремияЗаАкционныйТовар;
				СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров = Выборка.УдержаниеПремииЗаАкционныйТовар;
				СтрокаТЧ.ПроцентГрупп = Выборка.ПремияСГруппПроцентов;      //Сумма %
				СтрокаТЧ.Минимальная = Миним;      //Минимальный оклад
				СтрокаТЧ.КолвоСмен = Смены;           //кол-во смен
				СтрокаТЧ.КолвоДопСмен = ДопСмены;
				СтрокаТЧ.СуммаДопСмен = СуммаДопСмен; // Выборка.ДопСмена;
				СтрокаТЧ.СменыИПроценты = СтрокаТЧ.СуммаСмен+СтрокаТЧ.ПроцентГрупп;
				СтрокаТЧ.СуммаСДоплатой = СтрокаТЧ.СменыИПроценты+СуммаДоп;
				Выдача = (СтрокаТЧ.ОкладСтажера+СтрокаТЧ.СуммаСДоплатой+СтрокаТЧ.ПремияАкционныеТовары+
				СтрокаТЧ.ДопПремия+СтрокаТЧ.ПремияСуммой-СтрокаТЧ.Удержания-СтрокаТЧ.НДФЛ-
				СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров);              //Всего
				Выдача = Выдача/10;
				Выдача = (Окр(Выдача+0.49, 0));
				СтрокаТЧ.Итог = Выдача*10;                               //Всего
				//СтрокаТЧ.КВыдаче = СтрокаТЧ.Итог-СтрокаТЧ.СуммаСмен;     //К Выдаче старое
				КВыдаче = СтрокаТЧ.СуммаСДоплатой-СтрокаТЧ.СуммаСмен+СтрокаТЧ.ПремияСуммой+Премия-Подоходный-
				Вычеты+СтрокаТЧ.ПремияАкционныеТовары-СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров;
				КВыдаче = КВыдаче/10;
				КВыдаче = (Окр(КВыдаче+0.49, 0));
				СтрокаТЧ.КВыдаче=КВыдаче*10;
				Выдача = (Выдача*10)+СтрокаТЧ.СуммаДопСмен;
				СтрокаТЧ.ИтоговыйДоход = Выдача;                        //Итоговый Доход
				//КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	
	
Процедура Печать() Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ(Печать)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.НачислениеЗарплаты.ПолучитьМакет("Печать");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ЭтотОбъект);
	//Администратор=ЭтотОбъект.Администратор;
	ТабДок.Вывести(Шапка);
	// Начисления
	Область = Макет.ПолучитьОбласть("НачисленияШапка");
	ТабДок.Вывести(Область);
	ОбластьНачисления = Макет.ПолучитьОбласть("Начисления");
	
	Если Строка(ЭтотОбъект.Администратор)<>"" Тогда
		Запросец = Новый Запрос;
		Запросец.УстановитьПараметр("Администратор", ЭтотОбъект.Администратор);
		Запросец.Текст = "ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Продавец,
		|	ФизическиеЛица.Отдел.Ссылка КАК Отдел
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.Отдел.Ответственный.Ссылка = &Администратор";	
		Запросец = Запросец.Выполнить().Выгрузить();
		
		Для Каждого ТекСтрокаНачисления Из Начисления Цикл
			Для каждого Строчка из Запросец Цикл
				Если Строка(ТекСтрокаНачисления.Сотрудник)=Строка(Строчка.Продавец) Тогда
					ОбластьНачисления.Параметры.Заполнить(ТекСтрокаНачисления);
					ТабДок.Вывести(ОбластьНачисления);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		Для Каждого ТекСтрокаНачисления Из Начисления Цикл
			ОбластьНачисления.Параметры.Заполнить(ТекСтрокаНачисления);
			ТабДок.Вывести(ОбластьНачисления);
		КонецЦикла;		
	КонецЕсли;
	
	// Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Подвал);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	//}}_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ
КонецПроцедуры

//=================================

Процедура ПечатьПоСотруднику() Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ(Печать по сотруднику)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.НачислениеЗарплаты.ПолучитьМакет("ПечатьПоСотруднику");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(Область);

	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	//}}_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ
КонецПроцедуры
//=================================



//ЛК Андрей Расчетный лист =============
Процедура Печь(Сотрудник, Склад, Смены) Экспорт	
	////****************************************************************************************************************
	//Ведомость.Очистить();
	//
	//Запросец = Новый Запрос;
	////Запросец.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
	//Запросец.УстановитьПараметр("Отдел", Склад);
	//Запросец.Текст = "ВЫБРАТЬ
	//                 |	ГруппыПроцентовПоМагазинам.Группа.Ссылка КАК Группа,
	//                 |	ГруппыПроцентовПоМагазинам.Процент КАК Процент
	//                 |ИЗ
	//                 |	РегистрСведений.ГруппыПроцентовПоМагазинам КАК ГруппыПроцентовПоМагазинам
	//                 |ГДЕ
	//                 |	ГруппыПроцентовПоМагазинам.Магазин.Ссылка = &Отдел
	//                 |
	//                 |УПОРЯДОЧИТЬ ПО
	//                 |	Группа";
	//
	//Запросец = Запросец.Выполнить().Выгрузить();
	//Цифра=0;
	//Для каждого Строчка из Запросец Цикл
	//	СтрокаТЧ = Ведомость.Добавить();  
	//	СтрокаТЧ.Процент =Строчка.Процент;
	//	СтрокаТЧ.Группа=Строчка.Группа;
	//КонецЦикла;		
	//Для каждого Строка из ЭтотОбъект.Ведомость Цикл
	//	МассивНоменклатуры=Новый Массив;
	//	
	//	Запросец = Новый Запрос;
	//	Запросец.УстановитьПараметр("Группа", Строка.Группа);
	//	Запросец.Текст = "ВЫБРАТЬ
	//	|	СоставГруппДляПроцентов.Группа.Ссылка КАК Группа,
	//	|	СоставГруппДляПроцентов.Номенклатура.Ссылка КАК Номенклатура
	//	|ИЗ
	//	|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГруппДляПроцентов
	//	|ГДЕ
	//	|	СоставГруппДляПроцентов.Группа.Ссылка = &Группа";
	//	
	//	Запросец = Запросец.Выполнить().Выгрузить();
	//	Для каждого Строчка из Запросец Цикл
	//		МассивНоменклатуры.Добавить(Строчка.Номенклатура);
	//	КонецЦикла;

	//	Запрос = Новый Запрос;
	//	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
	//	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
	//	Запрос.УстановитьПараметр("Продавец", Сотрудник);
	//	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	//		Запрос.Текст = "ВЫБРАТЬ
	//		               |	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
	//		               |	ОтчетОРозничныхПродажахТовары.Сумма КАК Сумма,
	//		               |	ОтчетОРозничныхПродажахПродавцы.Продавец
	//		               |ИЗ
	//		               |	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	//		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
	//		               |		ПО ОтчетОРозничныхПродажахТовары.Ссылка = ОтчетОРозничныхПродажахПродавцы.Ссылка
	//		               |ГДЕ
	//		               |	ОтчетОРозничныхПродажахТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	//		               |	И ОтчетОРозничныхПродажахПродавцы.Продавец.Ссылка = &Продавец
	//		               |			И ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец = ИСТИНА
	//		               |	И (ОтчетОРозничныхПродажахТовары.Номенклатура.Ссылка В (&МассивНоменклатуры)
	//		               |			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.Родитель.Ссылка В (&МассивНоменклатуры)
	//		               |			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.Родитель.Родитель.Ссылка В (&МассивНоменклатуры)
	//		               |			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.Родитель.Родитель.Родитель.Ссылка В (&МассивНоменклатуры)
	//		               |			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.Родитель.Родитель.Родитель.Родитель.Ссылка В (&МассивНоменклатуры)
	//		               |			ИЛИ ОтчетОРозничныхПродажахТовары.Номенклатура.Родитель.Родитель.Родитель.Родитель.Родитель.Ссылка В (&МассивНоменклатуры))";			
	//	
	//	Запрос = Запрос.Выполнить().Выгрузить();
	//	ИтоговаяСумма=0;
	//	Для каждого Строчка из Запрос Цикл
	//		Строка.Выручка=Строка.Выручка+Строчка.Сумма;
	//		Строка.Сумма=Строка.Выручка*Строка.Процент/100;
	//	КонецЦикла;
	//КонецЦикла;

	РасчётныйЛист(Склад, Смены)
КонецПроцедуры	

Процедура РасчётныйЛист(Склад, Смены) Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ(Расчётный лист)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.НачислениеЗарплаты.ПолучитьМакет("РасчётныйЛист");
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	Продавец=ЭтотОбъект.Продавец; 
	Область.Параметры.Продавец = Продавец;
	Область.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Область);
	СуммаВсего = 0;
	ИтоговаяСумма = 0;
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("Сотрудник", Продавец);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
	
	Запрос.Текст="ВЫБРАТЬ
	|	КадровоеПеремещение.ДатаПеревода КАК Дата
	|ИЗ
	|	Документ.КадровоеПеремещение КАК КадровоеПеремещение
	|ГДЕ
	|	КадровоеПеремещение.Сотрудник = &Сотрудник
	|	И КадровоеПеремещение.ДатаПеревода МЕЖДУ &НачалоПериода И &КонецПериода	
	|	И КадровоеПеремещение.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Результат = Запрос.Выполнить();
	Выбор = Результат.Выбрать();
	
	Если Выбор.Следующий() Тогда        //Если Истина, то много строк. 
		ВсегоСмены=0;
		ТочкаПерехода=Выбор.Дата;
		
		Запрос = Новый Запрос; 
		Запрос.УстановитьПараметр("Сотрудник", Продавец);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
		
		Запрос.Текст="ВЫБРАТЬ
		|	КадровоеПеремещение.ОтделПеремещения КАК Откуда,
		|	КадровоеПеремещение.ОтделПеревода КАК Куда,
		|	КадровоеПеремещение.ДатаПеревода КАК Дата
		|ИЗ
		|	Документ.КадровоеПеремещение КАК КадровоеПеремещение
		|ГДЕ
		|	КадровоеПеремещение.Сотрудник = &Сотрудник
		|	И КадровоеПеремещение.ДатаПеревода МЕЖДУ &НачалоПериода И &КонецПериода
		|	И КадровоеПеремещение.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		Рез = Запрос.Выполнить();
		Выб = Рез.Выбрать();
		ВтороеПеремещение=0;
		
		Пока Выб.Следующий() Цикл
			
			ВтороеПеремещение=ВтороеПеремещение+1;
			
			Если ВтороеПеремещение=1 Тогда
				Начало=НачалоМесяца(ЭтотОбъект.Период);
				Конец=Выб.Дата;
			Иначе 
				Начало=Конец;
				Конец=Выб.Дата;
			КонецЕсли;
			
			Откуда=Выб.Откуда;
			Куда=Выб.Куда;
			ГлобСмены=0;
			ПосчитатьПроцентыдляРасчетногоЛистка(Откуда, Начало, Конец, Продавец);
			Смены=ГлобСмены;	
			ВсегоСмены=ВсегоСмены+Смены;
			
			// Шапка
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Отдел = Откуда;
			Шапка.Параметры.КоличествоСмен = Смены;
			Шапка.Параметры.Заполнить(ЭтотОбъект);
			ТабДок.Вывести(Шапка);
			// Ведомость
			Область = Макет.ПолучитьОбласть("ВедомостьШапка");
			ТабДок.Вывести(Область);
			ОбластьВедомость = Макет.ПолучитьОбласть("Ведомость");
			Для Каждого ТекСтрокаВедомость Из Ведомость Цикл
				ОбластьВедомость.Параметры.Заполнить(ТекСтрокаВедомость);
				ТабДок.Вывести(ОбластьВедомость);
			КонецЦикла;
			СуммаВсего = СуммаВсего + ИтоговаяСумма;
			//Промежуточный итог
			Итог = Макет.ПолучитьОбласть("Итог");
			Итог.Параметры.СуммаВсего = ИтоговаяСумма;
			Итог.Параметры.Заполнить(ЭтотОбъект);
			ТабДок.Вывести(Итог);
			
		КонецЦикла;
		Откуда=Выб.Куда;
		Начало=Конец;
		Конец=КонецМесяца(ЭтотОбъект.Период);
		ГлобСмены=0;
		ПосчитатьПроцентыдляРасчетногоЛистка(Откуда, Начало, Конец, Продавец);
		Смены=ГлобСмены;	
		ВсегоСмены=ВсегоСмены+ГлобСмены;
		
		// Шапка
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Отдел = Куда;
		Шапка.Параметры.КоличествоСмен = Смены;
		Шапка.Параметры.Заполнить(ЭтотОбъект);
		ТабДок.Вывести(Шапка);
		// Ведомость
		Область = Макет.ПолучитьОбласть("ВедомостьШапка");
		ТабДок.Вывести(Область);
		ОбластьВедомость = Макет.ПолучитьОбласть("Ведомость");
		Для Каждого ТекСтрокаВедомость Из Ведомость Цикл
			ОбластьВедомость.Параметры.Заполнить(ТекСтрокаВедомость);
			ТабДок.Вывести(ОбластьВедомость);
		КонецЦикла;
		Смены=ВсегоСмены;
		СуммаВсего = СуммаВсего + ИтоговаяСумма;	
		//Промежуточный итог
		Итог = Макет.ПолучитьОбласть("Итог");
		Итог.Параметры.СуммаВсего = ИтоговаяСумма;
		Итог.Параметры.Заполнить(ЭтотОбъект);
		ТабДок.Вывести(Итог);
		
	Иначе    //////////////Ниже нормальный процесс 
		
		Откуда=Склад;
		Начало=НачалоМесяца(ЭтотОбъект.Период);
		Конец=КонецМесяца(ЭтотОбъект.Период);
		ГлобСмены=0;
		ПосчитатьПроцентыдляРасчетногоЛистка(Откуда, Начало, Конец, Продавец);
		ВсегоСмены=ГлобСмены;
		// Шапка
		Шапка = Макет.ПолучитьОбласть("Шапка");
		Шапка.Параметры.Отдел = Склад;
		Шапка.Параметры.КоличествоСмен = ВсегоСмены;
		Шапка.Параметры.Заполнить(ЭтотОбъект);
		ТабДок.Вывести(Шапка);
		// Ведомость
		Область = Макет.ПолучитьОбласть("ВедомостьШапка");
		ТабДок.Вывести(Область);
		ОбластьВедомость = Макет.ПолучитьОбласть("Ведомость");
		Для Каждого ТекСтрокаВедомость Из Ведомость Цикл
			ОбластьВедомость.Параметры.Заполнить(ТекСтрокаВедомость);
			ТабДок.Вывести(ОбластьВедомость);
		КонецЦикла;
		
		Смены=ВсегоСмены;
		//Промежуточный итог
		Итог = Макет.ПолучитьОбласть("Итог");
		СуммаВсего=0;
		Для Каждого ТЧВедомость Из Ведомость Цикл
			СуммаВсего=ТЧВедомость.Сумма+СуммаВсего;
		КонецЦикла;
		Итог.Параметры.СуммаВсего = СуммаВсего;
		Итог.Параметры.Заполнить(ЭтотОбъект);
		ТабДок.Вывести(Итог);
	КонецЕсли;	
	//Вычеты
	
	// НДФЛ и Премия за 14 смен
	Подоходный=0;
	ПремияЗа14=0;
	ОкладВДень=0;
	Миним=0;
	
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботуОсновныеНачисления.Сумма,
	|	ПриемНаРаботуОсновныеНачисления.ВидРасчета
	|ИЗ
	|	Документ.ПриемНаРаботу.ОсновныеНачисления КАК ПриемНаРаботуОсновныеНачисления
	|ГДЕ
	|	ПриемНаРаботуОсновныеНачисления.Ссылка.Сотрудник.Ссылка = &Продавец";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		Если Строка(Строчка.ВидРасчета)=Строка("Подоходный налог") Тогда
			Подоходный=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Премия") И Смены>13 Тогда
			ПремияЗа14=Строчка.Сумма;	
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Оклад в день") Тогда
			ОкладВДень=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Минимальная") Тогда
			Миним=Строчка.Сумма;
		КонецЕсли;
	КонецЦикла;
			СледМесяц=ДобавитьМесяц(ЭтотОбъект.Период, 1);
			Запр = Новый Запрос;
			Запр.УстановитьПараметр("Продавец", Продавец);
			Запр.УстановитьПараметр("Дата", КонецМесяца(СледМесяц));
			Запр.Текст = "ВЫБРАТЬ
			|	ИсторияСотрудников.Сотрудник,
			|	ИсторияСотрудников.Дата КАК Дата,
			|	ИсторияСотрудников.Событие,
			|	ИсторияСотрудников.ИзменённыйЭлемент
			|ИЗ
			|	РегистрСведений.ИсторияСотрудников КАК ИсторияСотрудников
			|ГДЕ
			|	ИсторияСотрудников.Дата > &Дата
			|	И ИсторияСотрудников.Сотрудник = &Продавец 			
			|	И ИсторияСотрудников.Событие ПОДОБНО ""%->%""
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата УБЫВ";
			Запр = Запр.Выполнить().Выгрузить();
			Для каждого Строчка из Запр Цикл
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Оклад в день") Тогда
					СтрокаОкладВДень=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладВДень, 1)<>"-" Цикл
						ОкладВДень=ОкладВДень+Лев(СтрокаОкладВДень, 1);
						СтрокаОкладВДень = Сред(СтрокаОкладВДень, 2);
					КонецЦикла;
					ОкладВДень=Число(ОкладВДень);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Доп. выход") Тогда
					СтрокаОкладЗаДоп=Строчка.Событие;
					ОкладВДень="";
					Пока Лев(СтрокаОкладЗаДоп, 1)<>"-" Цикл
						ОкладЗаДоп=ОкладЗаДоп+Лев(СтрокаОкладЗаДоп, 1);
						СтрокаОкладЗаДоп = Сред(СтрокаОкладЗаДоп, 2);
					КонецЦикла;
					ОкладЗаДоп=Число(ОкладЗаДоп);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Минимальная") Тогда
					СтрокаМиним=Строчка.Событие;
					Миним="";
					Пока Лев(СтрокаМиним, 1)<>"-" Цикл
						Миним=Миним+Лев(СтрокаМиним, 1);
						СтрокаМиним = Сред(СтрокаМиним, 2);
					КонецЦикла;
					Миним=Число(Миним);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Подоходный налог") Тогда
					СтрокаПодоходный=Строчка.Событие;
					Подоходный="";
					Пока Лев(СтрокаПодоходный, 1)<>"-" Цикл
						Подоходный=Подоходный+Лев(СтрокаПодоходный, 1);
						СтрокаПодоходный = Сред(СтрокаПодоходный, 2);
					КонецЦикла;
					Подоходный=Число(Подоходный);
				КонецЕсли;
				
				Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Премия") Тогда
					СтрокаПремия=Строчка.Событие;
					Премия="";
					Пока Лев(СтрокаПремия, 1)<>"-" Цикл
						Премия=Премия+Лев(СтрокаПремия, 1);
						СтрокаПремия = Сред(СтрокаПремия, 2);
					КонецЦикла;
					Премия=Число(Премия);
				КонецЕсли;
		КонецЦикла;	
	СуммаДоп=0;
	СменыИПроценты=Смены*ОкладВДень+СуммаВсего;
	Если Смены=0 Тогда
		ЗаработокЗаДень=СменыИПроценты;	
	Иначе
		ЗаработокЗаДень=СменыИПроценты/Смены;
	КонецЕсли;
	ОфициальнаяЗПЗаДень=Миним/15;
	Разница=ОфициальнаяЗПЗаДень-ЗаработокЗаДень;
	Если Разница>0 Тогда
		СуммаДоп=Разница*Смены;
	КонецЕсли;
	СуммаДоп=Окр(СуммаДоп, 2);
		
	ИтогСДоп = Макет.ПолучитьОбласть("ИтогСДоплатой");
	СуммаВсего=СуммаДоп+СуммаВсего;
	ИтогСДоп.Параметры.СуммаВсегоСДоплатой = СуммаВсего;
	ИтогСДоп.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(ИтогСДоп);
	
	// Снова вычеты
	ВычетыШапка = Макет.ПолучитьОбласть("ВычетыШапка");
	ТабДок.Вывести(ВычетыШапка);
	Если Подоходный<>0 Тогда 
		НДФЛ = Макет.ПолучитьОбласть("НДФЛ");
		НДФЛ.Параметры.НДФЛ = Подоходный;
		НДФЛ.Параметры.Заполнить(ЭтотОбъект);
		ТабДок.Вывести(НДФЛ);
	КонецЕсли;
	Вычеты = Макет.ПолучитьОбласть("Вычеты");
	Запросец = Новый Запрос;
	Запросец.УстановитьПараметр("Период", ЭтотОбъект.Период);
	Запросец.УстановитьПараметр("Продавец", Продавец);
	Запросец.Текст = "ВЫБРАТЬ
	|	ВычетыСотрудники.Сумма КАК Сумма,
	|	ВычетыСотрудники.ПериодВычета,
	|	ВычетыСотрудники.СтатьяЗатрат,
	|	Вычеты.Комментарий
	|ИЗ
	|	Документ.Вычеты.Сотрудники КАК ВычетыСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Вычеты КАК Вычеты
	|		ПО ВычетыСотрудники.Ссылка = Вычеты.Ссылка
	|ГДЕ
	|	ВычетыСотрудники.ПериодВычета = &Период
	|	И ВычетыСотрудники.Сотрудник = &Продавец";
	
	Запросец = Запросец.Выполнить().Выгрузить();
	Вычеты.Параметры.Заполнить(ЭтотОбъект);
	Для каждого Строчка из Запросец Цикл
		Вычеты.Параметры.Вычеты = Строчка.Комментарий;
		Вычеты.Параметры.СуммаВычетов = Строчка.Сумма;
		СуммаВсего=СуммаВсего-Строчка.Сумма;
		ТабДок.Вывести(Вычеты);
	КонецЦикла;	
	
	
	//Премии
	ПремииШапка = Макет.ПолучитьОбласть("ПремииШапка");
	ТабДок.Вывести(ПремииШапка);
	Премии = Макет.ПолучитьОбласть("Премии");
	Запросец = Новый Запрос;
	Запросец.УстановитьПараметр("Период", ЭтотОбъект.Период);
	Запросец.УстановитьПараметр("Продавец", Продавец);
	Запросец.Текст = "ВЫБРАТЬ
	|	ПремииСотрудники.Сумма КАК Сумма,
	|	ПремииСотрудники.ПериодНачисления,
	|	ПремииСотрудники.СтатьяЗатрат,
	|	Премии.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.Премии.Сотрудники КАК ПремииСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Премии КАК Премии
	|		ПО ПремииСотрудники.Ссылка = Премии.Ссылка
	|ГДЕ
	|	ПремииСотрудники.ПериодНачисления = &Период
	|	И ПремииСотрудники.Сотрудник = &Продавец";
	
	Запросец = Запросец.Выполнить().Выгрузить();
	Премии.Параметры.Заполнить(ЭтотОбъект);
	Для каждого Строчка из Запросец Цикл
		Премии.Параметры.Премии = Строчка.Комментарий;
		Премии.Параметры.СуммаПремий = Строчка.Сумма;
		СуммаВсего=СуммаВсего+Строчка.Сумма;
		ТабДок.Вывести(Премии);
	КонецЦикла;	
	
	Если ПремияЗа14<>0 Тогда
		Премии.Параметры.Премии = "Премия за 14 смен";
		Премии.Параметры.СуммаПремий = ПремияЗа14;
		СуммаВсего=СуммаВсего+ПремияЗа14;
		ТабДок.Вывести(Премии);
	КонецЕсли;
	
	//Дополнительные выплаты
	
	МассивНоменклатуры = Новый Массив;
	ТаблицаДопНом=Новый ТаблицаЗначений;
	ТаблицаДопНом.Колонки.Добавить("Номенклатура");
	ТаблицаДопНом.Колонки.Добавить("Цена");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополонительнаяОплатаВРЛ.Номенклатура,
		|	ДополонительнаяОплатаВРЛ.Цена
		|ИЗ
		|	РегистрСведений.ДополонительнаяОплатаВРЛ КАК ДополонительнаяОплатаВРЛ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
СтрокаТЧ = ТаблицаДопНом.Добавить();  
			СтрокаТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			СтрокаТЧ.Цена = ВыборкаДетальныеЗаписи.Цена;		
		МассивНоменклатуры.Добавить(ВыборкаДетальныеЗаписи.Номенклатура);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", Начало);
	Запрос.УстановитьПараметр("КонецПериода", Конец);
	Запрос.УстановитьПараметр("Продавец", Продавец);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
	               |	ОтчетОРозничныхПродажахПродавцы.Продавец,
	               |	ОтчетОРозничныхПродажахТовары.Количество
	               |ИЗ
	               |	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
	               |		ПО ОтчетОРозничныхПродажахТовары.Ссылка = ОтчетОРозничныхПродажахПродавцы.Ссылка
	               |ГДЕ
	               |	ОтчетОРозничныхПродажахТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И ОтчетОРозничныхПродажахТовары.Номенклатура.Ссылка В ИЕРАРХИИ(&МассивНоменклатуры)
	               |	И ОтчетОРозничныхПродажахТовары.Продавец = &Продавец";			
	
	Запрос = Запрос.Выполнить().Выгрузить();
	Количество=0;
	
	ТаблицаДопРасходов=Новый ТаблицаЗначений;
	ТаблицаДопРасходов.Колонки.Добавить("ДопВыплатыТовар");
	ТаблицаДопРасходов.Колонки.Добавить("ДопВыплатыСумма");
	ОбщееКоличество=0;
	Для каждого Стр из ТаблицаДопНом Цикл
		Количество=0;
		Для каждого Строчка из Запрос Цикл  
			Если Строчка.Номенклатура.ПринадлежитЭлементу(Стр.Номенклатура) Тогда
				Количество=Количество+Строчка.Количество*Стр.Цена;
				ОбщееКоличество=ОбщееКоличество+Строчка.Количество;
			КонецЕсли;
		КонецЦикла;
		Если Количество>0 Тогда 
			СтрокаТЧ = ТаблицаДопРасходов.Добавить();  
			СтрокаТЧ.ДопВыплатыТовар = Стр.Номенклатура;
			СтрокаТЧ.ДопВыплатыСумма=Количество;
		КонецЕсли;
	КонецЦикла;
	Если ОбщееКоличество>0 Тогда
	Область = Макет.ПолучитьОбласть("ШапкаДопВыплаты");
	ТабДок.Вывести(Область);
	ОбластьДопВыплаты = Макет.ПолучитьОбласть("ДопВыплаты");
	Для Каждого ТекСтрокаВедомость Из ТаблицаДопРасходов Цикл
		ОбластьДопВыплаты.Параметры.Заполнить(ТекСтрокаВедомость);
		ТабДок.Вывести(ОбластьДопВыплаты);
	КонецЦикла;
	КонецЕсли;
	//
	
	СуммаВсего=СуммаВсего-Подоходный;
	СуммаВсего=СуммаВсего/10;
	СуммаВсего=(Окр(СуммаВсего+0.49, 0));
	СуммаВсего=СуммаВсего*10;
	// Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Всего = СуммаВсего;
	//Подвал.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Подвал);
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	
	//ТабДок.Записать("F:\Легкий Код\Андрей 24.01.2017\Тест.xls", ТипФайлаТабличногоДокумента.XLS);  
	//}}_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ
КонецПроцедуры

Функция ПосчитатьПроценты(Откуда, Начало, Конец, Продавец) 
	
	Ведом = Новый ТаблицаЗначений;    
	Ведом.Колонки.Добавить("Процент");
	Ведом.Колонки.Добавить("Группа");
	Запросец = Новый Запрос;
	Запросец.УстановитьПараметр("Отдел", Откуда);
	Запросец.Текст = "ВЫБРАТЬ
	|	ГруппыПроцентовПоМагазинам.Группа.Ссылка КАК Группа,
	|	ГруппыПроцентовПоМагазинам.Процент КАК Процент
	|ИЗ
	|	РегистрСведений.ГруппыПроцентовПоМагазинам КАК ГруппыПроцентовПоМагазинам
	|ГДЕ
	|	ГруппыПроцентовПоМагазинам.Магазин.Ссылка = &Отдел
	|
	|УПОРЯДОЧИТЬ ПО
	|	Группа";
	
	Запросец = Запросец.Выполнить().Выгрузить();
	Цифра=0;
	Для каждого Строчка из Запросец Цикл
		СтрокаТЧ = Ведом.Добавить();  
		СтрокаТЧ.Процент =Строчка.Процент;
		СтрокаТЧ.Группа=Строчка.Группа;
	КонецЦикла;
	ИтоговаяСумма=0;
	Для каждого Строка из Ведом Цикл
		Выручка=0;
		Сумма=0;
		МассивНоменклатуры=Новый Массив;
		
		Запросец = Новый Запрос;
		Запросец.УстановитьПараметр("Группа", Строка.Группа);
		Запросец.Текст = "ВЫБРАТЬ
		|	СоставГруппДляПроцентов.Группа.Ссылка КАК Группа,
		|	СоставГруппДляПроцентов.Номенклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГруппДляПроцентов
		|ГДЕ
		|	СоставГруппДляПроцентов.Группа.Ссылка = &Группа";
		
		Запросец = Запросец.Выполнить().Выгрузить();
		Для каждого Строчка из Запросец Цикл
			МассивНоменклатуры.Добавить(Строчка.Номенклатура);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачалоПериода", Начало);
		Запрос.УстановитьПараметр("КонецПериода", Конец);
		Запрос.УстановитьПараметр("Продавец", Продавец);
		Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
		               |	ОтчетОРозничныхПродажахТовары.Сумма КАК Сумма,
		               |	ОтчетОРозничныхПродажахПродавцы.Продавец
		               |ИЗ
		               |	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
		               |		ПО ОтчетОРозничныхПродажахТовары.Ссылка = ОтчетОРозничныхПродажахПродавцы.Ссылка
		               |ГДЕ
		               |	ОтчетОРозничныхПродажахТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ОтчетОРозничныхПродажахПродавцы.Продавец.Ссылка = &Продавец
		               |	И ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец = ИСТИНА
		               |	И ОтчетОРозничныхПродажахТовары.Номенклатура.Ссылка В ИЕРАРХИИ (&МассивНоменклатуры)";			
		
		Запрос = Запрос.Выполнить().Выгрузить();
		
		Для каждого Строчка из Запрос Цикл
			Выручка=Выручка+Строчка.Сумма;
			Сумма=Выручка*Строка.Процент/100;
    	КонецЦикла;
		ИтоговаяСумма=ИтоговаяСумма+Сумма;
	КонецЦикла;
	Возврат ИтоговаяСумма;
КонецФункции

Процедура ПосчитатьПроцентыдляРасчетногоЛистка(Откуда, Начало, Конец, Продавец) 
	
	Ведомость.Очистить();    
	Запросец = Новый Запрос;
	Запросец.УстановитьПараметр("Отдел", Откуда);
	Запросец.Текст = "ВЫБРАТЬ
	|	ГруппыПроцентовПоМагазинам.Группа.Ссылка КАК Группа,
	|	ГруппыПроцентовПоМагазинам.Процент КАК Процент
	|ИЗ
	|	РегистрСведений.ГруппыПроцентовПоМагазинам КАК ГруппыПроцентовПоМагазинам
	|ГДЕ
	|	ГруппыПроцентовПоМагазинам.Магазин.Ссылка = &Отдел
	|
	|УПОРЯДОЧИТЬ ПО
	|	Группа";
	
	Запросец = Запросец.Выполнить().Выгрузить();
	Цифра=0;
	Для каждого Строчка из Запросец Цикл
		СтрокаТЧ = Ведомость.Добавить();  
		СтрокаТЧ.Процент =Строчка.Процент;
		СтрокаТЧ.Группа=Строчка.Группа;
	КонецЦикла;
	
	ИтоговаяСумма=0;
	МассивВсейНоменклатуры=Новый Массив;
	Для каждого Строка из Ведомость Цикл
		
		МассивНоменклатуры=Новый Массив;
		
		Запросец = Новый Запрос;
		Запросец.УстановитьПараметр("Группа", Строка.Группа);
		Запросец.Текст = "ВЫБРАТЬ
		|	СоставГруппДляПроцентов.Группа.Ссылка КАК Группа,
		|	СоставГруппДляПроцентов.Номенклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГруппДляПроцентов
		|ГДЕ
		|	СоставГруппДляПроцентов.Группа.Ссылка = &Группа";
		
		Запросец = Запросец.Выполнить().Выгрузить();
		Для каждого Строчка из Запросец Цикл
			МассивНоменклатуры.Добавить(Строчка.Номенклатура);
			МассивВсейНоменклатуры.Добавить(Строчка.Номенклатура);
		КонецЦикла;
	
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачалоПериода", Начало);
			Запрос.УстановитьПараметр("КонецПериода", Конец);
			Запрос.УстановитьПараметр("Продавец", Продавец);
			Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОтчетОРозничныхПродажахТовары.Сумма КАК Сумма
			               |ИЗ
			               |	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
			               |		ПО ОтчетОРозничныхПродажахТовары.Ссылка = ОтчетОРозничныхПродажахПродавцы.Ссылка
			               |ГДЕ
			               |	ОтчетОРозничныхПродажахТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			               |	И ОтчетОРозничныхПродажахПродавцы.Продавец.Ссылка = &Продавец
			               |	И ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец = ИСТИНА
			               |	И ОтчетОРозничныхПродажахТовары.Номенклатура.Ссылка В ИЕРАРХИИ (&МассивНоменклатуры)";			
			Запрос = Запрос.Выполнить().Выгрузить();
			
			Для каждого Строчка из Запрос Цикл
				Строка.Выручка=Строка.Выручка+Строчка.Сумма;
				Строка.Сумма=Строка.Выручка*Строка.Процент/100;
			КонецЦикла;
			
			ИтоговаяСумма=ИтоговаяСумма+Строка.Сумма;
		КонецЦикла;
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачалоПериода", Начало);
		Запрос.УстановитьПараметр("КонецПериода", Конец);
		Запрос.УстановитьПараметр("Продавец", Продавец);
		Запрос.УстановитьПараметр("МассивНоменклатуры", МассивВсейНоменклатуры);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОтчетОРозничныхПродажахТовары.Номенклатура КАК Номенклатура,
		               |	ОтчетОРозничныхПродажахТовары.Сумма КАК Сумма,
		               |	ОтчетОРозничныхПродажахПродавцы.Продавец
		               |ИЗ
		               |	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
		               |		ПО ОтчетОРозничныхПродажахТовары.Ссылка = ОтчетОРозничныхПродажахПродавцы.Ссылка
		               |ГДЕ
		               |	ОтчетОРозничныхПродажахТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ОтчетОРозничныхПродажахПродавцы.Продавец.Ссылка = &Продавец
		               |	И ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец = ИСТИНА
		               |	И НЕ ОтчетОРозничныхПродажахТовары.Номенклатура.Ссылка В ИЕРАРХИИ (&МассивНоменклатуры)";			
		
		Запрос = Запрос.Выполнить().Выгрузить();
		СуммаБезМассива=0;
		Для каждого Строчка из Запрос Цикл  
			СуммаБезМассива=Строчка.Сумма+СуммаБезМассива;
		КонецЦикла;
		Если СуммаБезМассива>0 Тогда 
			СтрокаТЧ = Ведомость.Добавить();  
			СтрокаТЧ.Процент = 0;
			СтрокаТЧ.Группа="Без группы";
			СтрокаТЧ.Выручка=СуммаБезМассива;
		КонецЕсли;
	
	
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.УстановитьПараметр("НачалоПериода", Начало);
	Запр.УстановитьПараметр("КонецПериода", Конец);
	Запр.Текст = "ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПродавцы.Продавец,
	|	ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец,
	|	ОтчетОРозничныхПродажахПродавцы.ЭтоДопСмена
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО ОтчетОРозничныхПродажахПродавцы.Ссылка = ОтчетОРозничныхПродажах.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ОтчетОРозничныхПродажахПродавцы.Продавец = &Продавец
	|	И ОтчетОРозничныхПродажах.ПометкаУдаления = ЛОЖЬ";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		Если Строчка.ЭтоГлавныйпродавец=Истина Тогда
			ГлобСмены=ГлобСмены+1;
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры


Процедура Запросы(Начало, Конец, Откуда, Куда, Продавец, Последняя) Экспорт
	
	//Раскоментить, если будут нужны акционные товары. Для иных задач этот запрос не нужен, но тратит много времени.
	
	// Запрос и заполнение данных временной таблицы соответствий элементов номенклатуры группам для %
	//КПТекстЗапросаВерхнегоУровня = "// Получение групп и элементов верхнего уровня
	//|ВЫБРАТЬ
	//|	СоставГрупп.Номенклатура,
	//|	СоставГрупп.Группа
	//|	
	//|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	//|ИЗ
	//|	РегистрСведений.СоставГруппДляПроцентов КАК СоставГрупп;
	//|";
	//
	//КПТекстЗапросаЭлементовСледующегоУровня = "// Получение групп и элементов следующего уровня (циклически)
	//|ВЫБРАТЬ
	//|	СпрНоменклатура.Ссылка,
	//|	ГруппыНоменклатуры.Группа
	//|	
	//|	ПОМЕСТИТЬ ВТ_ТекущиеЭлементы	
	//|ИЗ
	//|	Справочник.Номенклатура КАК СпрНоменклатура
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ГруппыНоменклатуры КАК ГруппыНоменклатуры
	//|			ПО СпрНоменклатура.Родитель = ГруппыНоменклатуры.Номенклатура
	//|ГДЕ
	//|	СпрНоменклатура.Родитель В ИЕРАРХИИ(ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	//|	И НЕ СпрНоменклатура.Ссылка	В (ВЫБРАТЬ ВТ_ГруппыНоменклатуры.Номенклатура ИЗ ВТ_ГруппыНоменклатуры)
	//|
	//|;
	//|
	//|// Делаем выборку из ВТ_ТекущиеЭлементы и если она пуста - выход из цикла запросов
	//|ВЫБРАТЬ ВТ_ТекущиеЭлементы.* ИЗ ВТ_ТекущиеЭлементы
	//|";
	//
	//КПТекстЗапросаОперацииВТ = "// Объединяем данные таблиц элементов первого и всех следующих уровней
	//|ВЫБРАТЬ
	//|	ВТ_ГруппыНоменклатуры.*
	//|	
	//|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры1
	//|ИЗ
	//|	ВТ_ГруппыНоменклатуры
	//|
	//|ОБЪЕДИНИТЬ ВЫБРАТЬ
	//|	ВТ_ТекущиеЭлементы.*
	//|ИЗ
	//|	ВТ_ТекущиеЭлементы;
	//|
	//|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры;
	//|УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы;
	//|
	//|ВЫБРАТЬ
	//|	ВТ_ГруппыНоменклатуры1.*
	//|	
	//|	ПОМЕСТИТЬ ВТ_ГруппыНоменклатуры
	//|ИЗ
	//|	ВТ_ГруппыНоменклатуры1;
	//|
	//|УНИЧТОЖИТЬ ВТ_ГруппыНоменклатуры1;
	//|";
	//
	//КПЗапрос = Новый Запрос;
	//КПЗапрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//КПЗапрос.Текст = КПТекстЗапросаВерхнегоУровня + Символы.ПС + КПТекстЗапросаЭлементовСледующегоУровня;
	//
	//Пока НЕ КПЗапрос.Выполнить().Пустой() Цикл
	//	КПЗапрос.Текст = КПТекстЗапросаОперацииВТ + КПТекстЗапросаЭлементовСледующегоУровня;
	//КонецЦикла;
	//
	//КПЗапрос.Текст = "УНИЧТОЖИТЬ ВТ_ТекущиеЭлементы";
	//КПЗапрос.Выполнить();
	//
	//// Получение данных заполнения ТЧ "Начисления"
	//КПСписокОсновныхВР = Новый СписокЗначений;
	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера);
	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладВДень);
	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопВыход);
	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопПремия);
	//
	//КПЗапрос.УстановитьПараметр("СписокОсновныхВР", КПСписокОсновныхВР);
	//КПЗапрос.УстановитьПараметр("Организация", Организация);
	//КПЗапрос.УстановитьПараметр("ДатаНачала", Начало);
	//КПЗапрос.УстановитьПараметр("ДатаОкончания", Конец);
	//КПЗапрос.Текст = ПолучитьМакет("ТекстЗапросаАвтозаполненияТЧНачисления").ПолучитьТекст();
	//
	//КПРезЗапроса = КПЗапрос.Выполнить();
	
	////////////////////////////
	//    КПЗапрос = Новый Запрос;	
	//	КПЗапрос.Текст = "ВЫБРАТЬ
	//	                 |	ОтчетОРозничныхПродажахПродавцы.Продавец
	//	                 |ИЗ
	//	                 |	Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
	//	                 |ГДЕ
	//	                 |	ОтчетОРозничныхПродажахПродавцы.Ссылка.Организация = &Организация
	//	                 |	И ОтчетОРозничныхПродажахПродавцы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	//	                 |
	//	                 |СГРУППИРОВАТЬ ПО
	//	                 |	ОтчетОРозничныхПродажахПродавцы.Продавец";
	//		
	//	// Получение данных заполнения ТЧ "Начисления"
	//	//КПСписокОсновныхВР = Новый СписокЗначений;
	//	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладСменыСтажера);
	//	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ОкладВДень);
	//	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопВыход);
	//	//КПСписокОсновныхВР.Добавить(Справочники.ВидыРасчетовССотрудниками.ДопПремия);
	//	//
	//	//КПЗапрос.УстановитьПараметр("СписокОсновныхВР", КПСписокОсновныхВР);
	//	КПЗапрос.УстановитьПараметр("Организация", Организация);
	//	КПЗапрос.УстановитьПараметр("ДатаНачала", Начало);
	//	КПЗапрос.УстановитьПараметр("ДатаОкончания", Конец);
	//	//КПЗапрос.Текст = ПолучитьМакет("ТекстЗапросаАвтозаполненияТЧНачисления").ПолучитьТекст();
	//КПЗапрос.Выполнить();
	//	
	//	КПРезЗапроса = КПЗапрос.Выполнить();
	//	
	//	Если КПРезЗапроса.Пустой() Тогда Возврат; 
	//	КонецЕсли;
	//	
	//	КПВыборка = КПРезЗапроса.Выбрать();
	//	Пока КПВыборка.Следующий() Цикл
	//		
	//		Если КПВыборка.Продавец=Продавец Тогда
	
	//ПремияСГруппПроцентов=КПВыборка.ПремияСГруппПроцентов;
	//ОкладСтажера=КПВыборка.ОкладСтажера;
	//УдержаниеПремииЗаАкционныйТовар=КПВыборка.УдержаниеПремииЗаАкционныйТовар;
	ПремияСГруппПроцентов=0;
	ОкладСтажера=0;
	УдержаниеПремииЗаАкционныйТовар=0;
	
	ДопСмена=0;
	
	ОкладВДень=0;
	ОкладЗаДоп=0;
	Миним=0;
	Подоходный=0;
	Премия=0;
	Если Последняя=Ложь Тогда
		Отдел=Откуда;
	Иначе
		Отдел=Куда;
	КонецЕсли;
	Смены=0;
	ДопСмены=0;
	
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.УстановитьПараметр("НачалоПериода", Начало);
	Запр.УстановитьПараметр("КонецПериода", Конец);
	Запр.Текст = "ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахПродавцы.Продавец,
	|	ОтчетОРозничныхПродажахПродавцы.ЭтоГлавныйПродавец,
	|	ОтчетОРозничныхПродажахПродавцы.ЭтоДопСмена,
	|	ОтчетОРозничныхПродажахПродавцы.Ссылка.Склад,
	|	ОтчетОРозничныхПродажахПродавцы.Ссылка.Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Продавцы КАК ОтчетОРозничныхПродажахПродавцы
	|ГДЕ
	|	ОтчетОРозничныхПродажахПродавцы.Продавец = &Продавец
	|	И ОтчетОРозничныхПродажахПродавцы.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ОтчетОРозничныхПродажахПродавцы.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		Если Строчка.ЭтоГлавныйпродавец=Истина Тогда
			Смены=Смены+1;
			Если Строчка.Склад<>Отдел Тогда
				Сообщить("В документе "+Строчка.Ссылка+" главным продавцом указан продавец "+Продавец+", в тот момент времени приписанный к другому отделу"); 
			КонецЕсли;	
		КонецЕсли;		
		Если Строчка.ЭтоДопСмена=Истина Тогда
			ДопСмены=ДопСмены+1;
		КонецЕсли;
	КонецЦикла;
	
	Вычеты=0;
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("НачалоПериода", Начало);
	Запр.УстановитьПараметр("КонецПериода", Конец);
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.Текст = "ВЫБРАТЬ
	|	ВычетыСотрудники.Сумма КАК Сумма,
	|	ВычетыСотрудники.ПериодВычета,
	|	ВычетыСотрудники.СтатьяЗатрат
	|ИЗ
	|	Документ.Вычеты.Сотрудники КАК ВычетыСотрудники
	|ГДЕ
	|	ВычетыСотрудники.ПериодВычета МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВычетыСотрудники.Сотрудник = &Продавец";
	
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		Вычеты = Вычеты + Строчка.Сумма;
	КонецЦикла;	
	
	
	
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботуОсновныеНачисления.Сумма,
	|	ПриемНаРаботуОсновныеНачисления.ВидРасчета
	|ИЗ
	|	Документ.ПриемНаРаботу.ОсновныеНачисления КАК ПриемНаРаботуОсновныеНачисления
	|ГДЕ
	|	ПриемНаРаботуОсновныеНачисления.Ссылка.Сотрудник.Ссылка = &Продавец";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		
		Если Строка(Строчка.ВидРасчета)=Строка("Оклад в день") Тогда
			ОкладВДень=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Доп. выход") Тогда
			ОкладЗаДоп=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Минимальная") Тогда
			Миним=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Подоходный налог") Тогда
			Подоходный=Строчка.Сумма;
		КонецЕсли;
		Если Строка(Строчка.ВидРасчета)=Строка("Премия") Тогда
			Премия=Строчка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	СледМесяц=ДобавитьМесяц(ЭтотОбъект.Период, 1);
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("Продавец", Продавец);
	Запр.УстановитьПараметр("Дата", КонецМесяца(СледМесяц));
	Запр.Текст = "ВЫБРАТЬ
	|	ИсторияСотрудников.Сотрудник,
	|	ИсторияСотрудников.Дата КАК Дата,
	|	ИсторияСотрудников.Событие,
	|	ИсторияСотрудников.ИзменённыйЭлемент
	|ИЗ
	|	РегистрСведений.ИсторияСотрудников КАК ИсторияСотрудников
	|ГДЕ
	|	ИсторияСотрудников.Дата > &Дата
	|	И ИсторияСотрудников.Сотрудник = &Продавец 			
	|	И ИсторияСотрудников.Событие ПОДОБНО ""%->%""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		
		Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Оклад в день") Тогда
			СтрокаОкладВДень=Строчка.Событие;
			ОкладВДень="";
			Пока Лев(СтрокаОкладВДень, 1)<>"-" Цикл
				ОкладВДень=ОкладВДень+Лев(СтрокаОкладВДень, 1);
				СтрокаОкладВДень = Сред(СтрокаОкладВДень, 2);
			КонецЦикла;
			ОкладВДень=Число(ОкладВДень);
		КонецЕсли;
		
		Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Доп. выход") Тогда
			СтрокаОкладЗаДоп=Строчка.Событие;
			ОкладВДень="";
			Пока Лев(СтрокаОкладЗаДоп, 1)<>"-" Цикл
				ОкладЗаДоп=ОкладЗаДоп+Лев(СтрокаОкладЗаДоп, 1);
				СтрокаОкладЗаДоп = Сред(СтрокаОкладЗаДоп, 2);
			КонецЦикла;
			ОкладЗаДоп=Число(ОкладЗаДоп);
		КонецЕсли;
		
		Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Минимальная") Тогда
			СтрокаМиним=Строчка.Событие;
			Миним="";
			Пока Лев(СтрокаМиним, 1)<>"-" Цикл
				Миним=Миним+Лев(СтрокаМиним, 1);
				СтрокаМиним = Сред(СтрокаМиним, 2);
			КонецЦикла;
			Миним=Число(Миним);
		КонецЕсли;
		
		Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Подоходный налог") Тогда
			СтрокаПодоходный=Строчка.Событие;
			Подоходный="";
			Пока Лев(СтрокаПодоходный, 1)<>"-" Цикл
				Подоходный=Подоходный+Лев(СтрокаПодоходный, 1);
				СтрокаПодоходный = Сред(СтрокаПодоходный, 2);
			КонецЦикла;
			Подоходный=Число(Подоходный);
		КонецЕсли;
		
		Если Строка(Строчка.ИзменённыйЭлемент)=Строка("Премия") Тогда
			СтрокаПремия=Строчка.Событие;
			Премия="";
			Пока Лев(СтрокаПремия, 1)<>"-" Цикл
				Премия=Премия+Лев(СтрокаПремия, 1);
				СтрокаПремия = Сред(СтрокаПремия, 2);
			КонецЦикла;
			Премия=Число(Премия);
		КонецЕсли;
	КонецЦикла;			
	
	ВыплатаСтажерам=0;
	Запр = Новый Запрос;
	Запр.УстановитьПараметр("НачалоПериода", Начало);
	Запр.УстановитьПараметр("КонецПериода", Конец);
	Запр.УстановитьПараметр("Сотрудник", Продавец);
	Запр.Текст = "ВЫБРАТЬ
	|	ВыплатыСтажерамСотрудники.Сотрудник,
	|	ВыплатыСтажерамСотрудники.Сумма,
	|	ВыплатыСтажерамСотрудники.ПериодНачисления
	|ИЗ
	|	Документ.ВыплатыСтажерам.Сотрудники КАК ВыплатыСтажерамСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВыплатыСтажерам КАК ВыплатыСтажерам
	|		ПО ВыплатыСтажерамСотрудники.Ссылка = ВыплатыСтажерам.Ссылка
	|ГДЕ
	|	ВыплатыСтажерамСотрудники.ПериодНачисления МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВыплатыСтажерамСотрудники.Сотрудник = &Сотрудник
	|	И ВыплатыСтажерам.ПометкаУдаления = ЛОЖЬ";
	Запр = Запр.Выполнить().Выгрузить();
	Для каждого Строчка из Запр Цикл
		ВыплатаСтажерам=Строчка.Сумма;
	КонецЦикла;
	
	
	/////////////////////////////////////////////
	
	//Если Строка(КПВыборка.ПремияЗаАкционныйТовар)<>"" Тогда
	//	ПремияЗаАкционныйТовар=КПВыборка.ПремияЗаАкционныйТовар;
	//Иначе
	ПремияЗаАкционныйТовар=0;
	//КонецЕсли;
	//Если Строка(КПВыборка.УдержаниеПремииЗаАкционныйТовар)<>"" Тогда
	//	УдержаниеПремииЗаАкционныйТовар=КПВыборка.УдержаниеПремииЗаАкционныйТовар;
	//Иначе
	//	УдержаниеПремииЗаАкционныйТовар=0;
	//КонецЕсли;
	//Если Строка(КПВыборка.Премия)<>"" Тогда
	//	ДокПремия=КПВыборка.Премия;
	//Иначе
	ДокПремия=0;
	//КонецЕсли;
	
	/////////////////////////////////////////////
	
	ИтоговаяСумма=ПосчитатьПроценты(Откуда, Начало, Конец, Продавец);						
	
	//Отдел = 0;
	ПроцентГрупп = 0;
	СменыИПроценты = 0;
	СуммаСмен = 0;
	ПремияАкционныеТовары = 0;
	ДопСмена = 0;
	
	ПроцентГрупп = ИтоговаяСумма;
	СменыИПроценты = Смены*ОкладВДень+ИтоговаяСумма;
	СуммаСмен = Смены+Допсмены;
	
	ПремияАкционныеТовары = ПремияЗаАкционныйТовар;
	ДопСмена = ДопСмены*ОкладЗаДоп;
	
	ВсегоОтдел = Куда;
	ВсегоСмены = ВсегоСмены+Смены;
	ВсегоДопСмены = ВсегоДопСмены+ДопСмены;				
	ВсегоПроцентГрупп = ВсегоПроцентГрупп + ИтоговаяСумма;
	ВсегоСменыИПроценты = ВсегоСменыИПроценты +(Смены*ОкладВДень+ИтоговаяСумма);
	ВсегоСуммаСмен =ВсегоСуммаСмен+Смены;
	ВсегоПремия = ВсегоПремия+ДокПремия;
	ВсегоПремияАкционныеТовары = ВсегоПремияАкционныеТовары+ПремияЗаАкционныйТовар;
	ВсегоУдержаниеПремииЗаАкционныйТовар = ВсегоУдержаниеПремииЗаАкционныйТовар+УдержаниеПремииЗаАкционныйТовар;
	ВсегоДопСмена = ВсегоДопСмена+ДопСмены*ОкладЗаДоп;
	ВсегоВычеты = ВсегоВычеты+Вычеты;
	
	//	КонецЕсли;	
	//	
	//	///////////////////////////////////////////////////////////////////////////////////////		
	//	
	//КонецЦикла;	
	
	
	//После запросов
	
	Если Последняя=Ложь Тогда
		Последняя=Последняя-1;
		СтрокаТЧ = Начисления.Добавить();          //ВАЖНО! - многие имена не совпадают с действительными данными!
		СтрокаТЧ.Сотрудник = Продавец;
		СтрокаТЧ.Отдел = Отдел;
		СтрокаТЧ.СуммаСмен = Смены*ОкладВДень;
		СтрокаТЧ.Оклад = ОкладВДень;
		СтрокаТЧ.ОкладСтажера = ВыплатаСтажерам;
		СтрокаТЧ.ДопСмены = ОкладЗаДоп;
		СтрокаТЧ.Удержания = Вычеты;
		СтрокаТЧ.ПремияАкционныеТовары = 0;
		СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров = 0;
		СтрокаТЧ.ПроцентГрупп = ПроцентГрупп;      //Сумма %
		СтрокаТЧ.Минимальная = Миним;      //Минимальный оклад
		СтрокаТЧ.КолвоСмен = Смены;           //кол-во смен
		СтрокаТЧ.КолвоДопСмен = ДопСмены;
		СтрокаТЧ.СуммаДопСмен = ДопСмена;
		СтрокаТЧ.СменыИПроценты = СтрокаТЧ.СуммаСмен+ПроцентГрупп;
	Иначе 
		
		ДокПремия=0;
		Запр = Новый Запрос;
		Запр.УстановитьПараметр("НачалоПериода", НачалоМесяца(ЭтотОбъект.Период));
		Запр.УстановитьПараметр("КонецПериода", КонецМесяца(ЭтотОбъект.Период));
		Запр.УстановитьПараметр("Продавец", Продавец);
		Запр.Текст = "ВЫБРАТЬ
		|	ПремииСотрудники.Сумма
		|ИЗ
		|	Документ.Премии.Сотрудники КАК ПремииСотрудники
		|ГДЕ
		|	ПремииСотрудники.Сотрудник.Ссылка = &Продавец
		|	И ПремииСотрудники.ПериодНачисления МЕЖДУ &НачалоПериода И &КонецПериода";
		Запр = Запр.Выполнить().Выгрузить();
		Для каждого Строчка из Запр Цикл
			ДокПремия=ДокПремия+Строчка.Сумма;
		КонецЦикла;
		
		Если ВсегоСуммаСмен<14 Тогда
			Премия=0;
		КонецЕсли;
		//СуммаСтажировки=КПВыборка.ОкладСтажера;
		//Доплата за более чем 15 смен
		СуммаДоп=0;
		СменыИПроценты=ВсегоСмены*ОкладВДень+ВсегоПроцентГрупп;
		Если ВсегоСмены=0 Тогда
			ЗаработокЗаДень=СменыИПроценты;	
		Иначе
			ЗаработокЗаДень=СменыИПроценты/ВсегоСмены;
		КонецЕсли;
		ОфициальнаяЗПЗаДень=Миним/15;
		Разница=ОфициальнаяЗПЗаДень-ЗаработокЗаДень;
		Если Разница>0 Тогда
			СуммаДоп=Разница*ВсегоСмены;
		КонецЕсли;
		
		СтрокаТЧ = Начисления.Добавить();          //ВАЖНО! - многие имена не совпадают с действительными данными!
		СтрокаТЧ.Сотрудник = Продавец;
		СтрокаТЧ.Отдел = Отдел;
		СтрокаТЧ.СуммаСмен = Смены*ОкладВДень;
		СтрокаТЧ.Оклад = ОкладВДень;
		СтрокаТЧ.ОкладСтажера = ВыплатаСтажерам;
		СтрокаТЧ.ДопСмены = ОкладЗаДоп;
		СтрокаТЧ.ДопПремия = Премия; //Только за 15 дней.
		СтрокаТЧ.НДФЛ = Подоходный;
		СтрокаТЧ.ПремияСуммой = ДокПремия;    //Берётся из документа Премии
		СтрокаТЧ.Удержания = Вычеты;
		СтрокаТЧ.ПремияАкционныеТовары = ПремияАкционныеТовары;
		СтрокаТЧ.УдержаниеВозвратаАкционныхТоваров = УдержаниеПремииЗаАкционныйТовар;
		СтрокаТЧ.ПроцентГрупп = ПроцентГрупп;      //Сумма %
		СтрокаТЧ.Минимальная = Миним;      //Минимальный оклад
		СтрокаТЧ.КолвоСмен = Смены;           //кол-во смен
		СтрокаТЧ.КолвоДопСмен = ДопСмены;
		СтрокаТЧ.СуммаДопСмен = ДопСмена;
		СтрокаТЧ.СменыИПроценты = СтрокаТЧ.СуммаСмен+ПроцентГрупп;
		СтрокаТЧ.СуммаСДоплатой = СменыИПроценты+СуммаДоп;
		Выдача = (СтрокаТЧ.ОкладСтажера+СтрокаТЧ.СуммаСДоплатой+ВсегоПремияАкционныеТовары+
		ДокПремия+Премия-ВсегоВычеты-СтрокаТЧ.НДФЛ-
		ВсегоУдержаниеПремииЗаАкционныйТовар);              //Всего
		Выдача = Выдача/10;
		Выдача = (Окр(Выдача+0.49, 0));
		СтрокаТЧ.Итог = Выдача*10;                               //Всего
		КВыдаче = СтрокаТЧ.СуммаСДоплатой-ВсегоСуммаСмен*ОкладВДень+ДокПремия+Премия-Подоходный-
		ВсегоВычеты+ВсегоПремияАкционныеТовары-ВсегоУдержаниеПремииЗаАкционныйТовар;
		КВыдаче = КВыдаче/10;
		КВыдаче = (Окр(КВыдаче+0.49, 0));
		СтрокаТЧ.КВыдаче=КВыдаче*10;
		Выдача = (Выдача*10)+ВсегоДопСмена;
		СтрокаТЧ.ИтоговыйДоход = Выдача;
	КонецЕсли;
	
КонецПроцедуры	

ВсегоОтдел = 0;
ВсегоСмены = 0;
ВсегоДопСмены = 0;				
ВсегоПроцентГрупп = 0;
ВсегоСменыИПроценты = 0;
ВсегоСуммаСмен =0;
ВсегоПремия = 0;
ВсегоПремияАкционныеТовары = 0;
ВсегоУдержаниеПремииЗаАкционныйТовар = 0;
ВсегоДопСмена = 0;
ВсегоВычеты= 0;
ИтоговаяСумма = 0;
ГлобСмены = 0;









	
	
	
	
	
	
	
	
	
	
	
	
	
	
	