// Заполняет реквизиты значениями по умолчанию
//
// Параметры: 
//  ПараметрОбъектКопирования	- содержкит ссылку на документ копирования в случае, 
//								  если новый документ создается копированием.
//  ПараметрОснование			- содержкит ссылку на документ-основание в случае, 
//								  если новый документ создается на основании другого.
//
Процедура ИнициализироватьНовыйДокумент(ПараметрОбъектКопирования, ПараметрОснование) Экспорт

	#Если Клиент Или ВнешнееСоединение Тогда
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ПараметрОбъектКопирования, ПараметрОснование);
	#КонецЕсли

КонецПроцедуры // ИнициализироватьНовыйДокумент()	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриемНаСтажировку") Тогда
		// Заполнение шапки
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Стажер;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриемНаРаботу") Тогда
		// Заполнение шапки
		Организация = ДанныеЗаполнения.Организация;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// Проверяем наличие кадровых событий по сотруднику в указанную дату документа (созданных другими документами)
	// Если таковые имеются, отменяем проведение документа с сообщением пользователю об ошибке.
	Если РегистрыСведений.КадровыйУчетСотрудников.НаличиеКадровыхСобытийНаДату(Ссылка, Дата, Новый Структура("Организация,Сотрудник", Организация, Сотрудник)) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	// Движение по регистру состояния сотрудников 
	Движения.КадровыйУчетСотрудников.Записывать = Истина;
	Движения.КадровыйУчетСотрудников.Очистить();
	Движение = Движения.КадровыйУчетСотрудников.Добавить();
	Движение.Период = КонецДня(Дата);
	Движение.Организация = Организация;
	Движение.Сотрудник = Сотрудник;
	Движение.Состояние = Перечисления.СостоянияСотрудников.Уволен;

	// Перемещение сотрудника в группу уволенных
	СпрОбъект = Сотрудник.ПолучитьОбъект();
	СпрОбъект.Родитель = Справочники.ФизическиеЛица.Уволенные;
	СпрОбъект.Записать();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Перемещение сотрудника в группу работающих
	СпрОбъект = Сотрудник.ПолучитьОбъект();
	СпрОбъект.Родитель = Справочники.ФизическиеЛица.Работают;
	СпрОбъект.Записать();    
КонецПроцедуры