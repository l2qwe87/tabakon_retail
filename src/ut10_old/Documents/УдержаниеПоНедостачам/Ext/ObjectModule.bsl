// Заполняет реквизиты значениями по умолчанию
//
// Параметры: 
//  ПараметрОбъектКопирования	- содержкит ссылку на документ копирования в случае, 
//								  если новый документ создается копированием.
//  ПараметрОснование			- содержкит ссылку на документ-основание в случае, 
//								  если новый документ создается на основании другого.
//
Процедура ИнициализироватьНовыйДокумент(ПараметрОбъектКопирования, ПараметрОснование) Экспорт

	#Если Клиент Или ВнешнееСоединение Тогда
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ПараметрОбъектКопирования, ПараметрОснование);
	#КонецЕсли

КонецПроцедуры // ИнициализироватьНовыйДокумент()	

// Заполняет табличную часть "ДокументыНедостачи" данными текущей задолженности
// выбранного сотрудника по недостаче
Процедура ЗаполнитьДокументыНедостачи() Экспорт
	ДокументыНедостачи.Очистить();
	
	ТекущийМоментВремени = ?(Ссылка.Пустая(), ТекущаяДата(), Ссылка.МоментВремени());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НедостачиОстатки.ДокументНедостачи,
		|	НедостачиОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.Недостачи.Остатки(&ТекущийМоментВремени) КАК НедостачиОстатки
		|ГДЕ
		|	НедостачиОстатки.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ТекущийМоментВремени", ТекущийМоментВремени);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ДокументыНедостачи.Добавить();
		НоваяСтрока.ДокументНедостачи = ВыборкаДетальныеЗаписи.ДокументНедостачи;
		НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток;
		НоваяСтрока.ПериодУдержания = НачалоМесяца(Дата);
		НоваяСтрока.СтатьяЗатрат = Справочники.СтатьиЗатрат.Недостача;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр РасчетыПоЗаработнойПлате Расход
	Движения.РасчетыПоЗаработнойПлате.Записывать = Истина;
	Движения.РасчетыПоЗаработнойПлате.Очистить();

	// регистр Недостачи Расход
	Движения.Недостачи.Записывать = Истина;
	Движения.Недостачи.Очистить();
	
	Для Каждого ТекСтрокаДокументыНедостачи Из ДокументыНедостачи Цикл
		// регистр РасчетыПоЗаработнойПлате Расход
		Движение = Движения.РасчетыПоЗаработнойПлате.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = КонецМесяца(ТекСтрокаДокументыНедостачи.ПериодУдержания);
		Движение.Организация = Организация;
		Движение.Сотрудник = ТекСтрокаДокументыНедостачи.Сотрудник;
		Движение.Сумма = ТекСтрокаДокументыНедостачи.Сумма;
		Движение.ВидРасчета = Справочники.ВидыРасчетовССотрудниками.Недостача;
		
		// регистр Недостачи Расход
		Движение = Движения.Недостачи.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = ТекСтрокаДокументыНедостачи.Сотрудник;
		Движение.ДокументНедостачи = ТекСтрокаДокументыНедостачи.ДокументНедостачи;
		Движение.Сумма = ТекСтрокаДокументыНедостачи.Сумма;
	КонецЦикла;
КонецПроцедуры
