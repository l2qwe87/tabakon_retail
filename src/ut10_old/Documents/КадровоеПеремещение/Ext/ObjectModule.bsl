// Заполняет реквизиты значениями по умолчанию
//
// Параметры: 
//  ПараметрОбъектКопирования	- содержкит ссылку на документ копирования в случае, 
//								  если новый документ создается копированием.
//  ПараметрОснование			- содержкит ссылку на документ-основание в случае, 
//								  если новый документ создается на основании другого.
//
Процедура ИнициализироватьНовыйДокумент(ПараметрОбъектКопирования, ПараметрОснование) Экспорт

	#Если Клиент Или ВнешнееСоединение Тогда
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), , , ПараметрОбъектКопирования, ПараметрОснование);
	#КонецЕсли

КонецПроцедуры // ИнициализироватьНовыйДокумент()	

Процедура ОбработкаПроведения(Отказ, Режим)
	// Проверяем наличие кадровых событий по сотруднику в указанную дату документа (созданных другими документами)
	// Если таковые имеются, отменяем проведение документа с сообщением пользователю об ошибке.
	Если РегистрыСведений.КадровыйУчетСотрудников.НаличиеКадровыхСобытийНаДату(Ссылка, Дата, Новый Структура("Организация,Сотрудник", Организация, Сотрудник)) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// регистр КадровыйУчетСотрудников
	Движения.КадровыйУчетСотрудников.Записывать = Истина;
	Движения.КадровыйУчетСотрудников.Очистить();
	Движение = Движения.КадровыйУчетСотрудников.Добавить();
	Движение.Период = НачалоДня(ДатаПеревода);
	Движение.Организация = Организация;        
	Движение.Сотрудник = Сотрудник;
	Движение.Состояние = Состояние;
	Движение.Должность = ДолжностьПеревода;
	Движение.Подразделение = ПодразделениеПеревода;
	Если ОтделПеревода<>"" Тогда	
		ЗаписатьВСправочникНаСервере();
	КонецЕсли;
КонецПроцедуры

//&НаСервере
Процедура ЗаписатьВСправочникНаСервере()
	Элемент = Справочники.ФизическиеЛица.НайтиПоНаименованию(ЭтотОбъект.Сотрудник);
	ЭлементСправочник=Элемент.ПолучитьОбъект();
	ЭлементСправочник.Отдел=ОтделПеревода;
	ЭлементСправочник.Записать();
КонецПроцедуры

Процедура ЗаполнитьТекущиеДанныеКадровогоУчета() Экспорт
	Значения = РегистрыСведений.КадровыйУчетСотрудников.ПолучитьПоследнее(Дата, Новый Структура("Организация, Сотрудник", Организация, Сотрудник));
	
	ЭтотОбъект.ПодразделениеПеремещения = Значения.Подразделение;
	ЭтотОбъект.ДолжностьПеремещения = Значения.Должность;
	ЭтотОбъект.Состояние = Значения.Состояние;
	
	ЭлементСправочника = Справочники.ФизическиеЛица.НайтиПоНаименованию(ЭтотОбъект.Сотрудник); 
	ЭтотОбъект.ОтделПеремещения = ЭлементСправочника.Отдел;
КонецПроцедуры