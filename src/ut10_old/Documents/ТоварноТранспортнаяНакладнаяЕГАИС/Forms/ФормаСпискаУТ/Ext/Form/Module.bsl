
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастройкиОбменаСЕГАИС = ИнтеграцияЕГАИСПереопределяемый.ДоступныеТранспортныеМодули();
	
	Если НастройкиОбменаСЕГАИС.Количество() = 1 Тогда
		Организация = НастройкиОбменаСЕГАИС[0].Организация;
		Склад 		= НастройкиОбменаСЕГАИС[0].Склад;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокТТН_ЕГАИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьДоступностьЗагрузкиТТН();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	УстановитьДоступностьЗагрузкиТТН();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьТТН(Команда)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Организация", Организация);
	ДополнительныеПараметры.Вставить("Склад", Склад);
	
	ТранспортныйМодуль = ИнтеграцияЕГАИСПереопределяемый.ИспользуемыйТранспортныйМодуль(Склад, Организация);
	
	Результат = ИнтеграцияЕГАИСКлиент.ЗагрузитьТТН(ТранспортныйМодуль, , ДополнительныеПараметры);
	
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
	ТекстСообщения = НСтр("ru = 'Загрузка завершена.
								|Загружено документов: %ЗагруженоДокументов%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗагруженоДокументов%", Результат.ЗагруженоДокументов);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	ТоварноТранспортнаяНакладнаяЕГАИС = Элементы.Список.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТоварноТранспортнаяНакладнаяЕГАИС) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТранспортныйМодуль) Тогда
		ТранспортныйМодуль = ИнтеграцияЕГАИСПереопределяемый.ИспользуемыйТранспортныйМодуль(Склад, Организация);
		Если НЕ ЗначениеЗаполнено(ТранспортныйМодуль) Тогда
			СтрокаСообщения = НСтр("ru = 'Не определен транспорный модуль передачи данных в ЕГАИС");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеПараметры = ПолучитьДополнительныеДанныеПриОтказе(ТоварноТранспортнаяНакладнаяЕГАИС);
	
	Если ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтветВЕГАИС") Тогда
		СтрокаСообщения = НСтр("ru = 'Накладная уже подтверждена актом, отказ невозможен'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС") Тогда
		СтрокаСообщения = НСтр("ru = 'Отказ от данных уже передавался в ЕГАИС'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.Обрабатывается") Тогда
		ТекстВопроса = НСтр("ru='Накладная уже обрабатывается. Вы уверены, что хотите передать отказ от накладной в ЕГАИС?'");
	Иначе
		ТекстВопроса = НСтр("ru='Вы уверены, что хотите передать отказ от накладной в ЕГАИС?'");
	КонецЕсли;
	
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыАкта = Новый Структура;
	ПараметрыАкта.Вставить("ТТН", ДополнительныеПараметры.Ссылка);
	ПараметрыАкта.Вставить("Отказ", Истина);
	
	РезультатОперации = ИнтеграцияЕГАИСКлиент.ВыгрузитьАктПодтвержденияТТН(ПараметрыАкта, ТранспортныйМодуль);
	
	Если НЕ РезультатОперации.Результат Тогда
		СтрокаСообщения = НСтр("ru = 'Ошибка передачи данных в ЕГАИС'") 
		+ Символы.ПС + РезультатОперации.ОписаниеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	Иначе
		ЗаписатьТТНПриОтказе(ДополнительныеПараметры.Ссылка, РезультатОперации.ИдентификаторЗапроса);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступление(Команда)
		
	ТоварноТранспортнаяНакладнаяЕГАИС = Элементы.Список.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТоварноТранспортнаяНакладнаяЕГАИС) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПолучитьДополнительныеДанныеПриОтказе(ТоварноТранспортнаяНакладнаяЕГАИС);
	
	ПереданОтветВЕГАИС = Ложь;
	ПереданОтказВЕГАИС = Ложь;
	ТолькоПоиск        = Ложь;
	
	Если ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтветВЕГАИС") Тогда
		ПереданОтветВЕГАИС = Истина;
		ТолькоПоиск        = Истина;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС") Тогда
		ПереданОтказВЕГАИС = Истина;
		ТолькоПоиск        = Истина;
	КонецЕсли;
	
	ПоступлениеТоваров = СоздатьНайтиПоступлениеНаСервере(ТоварноТранспортнаяНакладнаяЕГАИС, ТолькоПоиск);
	Если ПоступлениеТоваров = Неопределено И ТолькоПоиск Тогда
		Если ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтветВЕГАИС") Тогда
			СтрокаСообщения = НСтр("ru = 'Накладная уже подтверждена актом, создание не возможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
			Возврат;
		ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС") Тогда
			СтрокаСообщения = НСтр("ru = 'В ЕГАИС уже передан отказ от накладной, создание не возможно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
			Возврат;
		КонецЕсли;
	ИначеЕсли ПоступлениеТоваров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", ПоступлениеТоваров);
	
	ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.ФормаОбъекта", ПараметрыОткрытия);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ПолучитьДополнительныеДанныеПриОтказе(ДокументСсылка)
	
	ДополнительныеПараметры = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.СтатусОбработкиТТН_ЕГАИС
	|ИЗ
	|	Документ.ТоварноТранспортнаяНакладнаяЕГАИС КАК ТоварноТранспортнаяНакладнаяЕГАИС
	|ГДЕ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДополнительныеПараметры.Вставить("Ссылка", Выборка.Ссылка);
		ДополнительныеПараметры.Вставить("СтатусОбработкиТТН_ЕГАИС", Выборка.СтатусОбработкиТТН_ЕГАИС);
		
	КонецЕсли;
	
	Возврат ДополнительныеПараметры
	
КонецФункции

&НаСервере
Процедура ЗаписатьТТНПриОтказе(ДокументСсылка, ИдентификаторЗапроса)
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.СтатусОбработкиТТН_ЕГАИС = Перечисления.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС;
	ДокументОбъект.ЕстьОшибкиПередачиЗапроса = Ложь;
	ДокументОбъект.ИдентификаторПоследнегоЗапроса = ИдентификаторЗапроса;
	ДокументОбъект.Записать();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЗагрузкиТТН()
	
	НастрокаОбменаСЕГАИС = ИнтеграцияЕГАИСПереопределяемый.ИспользуемыйТранспортныйМодуль(Склад, Организация);
	
	Элементы.ПолучениеТТН.Доступность = ЗначениеЗаполнено(НастрокаОбменаСЕГАИС);
	
КонецПроцедуры

&НаСервере
Функция СоздатьНайтиПоступлениеНаСервере(ТоварноТранспортнаяНакладнаяЕГАИС, ТолькоПоиск)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.ТоварноТранспортнаяНакладнаяЕГАИС = &ТоварноТранспортнаяНакладнаяЕГАИС
	|	И НЕ ПоступлениеТоваровУслуг.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ТоварноТранспортнаяНакладнаяЕГАИС", ТоварноТранспортнаяНакладнаяЕГАИС);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
	Если ТолькоПоиск Тогда
		Возврат Неопределено
	КонецЕсли;
	
	ПоступлениеТоваровОбъект = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	ПоступлениеТоваровОбъект.Дата = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаРеквизитыШапки_ТТН_ЕГАИС();
	
	Запрос.УстановитьПараметр("Ссылка", ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПустаяСсылкаПоставщика", Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПоступлениеТоваровОбъект, Выборка);
	КонецЕсли;
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	ПоступлениеТоваровОбъект.ОтражатьВУправленческомУчете = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОтражатьДокументыВУправленческомУчете");
	ПоступлениеТоваровОбъект.ОтражатьВБухгалтерскомУчете  = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОтражатьДокументыВБухгалтерскомУчете");
	ПоступлениеТоваровОбъект.ОтражатьВНалоговомУчете	  = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекущийПользователь, "ОтражатьДокументыВНалоговомУчете");
	
	ПоступлениеТоваровОбъект.ВидПоступления				  = Перечисления.ВидыПоступленияТоваров.НаСклад;
	
	ПоступлениеТоваровОбъект.Ответственный    = ТекущийПользователь;
	ПоступлениеТоваровОбъект.УчитыватьНДС     = Истина;
	ПоступлениеТоваровОбъект.СуммаВключаетНДС = Истина;
	
	ПоступлениеТоваровОбъект.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить();	
	ПоступлениеТоваровОбъект.КурсВзаиморасчетов = 1;
	ПоступлениеТоваровОбъект.КратностьВзаиморасчетов = 1;
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ПоступлениеТоваровОбъект, глЗначениеПеременной("глТекущийПользователь"), , "Покупка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаРеквизитыТЧ_ТТН_ЕГАИС();
	
	Запрос.УстановитьПараметр("Ссылка", ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияПустоеЗначение", Справочники.ЕдиницыИзмерения.ПустаяСсылка());
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаДанныеЕГАИС = Результат[4].Выгрузить();
	ТаблицаДополнительныхДанные = Результат[3].Выгрузить();
	
	ИнтеграцияЕГАИСПереопределяемый.ЗаполнитьТЧПоступленияПоДаннымТТН_ЕГАИС(ТаблицаДанныеЕГАИС, ТаблицаДополнительныхДанные, ПоступлениеТоваровОбъект);
	
	ПоступлениеТоваровОбъект.Записать();
	
	ТоварноТранспортнаяНакладнаяЕГАИСОбъект = ТоварноТранспортнаяНакладнаяЕГАИС.ПолучитьОбъект();
	ТоварноТранспортнаяНакладнаяЕГАИСОбъект.СтатусОбработкиТТН_ЕГАИС = Перечисления.СтатусыОбработкиТТН_ЕГАИС.Обрабатывается;
	ТоварноТранспортнаяНакладнаяЕГАИСОбъект.Записать();
	
	Элементы.Список.Обновить();
	Возврат ПоступлениеТоваровОбъект.Ссылка;
	
КонецФункции
