
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры <> Неопределено Тогда
		Отбор = Неопределено;
		Если Параметры.Свойство("Отбор", Отбор) Тогда
			
			УчитыватьПустыеСсылки = Ложь;
			Если Не Параметры.Свойство("УчитыватьПустыеСсылки", УчитыватьПустыеСсылки) Тогда
				УчитыватьПустыеСсылки = Ложь;
			КонецЕсли;
			
			Для Каждого Элемент Из Отбор Цикл
				
				ДоступноеПоле = Список.Отбор.ДоступныеПоляОтбора.Элементы.Найти(Элемент.Ключ);
				Если ДоступноеПоле <> Неопределено Тогда
					
					ДобавитьСложноеПоле = ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Элемент.Значение)) И 
						ЗначениеЗаполнено(Элемент.Значение) И УчитыватьПустыеСсылки;
						
					Если ДобавитьСложноеПоле Тогда
						
						ПравоеЗначение = Новый СписокЗначений;
						ПравоеЗначение.Добавить(Элемент.Значение);
						ПравоеЗначение.Добавить(ОбщегоНазначения.ПустоеЗначениеТипа(ТипЗнч(Элемент.Значение)));
						ДобавитьЭлементОтбора(ДоступноеПоле.Поле, ПравоеЗначение, ВидСравненияКомпоновкиДанных.ВСписке);
						
					Иначе
						ДобавитьЭлементОтбора(ДоступноеПоле.Поле, Элемент.Значение,);
					КонецЕсли;
					
				КонецЕсли;
			
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОповеститьОВыборе(Элементы.Список.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Рассмотренные = Новый Соответствие;
	НаУдаление = Новый Массив;
	Для Каждого ТекущийЭлементОтбора Из Список.Отбор.Элементы Цикл
		ПредыдущийЭлементОтбора = Рассмотренные.Получить(ТекущийЭлементОтбора.ЛевоеЗначение);
		Если ПредыдущийЭлементОтбора = Неопределено Тогда
			Рассмотренные.Вставить(ТекущийЭлементОтбора.ЛевоеЗначение, ТекущийЭлементОтбора);
		Иначе
			Если ТекущийЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
				НаУдаление.Добавить(ТекущийЭлементОтбора);
			Иначе
				НаУдаление.Добавить(ПредыдущийЭлементОтбора);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент Из НаУдаление Цикл
		Список.Отбор.Элементы.Удалить(Элемент);
	КонецЦикла;
КонецПроцедуры

Функция ДобавитьЭлементОтбора(ЛевоеЗначение, ПравоеЗначение, ВидСравнения = Неопределено, Родитель = Неопределено)
	Если Не Родитель = Неопределено Тогда
		ЭлементОтбора = Родитель.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Иначе
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	КонецЕсли;
	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	ЭлементОтбора.ВидСравнения = ВидСравнения;
	ЭлементОтбора.ЛевоеЗначение = ЛевоеЗначение;
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;
	ЭлементОтбора.Использование = Истина;
	Возврат ЭлементОтбора;
КонецФункции
