
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокМодулей = ИнтеграцияЕГАИСПереопределяемый.ДоступныеТранспортныеМодули();
	
	Для каждого ТранспортныйМодуль Из СписокМодулей Цикл
		Элементы.ТранспортныйМодуль.СписокВыбора.Добавить(ТранспортныйМодуль, ТранспортныйМодуль.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.ТранспортныйМодуль.СписокВыбора.Количество() = 1 Тогда
		ТранспортныйМодуль = Элементы.ТранспортныйМодуль.СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокТТН_ЕГАИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗагрузитьТТН(Команда)
	
	Если НЕ ЗначениеЗаполнено(ТранспортныйМодуль) Тогда
		Предупреждение(НСтр("ru = 'Заполните транспортный модуль'"));
		Возврат;
	КонецЕсли;
	
	Результат = ИнтеграцияЕГАИСКлиент.ЗагрузитьТТН(ТранспортныйМодуль);
	
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
	ТекстСообщения = НСтр("ru = 'Загрузка завершена.
								|Загружено документов: %ЗагруженоДокументов%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЗагруженоДокументов%", Результат.ЗагруженоДокументов);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтказатьсяОтТТН(Команда)
	
	ТоварноТранспортнаяНакладнаяЕГАИС = Элементы.Список.ТекущаяСтрока;
	
	Если НЕ ЗначениеЗаполнено(ТоварноТранспортнаяНакладнаяЕГАИС) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТранспортныйМодуль) Тогда
		СтрокаСообщения = НСтр("ru = 'Не определен транспорный модуль передачи данных в ЕГАИС");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = ПолучитьДополнительныеДанныеПриОтказе(ТоварноТранспортнаяНакладнаяЕГАИС);
	
	Если ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтветВЕГАИС") Тогда
		СтрокаСообщения = НСтр("ru = 'Накладная уже подтверждена актом, отказ невозможен'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС") Тогда
		СтрокаСообщения = НСтр("ru = 'Отказ от данных уже передавался в ЕГАИС'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		Возврат;
	ИначеЕсли ДополнительныеПараметры.СтатусОбработкиТТН_ЕГАИС = ПредопределенноеЗначение("Перечисление.СтатусыОбработкиТТН_ЕГАИС.Обрабатывается") Тогда
		ТекстВопроса = НСтр("ru='Накладная уже обрабатывается. Вы уверены, что хотите передать отказ от накладной в ЕГАИС?'");
	Иначе
		ТекстВопроса = НСтр("ru='Вы уверены, что хотите передать отказ от накладной в ЕГАИС?'");
	КонецЕсли;
	
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыАкта = Новый Структура;
	ПараметрыАкта.Вставить("ТТН", ДополнительныеПараметры.Ссылка);
	ПараметрыАкта.Вставить("Отказ", Истина);
	
	РезультатОперации = ИнтеграцияЕГАИСКлиент.ВыгрузитьАктПодтвержденияТТН(ПараметрыАкта, ТранспортныйМодуль);
	
	Если НЕ РезультатОперации.Результат Тогда
		СтрокаСообщения = НСтр("ru = 'Ошибка передачи данных в ЕГАИС'") 
		+ Символы.ПС + РезультатОперации.ОписаниеОшибки;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
	Иначе
		ЗаписатьТТНПриОтказе(ДополнительныеПараметры.Ссылка, РезультатОперации.ИдентификаторЗапроса);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ПолучитьДополнительныеДанныеПриОтказе(ДокументСсылка)
	
	ДополнительныеПараметры = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка,
	|	ТоварноТранспортнаяНакладнаяЕГАИС.СтатусОбработкиТТН_ЕГАИС
	|ИЗ
	|	Документ.ТоварноТранспортнаяНакладнаяЕГАИС КАК ТоварноТранспортнаяНакладнаяЕГАИС
	|ГДЕ
	|	ТоварноТранспортнаяНакладнаяЕГАИС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДополнительныеПараметры.Вставить("Ссылка", Выборка.Ссылка);
		ДополнительныеПараметры.Вставить("СтатусОбработкиТТН_ЕГАИС", Выборка.СтатусОбработкиТТН_ЕГАИС);
		
	КонецЕсли;
	
	Возврат ДополнительныеПараметры
	
КонецФункции

&НаСервере
Процедура ЗаписатьТТНПриОтказе(ДокументСсылка, ИдентификаторЗапроса)
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.СтатусОбработкиТТН_ЕГАИС = Перечисления.СтатусыОбработкиТТН_ЕГАИС.ПереданОтказВЕГАИС;
	ДокументОбъект.ЕстьОшибкиПередачиЗапроса = Ложь;
	ДокументОбъект.ИдентификаторПоследнегоЗапроса = ИдентификаторЗапроса;
	ДокументОбъект.Записать();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры