// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tabakon.DBContextMigration;

namespace Tabakon.DALMigration.Migrations
{
    [DbContext(typeof(MigratioTabakonDBContext))]
    [Migration("20200824230049_RetailDocSelesReport")]
    partial class RetailDocSelesReport
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport", b =>
                {
                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DocType", "DocDate", "DocRef");

                    b.HasIndex("RetailEndpointIdentity");

                    b.ToTable("RetailDocSelesReport");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailEndpoint", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RetailEndpointHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailEndpointName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailEndpointUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailPing", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailPing");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailVersion", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailVersion");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailPing", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tabakon.Entity.RetailVersion", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
