// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tabakon.DBContextMigration;

namespace Tabakon.DALMigration.Migrations
{
    [DbContext(typeof(MigratioTabakonDBContext))]
    [Migration("20221102095116_CashierCheckReportFriendlyName")]
    partial class CashierCheckReportFriendlyName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Tabakon.Entity.DiscountDetail", b =>
                {
                    b.Property<Guid>("DiscountDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailDocCashierCheckDocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RetailDocCashierCheckRetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DiscountDetailId");

                    b.HasIndex("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");

                    b.ToTable("RetailDocCashierCheck_DiscountDetail");
                });

            modelBuilder.Entity("Tabakon.Entity.GoodsDetail", b =>
                {
                    b.Property<Guid>("GoodsDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Goods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("RetailDocCashierCheckDocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RetailDocCashierCheckRetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Sum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("GoodsDetailId");

                    b.HasIndex("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");

                    b.ToTable("RetailDocCashierCheck_GoodsDetail");
                });

            modelBuilder.Entity("Tabakon.Entity.PaymentDetail", b =>
                {
                    b.Property<Guid>("PaymentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<string>("RetailDocCashierCheckDocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RetailDocCashierCheckRetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PaymentDetailId");

                    b.HasIndex("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");

                    b.ToTable("RetailDocCashierCheck_PaymentDetail");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocCashierCheck", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CashierCheckReportFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Date")
                        .HasComputedColumnSql("CAST([DocDate] as Date)");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerFriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SumCash")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("SumTerminal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("RetailEndpointIdentity", "DocRef");

                    b.HasIndex("Date");

                    b.HasIndex("DocRef");

                    b.HasIndex("DocType");

                    b.HasIndex("DocDate", "DocType");

                    b.ToTable("RetailDocCashierCheck");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity", "DocRef");

                    b.HasIndex("DocRef");

                    b.HasIndex("DocType");

                    b.HasIndex("DocDate", "DocType");

                    b.ToTable("RetailDocSelesReport");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport_NEW", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocRef")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity", "DocRef");

                    b.HasIndex("DocRef");

                    b.HasIndex("DocType");

                    b.HasIndex("DocDate", "DocType");

                    b.ToTable("RetailDocSelesReport_NEW");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailEndpoint", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("MarkAsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RetailEndpointHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailEndpointName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailEndpointUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailExtConfiguration", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailExtConfiguration");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailGetStoreBalance", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailGetStoreBalance");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailPing", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailPing");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailVersion", b =>
                {
                    b.Property<string>("RetailEndpointIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("datetime2");

                    b.HasKey("RetailEndpointIdentity");

                    b.ToTable("RetailVersion");
                });

            modelBuilder.Entity("Tabakon.Entity.DiscountDetail", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailDocCashierCheck", null)
                        .WithMany("DiscountDetail")
                        .HasForeignKey("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");
                });

            modelBuilder.Entity("Tabakon.Entity.GoodsDetail", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailDocCashierCheck", null)
                        .WithMany("GoodsDetail")
                        .HasForeignKey("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");
                });

            modelBuilder.Entity("Tabakon.Entity.PaymentDetail", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailDocCashierCheck", null)
                        .WithMany("PaymentDetail")
                        .HasForeignKey("RetailDocCashierCheckRetailEndpointIdentity", "RetailDocCashierCheckDocRef");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocCashierCheck", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocSelesReport_NEW", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailExtConfiguration", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailGetStoreBalance", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailPing", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailVersion", b =>
                {
                    b.HasOne("Tabakon.Entity.RetailEndpoint", "RetailEndpoint")
                        .WithMany()
                        .HasForeignKey("RetailEndpointIdentity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailEndpoint");
                });

            modelBuilder.Entity("Tabakon.Entity.RetailDocCashierCheck", b =>
                {
                    b.Navigation("DiscountDetail");

                    b.Navigation("GoodsDetail");

                    b.Navigation("PaymentDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
