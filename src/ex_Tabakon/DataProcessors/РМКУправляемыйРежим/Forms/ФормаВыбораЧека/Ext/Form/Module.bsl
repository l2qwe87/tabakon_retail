&НаСервере
&Вместо("ЗаполнитьПервоначальныйСписокВыбора")
Процедура ТБК_ЗаполнитьПервоначальныйСписокВыбора(Параметры)
	//тоже самое как и ЗаполнитьПервоначальныйСписокВыбора, только коммент условия на Проведен
	
	ДатаНачала = ТекущаяДатаСеанса();
	ДатаКонца = ДатаНачала;
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЧеков, "ДатаНачала", ДатаНачала, Истина);
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЧеков, "ДатаКонца", КонецДня(ДатаКонца), Истина);
	СписокКассККМ.ЗагрузитьЗначения(Параметры.МассивКассККМ);
	
	Если Параметры.Свойство("ВыбиратьПродажиСУчетомВозвратов") Тогда
		ТекущийРежимВызова = "ВыбиратьПродажиСУчетомВозвратов";
		Элементы.СписокЧековВидОперации.Видимость = Ложь;
		СписокСтатусов = Новый СписокЗначений;
		СписокСтатусов.Добавить(Перечисления.СтатусыЧековККМ.ПустаяСсылка());
		СписокСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Пробитый);
		СписокСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Архивный);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "СтатусЧекаККМ", СписокСтатусов, ВидСравненияКомпоновкиДанных.ВСписке);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "Проведен", Истина, ВидСравненияКомпоновкиДанных.Равно);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "ВидОперации", Перечисления.ВидыОперацийЧекККМ.Продажа, ВидСравненияКомпоновкиДанных.Равно);
		
		СписокОрганизаций.ЗагрузитьЗначения(Параметры.МассивОрганизаций);
		Если Параметры.Свойство("ЕстьПередачаОФД") И Параметры.ЕстьПередачаОФД Тогда
			ЕстьПередачаОФД = Истина;
			ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "Организация", СписокОрганизаций, ВидСравненияКомпоновкиДанных.ВСписке);
		Иначе
			ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "КассаККМ", СписокКассККМ, ВидСравненияКомпоновкиДанных.ВСписке);
		КонецЕсли;
		
	ИначеЕсли Параметры.Свойство("ПечатьПробитогоЧека") Тогда
		ТекущийРежимВызова = "ПечатьПробитогоЧека";
		СписокСтатусов = Новый СписокЗначений;
		СписокСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Архивный);
		СписокСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Пробитый);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "СтатусЧекаККМ", СписокСтатусов, ВидСравненияКомпоновкиДанных.ВСписке);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "КассаККМ", СписокКассККМ, ВидСравненияКомпоновкиДанных.ВСписке);
		
	ИначеЕсли Параметры.Свойство("ПробитиеДругогоЧека") Тогда
		ТекущийРежимВызова = "ПробитиеДругогоЧека";
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "СтатусЧекаККМ", Перечисления.СтатусыЧековККМ.ПустаяСсылка(), ВидСравненияКомпоновкиДанных.Равно);
		
		//ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "Проведен", Истина, ВидСравненияКомпоновкиДанных.Равно);
		
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "КассаККМ", СписокКассККМ, ВидСравненияКомпоновкиДанных.ВСписке);
		
	ИначеЕсли Параметры.Свойство("ПродолжениеОтложенныхЧеков") Тогда
		ТекущийРежимВызова = "ПродолжениеОтложенныхЧеков";
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "СтатусЧекаККМ", Перечисления.СтатусыЧековККМ.Отложенный, ВидСравненияКомпоновкиДанных.Равно);
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "КассаККМ", СписокКассККМ, ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	Если Параметры.Свойство("ОперацияСДенежнымиСредствами") Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(СписокЧеков, "ОперацияСДенежнымиСредствами", Параметры.ОперацияСДенежнымиСредствами, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	
	СкрыватьКолонкуОрганизации = Ложь;
	Если Параметры.Свойство("СкрыватьКолонкуОрганизации") Тогда
		Элементы.СписокЧековОрганизация.Видимость = НЕ Параметры.СкрыватьКолонкуОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТБКИнструкцияПосле(Команда)  
	ОбщегоНазначенияВызовСервера.ОткрытьНужнуюИнструкцию("Возврат (отмена чека текущий день).");		
КонецПроцедуры

&НаКлиенте
Процедура ТБКИнструкцияПробитьНепробитыйПосле(Команда)
	ОбщегоНазначенияВызовСервера.ОткрытьНужнуюИнструкцию("Пробить непробитый чек");		
КонецПроцедуры
