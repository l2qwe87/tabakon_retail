
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//проставляем значения

	Период				=	НачалоМесяца(ТекущаяДата());
	ПериодСписок		=	Формат(ТекущаяДата(), "ДФ=MMMM");
	
	//Если Не ЗначениеЗаполнено(Продавец) тогда
	//	Продавец	=	Пользователи.ТекущийПользователь().ФизическоеЛицо;
	//КонецЕсли;
	
	КоличествоСмен						=	ПолучитьКоличествоСмен(Продавец, Период);
	Элементы.КолСменСтрока.Заголовок	=	"Смены:" + Строка(КоличествоСмен);
	
	
	ПроставитьСписокПродавцов(Период);	
	//

	ВариантМотивации	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ВариантМотивации");
	
	Если ВариантМотивации = 1 тогда
		ЗаполнитьВариантПлановойМотивации();
		
	ИначеЕсли ВариантМотивации = 2 тогда
		Элементы.Переключатель.Видимость	= Ложь;
		//ЗаполнитьВариантПроцентнойМотивации();
		ЗаполнитьВариантПроцентнойМотивации_Личный();
		
	ИначеЕсли ВариантМотивации = 3 тогда
		ЗаполнитьВариантПроцентнойМотивации();//он такой же в общем варианте, отличается только в личном
		
	ИначеЕсли ВариантМотивации = 4 тогда
		ЗаполнитьВариантОбщейМотивации();

	КонецЕсли;
	
	Переключатель	=	0;
	
	Если Параметры.Свойство("Развернуть") тогда
		флразвернуть	=	Истина;
	КонецЕсли;
КонецПроцедуры

#Область ПлановаяМотивация
&НаСервере
Процедура ЗаполнитьВариантПлановойМотивации()
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь;
	Элементы.Основная.Видимость	= Истина;
	Элементы.Группа2.Видимость	= Истина; 
	
	Если флПостроенаПлановаяОбщая тогда Возврат КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать();
	
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Пока рез.Следующий() цикл	
		СуммаФакт	=	ПолучитьСуммуФактПоТипуПлана(Рез.ТипПлана);
				
		НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(Рез.ТипПлана));
		
		НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

		НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НДиаг);  	
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

		Если Найти(НРег(Строка(Рез.ТипПлана)),"личный") или Найти(НРег(Строка(Рез.ТипПлана)),"план то") тогда
			Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа2);	
		иначе
			Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Основная);	
		КонецЕсли;
		
		
		Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
		Диаг.ПутьКДанным			= НазваниеДиаграммы;
		Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;

		НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
		НДиаг.Серии.Добавить("План");

		ТочкаПоПлану = НДиаг.УстановитьТочку("План");
		
		Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
			Если Рез.ТипПлана <> "План личный" тогда 
				ТочкаПоПлану_Сегодня 				= НДиаг.УстановитьТочку("План_НаСегодня");		
				ТочкаПоПлану_Сегодня.текст			=	"План на сегодня";
				ТочкаПоПлану_Сегодня.ПриоритетЦвета	=	Истина;  
			КонецЕсли;
		КонецЕсли;

		ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
		
		ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
		ТочкаПоПлану.ПриоритетЦвета	=Истина;	
		ТочкаПоПлану.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
		
		НужСумма	=	рез.Сумма;
		
		//пришлось умножать на кол. смен
		Если Рез.ТипПлана = "План личный" тогда
			Запрос			=	Новый Запрос("ВЫБРАТЬ
			      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
			      			 	             |ПОМЕСТИТЬ ПродавцыСмены
			      			 	             |ИЗ
			      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
			      			 	             |ГДЕ
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
			      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
			      			 	             |
			      			 	             |СГРУППИРОВАТЬ ПО
			      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
			      			 	             |;
			      			 	             |
			      			 	             |////////////////////////////////////////////////////////////////////////////////
			      			 	             |ВЫБРАТЬ
			      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
			      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
			      			 	             |ИЗ
			      			 	             |	ПродавцыСмены КАК ПродавцыСмены
			      			 	             |
			      			 	             |СГРУППИРОВАТЬ ПО
			      			 	             |	ПродавцыСмены.Продавец");
			Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
			Запрос.УстановитьПараметр("Продавец",Продавец);
			Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

			ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
			НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
			Если НужСтрока <> Неопределено тогда 
				
				Если НачалоМесяца(Период) = НачалоМесяца(ТекущаяДата()) тогда
					КолСмен	=	НужСтрока.КолСмен + 1;
				иначе
					КолСмен	=	НужСтрока.КолСмен;
				КонецЕсли;

			иначе
				КолСмен	=	1;	
			КонецЕсли;       
		
			НужСумма = НужСумма * КолСмен;
		КонецЕсли; 			
       	//
		
		Если СуммаФакт >  НужСумма тогда	
			ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
		иначе
			ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
		КонецЕсли;
		
		ПроцентВыполнения	=	Окр((СуммаФакт / НужСумма) * 100,2);
		
		НДиаг.УстановитьЗначение(ТочкаПоПлану
				, НДиаг.Серии[0]
				, НужСумма
				, Неопределено
				, Рез.ТипПлана + " "+НужСумма);
				
		Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
			Если Рез.ТипПлана <> "План личный" тогда 
				КолДней			=	День(Период);
				КолДнейВМесяце	=	День(КонецМесяца(Период));
				
				СуммаПланНаСегодня	=	Окр(НужСумма / КолДнейВМесяце,2);
				СуммаПланНаСегодня	=	СуммаПланНаСегодня *  КолДней;
				
				НДиаг.УстановитьЗначение(ТочкаПоПлану_Сегодня
					, НДиаг.Серии[0]
					, СуммаПланНаСегодня
					, Неопределено
					, Рез.ТипПлана + "(на сег.день) "+ СуммаПланНаСегодня);
					
				Если СуммаФакт >  СуммаПланНаСегодня тогда	
					ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
				иначе
					ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
				КонецЕсли;     
			КонецЕсли;    
		КонецЕсли;
		

		НДиаг.УстановитьЗначение(ТочкаПоФакту
			, НДиаг.Серии[0]
			, СуммаФакт
			, Неопределено
			, "Факт. продажи" + " " + СуммаФакт + "; Процент выполнения:"+ПроцентВыполнения+"%");  		
			
			
		НДиаг.ОтображатьЛегенду	= Ложь;	 		
		НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
		НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
		НДиаг.АвтоМинимальноеЗначение	=	Ложь;
		НДиаг.МаксимальноеЗначение		=	Макс(НужСумма, СуммаФакт) + НужСумма/10;
		НДиаг.МинимальноеЗначение		=	-0.01; 

	КонецЦикла; 
	
	флПостроенаПлановаяОбщая = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВариантПлановойМотивации_Личный()

	Элементы.Основная.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Истина;
	Элементы.Группа4.Видимость	= Истина; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;

		
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана <> ""План личный""
	      	 	             |			И ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана <> ""План ТО""
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать(); 
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Пока рез.Следующий() цикл	
		СуммаПлан		=	Рез.Сумма; 		
 		КоличествоДней 	=	Сред(КонецМесяца(Период), 1, 2);
		СуммаПлан_Смена	=	Окр(СуммаПлан / КоличествоДней,0);
		
		Запрос			=	Новый Запрос("ВЫБРАТЬ
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		      			 	             |ИЗ
		      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      			 	             |ГДЕ
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		      			 	             |;
		      			 	             |
		      			 	             |////////////////////////////////////////////////////////////////////////////////
		      			 	             |ВЫБРАТЬ
		      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		      			 	             |ИЗ
		      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	ПродавцыСмены.Продавец");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

		ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
		Если НужСтрока= Неопределено тогда 
			НовСтр	=	ТЗПродавцыСмены.Добавить();
			НовСтр.Продавец	=	Продавец;
			НовСтр.КолСмен	=	1;
		иначе
			Если НачалоМесяца(Период) = НачалоМесяца(ТекущаяДата()) тогда
				НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
			КонецЕсли;
		КонецЕсли;         	
		
		ТЗ_СуммаФактПоГруппамПоПродавцам	=	ПолучитьСуммуФактПоГруппамПоПродавцам_ПлановаяМотивация(Рез.ТипПлана); 	
		
		Ном = 0;
		Для каждого ПродавцыСмены из  ТЗПродавцыСмены цикл
			//СуммаФакт		=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец);
			//СуммаФактДень	=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец, НачалоДня(Период));
			
			НужСтрока		=	ТЗ_СуммаФактПоГруппамПоПродавцам.найти(ПродавцыСмены.Продавец);
			Если НужСтрока = Неопределено тогда
				СуммаФакт		=	0;
				СуммаФактДень	=	0;
			иначе
				СуммаФакт		=	НужСтрока.СуммаЧеки;
				СуммаФактДень	=	НужСтрока.СуммаЧекиСегодня;
			КонецЕсли;

			
			
			
			КолСмен			=	ПродавцыСмены.КолСмен;
			
			НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(ПродавцыСмены.Продавец) + Строка(Рез.ТипПлана));
			
			НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

			НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Если Ном = 1 тогда
				Элементы.Группа4.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен;
				Элементы.Группа4.ОтображатьЗаголовок	=	Истина; 				
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа4);  	
			иначе
				Элементы.Группа3.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен;
				Элементы.Группа3.ОтображатьЗаголовок	=	Истина;   
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа3);
			КонецЕсли; 
			
			Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным			= НазваниеДиаграммы; 
			Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;

			НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
			НДиаг.Серии.Добавить("План");

			ТочкаПоПлану = НДиаг.УстановитьТочку("План");
			ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
			
			ТочкаПоПлану_День = НДиаг.УстановитьТочку("План день");
			ТочкаПоФакту_День = НДиаг.УстановитьТочку("Факт сегодня");
			
			ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
			ТочкаПоПлану.ПриоритетЦвета	=Истина;	
			
			ТочкаПоПлану_День.ПриоритетЦвета	=Истина;   		
			ТочкаПоФакту_День.ПриоритетЦвета	=Истина;
			
			ТочкаПоПлану.Цвет		=	WebЦвета.БледноКрасноФиолетовый;	
			ТочкаПоПлану_День.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
			
			СуммаПлан	=	СуммаПлан_Смена * КолСмен;
			
			Если СуммаФакт >  СуммаПлан тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			Если СуммаФактДень >  СуммаПлан_Смена тогда	
				ТочкаПоФакту_День.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту_День.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			ПроцентВыполнения		=	Окр((СуммаФакт / СуммаПлан) * 100,2);
			ПроцентВыполнения_День	=	Окр((СуммаФактДень / СуммаПлан_Смена) * 100,2);

			НДиаг.УстановитьЗначение(ТочкаПоПлану
					, НДиаг.Серии[0]
					, СуммаПлан
					, Неопределено
					, Рез.ТипПлана + " "+СуммаПлан);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту
				, НДиаг.Серии[0]
				, СуммаФакт
				, Неопределено
				, "Факт. продажи" + " " + СуммаФакт + "; Процент выполнения:"+ПроцентВыполнения+"%");
				
				
				
			НДиаг.УстановитьЗначение(ТочкаПоПлану_День
					, НДиаг.Серии[0]
					, СуммаПлан_Смена
					, Неопределено
					, Рез.ТипПлана + " "+СуммаПлан_Смена);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту_День
				, НДиаг.Серии[0]
				, СуммаФактДень
				, Неопределено
				, "Факт. продажи" + " " + СуммаФактДень + "; Процент выполнения:"+ПроцентВыполнения_День+"%");  
				
				
			НДиаг.ОтображатьЛегенду			=   Ложь;	 		
			НДиаг.ВидПодписей				=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МаксимальноеЗначение		=	Макс(СуммаПлан, СуммаФакт) + СуммаПлан/10;
			НДиаг.МинимальноеЗначение		=	-0.01; 

			Ном	=	Ном+1;
		КонецЦикла;
	КонецЦикла;   	  

	флПостроенаПлановаяЛичная	=	Истина;	
КонецПроцедуры

Функция ПолучитьСуммуФактПоТипуПлана(ТипПлана, ЗаДень = Ложь)     	
	//Личный
	Если ТипПлана = "План личный" тогда
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка КАК Ссылка
		      	 	             |ПОМЕСТИТЬ Доки
		      	 	             |ИЗ
		      	 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      	 	             |ГДЕ
		      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      	 	             |;
		      	 	             |
		      	 	             |////////////////////////////////////////////////////////////////////////////////
		      	 	             |ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ТБК_ВедомостьОПродажахЗаДень.ВыручкаЗаСменуПоКассе - ТБК_ВедомостьОПродажахЗаДень.ВозвратОтПокупателяНал - ТБК_ВедомостьОПродажахЗаДень.ВозвратОтПокупателяБезНал), 0) КАК СуммаВедомости
		      	 	             |ИЗ
		      	 	             |	Доки КАК Доки
		      	 	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТБК_ВедомостьОПродажахЗаДень КАК ТБК_ВедомостьОПродажахЗаДень
		      	 	             |		ПО Доки.Ссылка = ТБК_ВедомостьОПродажахЗаДень.Ссылка
		      	 	             |;
		      	 	             |
		      	 	             |////////////////////////////////////////////////////////////////////////////////
		      	 	             |ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
		      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
		      	 	             |ИЗ
		      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		      	 	             |ГДЕ
		      	 	             |	ЧекККМТовары.Ссылка.Проведен
		      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
		      	 	             |	И ЧекККМТовары.Продавец = &Продавец");
		
		Если не ЗаДень тогда
			Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		иначе
			Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецДня(Период)); 			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
		Запрос.УстановитьПараметр("Продавец",Продавец);
		Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
		Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
		Рез = Запрос.ВыполнитьПакет();
		
		СуммаФАкт	=	Рез[1].Выгрузить()[0].СуммаВедомости + Рез[2].Выгрузить()[0].СуммаЧеки;
				
		//Запрос			=	Новый Запрос("ВЫБРАТЬ
		//	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		//	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		//	      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		//	      			 	             |ИЗ
		//	      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		//	      			 	             |ГДЕ
		//	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		//	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		//	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		//	      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		//	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
		//	      			 	             |
		//	      			 	             |СГРУППИРОВАТЬ ПО
		//	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		//	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		//	      			 	             |;
		//	      			 	             |
		//	      			 	             |////////////////////////////////////////////////////////////////////////////////
		//	      			 	             |ВЫБРАТЬ
		//	      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		//	      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		//	      			 	             |ИЗ
		//	      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		//	      			 	             |
		//	      			 	             |СГРУППИРОВАТЬ ПО
		//	      			 	             |	ПродавцыСмены.Продавец");
		//Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		//Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		//Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
		//Запрос.УстановитьПараметр("Продавец",Продавец);

		//ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		//Если ТЗПродавцыСмены.Количество() = 0 тогда 
		//	КолСмен	=	1;	
		//иначе
		//	Если НачалоМесяца(Период) = НачалоМесяца(ТекущаяДата()) тогда
		//		КолСмен	=	ТЗПродавцыСмены[0].КолСмен +1;	
		//	иначе
		//		КолСмен	=	ТЗПродавцыСмены[0].КолСмен;	
		//	КонецЕсли;
		//КонецЕсли;
		
		//СуммаФАкт	=	СуммаЗаДень * КоличествоСмен;
			
		Возврат СуммаФАкт;
	КонецЕсли;
	
	//Общий
	Если ТипПлана = "План ТО" тогда
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ПродажиОбороты.СтоимостьОборот), 0) КАК Сумма
		      	 	             |ИЗ
		      	 	             |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПродажиОбороты
		      	 	             |ГДЕ
		      	 	             |	ТИПЗНАЧЕНИЯ(ПродажиОбороты.ДокументПродажи) <> ТИП(Документ.РеализацияТоваров)");
		Если не ЗаДень тогда
			Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		иначе
			Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецДня(Период)); 			
		КонецЕсли;
		
		Рез = Запрос.Выполнить().Выбрать();
		Если Рез.Следующий() тогда
			Возврат Рез.сумма;
		иначе
			Возврат 0;
		КонецЕсли;

	КонецЕсли;

	//По группам товаров 
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов
	      	 	             |ГДЕ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.ТипПлана = &ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана",ТипПлана);
	Рез = Запрос.Выполнить().Выгрузить();

	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ПродажиОбороты.СтоимостьОборот), 0) КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты
	      	 	             |ГДЕ
	      	 	             |	ТИПЗНАЧЕНИЯ(ПродажиОбороты.ДокументПродажи) <> ТИП(Документ.РеализацияТоваров)");
	
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если рез.Следующий() тогда
		Возврат Рез.Сумма;
	иначе
		Возврат 0;
	КонецЕсли;

	
КонецФункции

Функция ПолучитьСуммуФактПоТипуПлана_Личный(ТипПлана, Продавец_, НачалоПериода = Неопределено, ВариантМотивации = 1)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов
	      	 	             |ГДЕ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.ТипПлана = &ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана",ТипПлана);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Продавец = &Продавец
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)");
		
		
		Если НачалоПериода = Неопределено тогда
			Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
			Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		иначе //строим за текущий день
			Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ТекущаяДата()));
			Запрос.УстановитьПараметр("ДатаКон",КонецДня(ТекущаяДата()));
		КонецЕсли;
		

		Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("Продавец",Продавец_);
		Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
		Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
		Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
		Если ТипПлана = "План ТО" тогда
			Запрос.Текст	=	СтрЗаменить(Запрос.Текст, "И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)", "");			
		КонецЕсли;
		
		Рез = Запрос.Выполнить().Выбрать();
		Если рез.Следующий() тогда
			Возврат рез.СуммаЧеки;
		иначе
			Возврат 0;
		КонецЕсли;
	
	
КонецФункции


Функция ПолучитьСуммуФактПоГруппамПоПродавцам_ПлановаяМотивация(ТипПлана)  
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов
	      	 	             |ГДЕ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.ТипПлана = &ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана",ТипПлана);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧеки,
	      	 	             |	ЧекККМТовары.Продавец КАК Продавец,
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.Дата >= &ТекДень
	      	 	             |					ТОГДА ВЫБОР
	      	 	             |							КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |								ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |							ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |						КОНЕЦ
	      	 	             |				ИНАЧЕ 0
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧекиСегодня
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ЧекККМТовары.Продавец");
		
		
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ТекДень",НачалоДня(ТекущаяДата())); 
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Возврат Запрос.Выполнить().Выгрузить();	
КонецФункции


#КонецОбласти 

#Область ПроцентнаяМотивация
&НаСервере
Процедура ЗаполнитьВариантПроцентнойМотивации()
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь;
	Элементы.Фокусная.Видимость	= Ложь;
	Элементы.Группа7.Видимость	= Ложь;
	Элементы.Основная.Видимость	= Истина;
	Элементы.Группа2.Видимость	= Истина; 
	
	Если флПостроенаПлановаяОбщая тогда Возврат КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана = &ТипПлана
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана","План ТО");
	рез = запрос.Выполнить().Выбрать(); 	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Если рез.Следующий() тогда	
		СуммаФакт	=	ПолучитьСуммуФактПоТипуПлана(Рез.ТипПлана); 		
		
		НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(Рез.ТипПлана));
		
		НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

		НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НДиаг);  	
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  
		Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Основная);	
		
		Диаг.Вид			= ВидПоляФормы.ПолеДиаграммы; 
		Диаг.ПутьКДанным	= НазваниеДиаграммы;

		НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
		НДиаг.Серии.Добавить("План");

		ТочкаПоПлану = НДиаг.УстановитьТочку("План");
		
		Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
			ТочкаПоПлану_Сегодня 				= НДиаг.УстановитьТочку("План_НаСегодня");		
			ТочкаПоПлану_Сегодня.текст			=	"План на сегодня";
			ТочкаПоПлану_Сегодня.ПриоритетЦвета	=	Истина; 
		КонецЕсли;

		ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
		
		ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
		ТочкаПоПлану.ПриоритетЦвета	=Истина;	
		ТочкаПоПлану.Цвет	=	WebЦвета.БледноКрасноФиолетовый;		
		
		
		НДиаг.УстановитьЗначение(ТочкаПоПлану
				, НДиаг.Серии[0]
				, рез.Сумма
				, Неопределено
				, Рез.ТипПлана + " "+рез.Сумма);
				
		КолДней			=	День(Период);
		КолДнейВМесяце	=	День(КонецМесяца(Период));
		
		Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
			СуммаПланНаСегодня	=	Окр(рез.Сумма / КолДнейВМесяце,2);
			СуммаПланНаСегодня	=	СуммаПланНаСегодня *  КолДней;
			
			НДиаг.УстановитьЗначение(ТочкаПоПлану_Сегодня
				, НДиаг.Серии[0]
				, СуммаПланНаСегодня
				, Неопределено
				, Рез.ТипПлана + "(на сег.день) "+ СуммаПланНаСегодня);
				
			Если СуммаФакт >  СуммаПланНаСегодня тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
		КонецЕсли;
		

		НДиаг.УстановитьЗначение(ТочкаПоФакту
			, НДиаг.Серии[0]
			, СуммаФакт
			, Неопределено
			, "Факт. продажи" + " " + СуммаФакт);  		
			
			
		НДиаг.ОтображатьЛегенду	= Ложь;	 		
		НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
		НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
		НДиаг.АвтоМинимальноеЗначение	=	Ложь;
		НДиаг.МаксимальноеЗначение		=	Макс(рез.Сумма, СуммаФакт) + рез.Сумма/10;
		НДиаг.МинимальноеЗначение		=	-0.01; 
		Диаг.Ширина						=	100;
		Диаг.Высота						=	20;
	КонецЕсли; 
	
	флПостроенаПлановаяОбщая = Истина;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьВариантПроцентнойМотивации_Личный()

	Элементы.Основная.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Истина;
	Элементы.Группа4.Видимость	= Истина; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;

		
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Процент КАК Процент
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана = ""План ТО""
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать(); 
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Если  рез.Следующий() тогда	
		СуммаПлан		=	Рез.Сумма; 		
 		КоличествоДней 	=	Сред(КонецМесяца(Период), 1, 2);
		СуммаПлан_Смена	=	Окр(СуммаПлан / КоличествоДней,0);
		
		Запрос			=	Новый Запрос("ВЫБРАТЬ
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		      			 	             |ИЗ
		      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      			 	             |ГДЕ
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		      			 	             |;
		      			 	             |
		      			 	             |////////////////////////////////////////////////////////////////////////////////
		      			 	             |ВЫБРАТЬ
		      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		      			 	             |ИЗ
		      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	ПродавцыСмены.Продавец");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

		ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
		Если НужСтрока= Неопределено тогда 
			НовСтр	=	ТЗПродавцыСмены.Добавить();
			НовСтр.Продавец	=	Продавец;
			НовСтр.КолСмен	=	1;
		иначе 			
			Если НачалоМесяца(Период) = НачалоМесяца(ТекущаяДата()) тогда
				НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
			КонецЕсли;

		КонецЕсли;
		
		ТЗ_СуммаФактПоВсемГруппамПоПродавцам 			=   ПолучитьСуммуФактПоВсемГруппамПоПродавцам(); 
	
		
		Ном = 0;
		Для каждого ПродавцыСмены из  ТЗПродавцыСмены цикл
			СуммаФакт		=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец,,ВариантМотивации);
			СуммаФактДень	=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец, НачалоДня(Период), ВариантМотивации);
			КолСмен			=	ПродавцыСмены.КолСмен;
			
			//Считаем по процентам
			НужПроцент = Рез.Процент;
			//СуммаФактПоВсемГруппам 			=   ПолучитьСуммуФактПоВсемГруппам(ПродавцыСмены.Продавец);		
			//СуммаФактПоВсемГруппам_День 	=   ПолучитьСуммуФактПоВсемГруппам(ПродавцыСмены.Продавец, НачалоДня(Период));
			
			НужСтрока					=	ТЗ_СуммаФактПоВсемГруппамПоПродавцам.найти(ПродавцыСмены.Продавец);
			Если НужСтрока = Неопределено тогда
				СуммаФактПоВсемГруппам		=	0;
				СуммаФактПоВсемГруппам_День	=	0;
			иначе
				СуммаФактПоВсемГруппам		=	НужСтрока.СуммаЧеки;
				СуммаФактПоВсемГруппам_День	=	НужСтрока.СуммаЧекиСегодня;
			КонецЕсли;
			

			СуммаБонуса				=	Окр((СуммаФактПоВсемГруппам / 100) * НужПроцент,0);	
			СуммаБонуса_День		=	Окр((СуммаФактПоВсемГруппам_День / 100) * НужПроцент,0);
			//
			
			НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(ПродавцыСмены.Продавец) + Строка(Рез.ТипПлана));
			
			НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

			НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Если Ном = 1 тогда
				Элементы.Группа4.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен + 
															"; Всего продаж без стиков и сигарет: " + СуммаФактПоВсемГруппам + "р.; Сумма премии: "+СуммаБонуса + "р.";
				
				Элементы.Группа4.ОтображатьЗаголовок	=	Истина; 				                                                                              
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа4);  	
			иначе
				Элементы.Группа3.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен + 
															"; Всего продаж без стиков и сигарет: " + СуммаФактПоВсемГруппам + "р.; Сумма премии: "+СуммаБонуса + "р.";
				
				Элементы.Группа3.ОтображатьЗаголовок	=	Истина;   
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа3);
			КонецЕсли; 
			
			Диаг.Вид			= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным	= НазваниеДиаграммы;  

			НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
			НДиаг.Серии.Добавить("План");

			//ТочкаПоПлану 					= НДиаг.УстановитьТочку("План");
			ТочкаПоФакту 					= НДиаг.УстановитьТочку("Факт");
			ТочкаПоФактуБезСтиковиСигарет 	= НДиаг.УстановитьТочку("Факт без стиков и сиг-т");  
			ТочкаСуммаБонуса			 	= НДиаг.УстановитьТочку("Сумма премии");

			
			//ТочкаПоПлану_День 					= НДиаг.УстановитьТочку("План день");
			Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
				ТочкаПоФакту_День 					= НДиаг.УстановитьТочку("Факт сегодня");
				ТочкаПоФактуБезСтиковиСигарет_День 	= НДиаг.УстановитьТочку("Факт без стиков и сиг-т сегодня");  
				ТочкаСуммаБонуса_День			 	= НДиаг.УстановитьТочку("Сумма премии сегодня");
				
				ТочкаПоФакту_День.ПриоритетЦвета					=Истина;   
				ТочкаСуммаБонуса_День.ПриоритетЦвета				=Истина;
				ТочкаПоФактуБезСтиковиСигарет_День.Цвет	=	WebЦвета.Золотой;			
				ТочкаПоФактуБезСтиковиСигарет_День.ПриоритетЦвета	=Истина;   		
				ТочкаСуммаБонуса_День.Цвет				=	WebЦвета.Пурпурный; 			

			КонецЕсли;
			
			ТочкаПоФакту.ПриоритетЦвета							=Истина;   		
			//ТочкаПоПлану.ПриоритетЦвета							=Истина;			
			//ТочкаПоПлану_День.ПриоритетЦвета					=Истина;   		
			ТочкаПоФактуБезСтиковиСигарет.ПриоритетЦвета		=Истина;   		
			ТочкаСуммаБонуса.ПриоритетЦвета						=Истина;

			
			ТочкаПоФактуБезСтиковиСигарет.Цвет		=	WebЦвета.Золотой;	
			ТочкаСуммаБонуса.Цвет					=	WebЦвета.Пурпурный;	
			//ТочкаПоПлану.Цвет						=	WebЦвета.БледноКрасноФиолетовый;	
			//ТочкаПоПлану_День.Цвет					=	WebЦвета.БледноКрасноФиолетовый;
			
			//СуммаПлан	=	СуммаПлан_Смена * КолСмен;
			
			Если СуммаФакт >  СуммаПлан тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЛимонноЗеленый;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
				Если СуммаФактДень >  СуммаПлан_Смена тогда	
					ТочкаПоФакту_День.Цвет	=	WebЦвета.ЛимонноЗеленый;
				иначе
					ТочкаПоФакту_День.Цвет	=	WebЦвета.Бирюзовый;
				КонецЕсли;  
			КонецЕсли;
			
			//НДиаг.УстановитьЗначение(ТочкаПоПлану
			//		, НДиаг.Серии[0]
			//		, СуммаПлан
			//		, Неопределено
			//		, Рез.ТипПлана + " "+СуммаПлан);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту
				, НДиаг.Серии[0]
				, СуммаФакт
				, Неопределено
				, "Факт. продажи" + " " + СуммаФакт); 
				
				
			НДиаг.УстановитьЗначение(ТочкаПоФактуБезСтиковиСигарет
				, НДиаг.Серии[0]
				, СуммаФактПоВсемГруппам
				, Неопределено
				, "Факт. продажи без стиков и сиг-т" + " " + СуммаФактПоВсемГруппам);  

			НДиаг.УстановитьЗначение(ТочкаСуммаБонуса
				, НДиаг.Серии[0]
				, СуммаБонуса
				, Неопределено
				, "Сумма премии" + " " + СуммаБонуса); 			
				
				
			//НДиаг.УстановитьЗначение(ТочкаПоПлану_День
			//		, НДиаг.Серии[0]
			//		, СуммаПлан_Смена
			//		, Неопределено
			//		, Рез.ТипПлана + " "+СуммаПлан_Смена);
			

			Если НачалоМесяца(ТекущаяДата()) = НачалоМесяца(Период) тогда
				НДиаг.УстановитьЗначение(ТочкаПоФакту_День
					, НДиаг.Серии[0]
					, СуммаФактДень
					, Неопределено
					, "Факт. продажи" + " " + СуммаФактДень);
					
				НДиаг.УстановитьЗначение(ТочкаПоФактуБезСтиковиСигарет_День
					, НДиаг.Серии[0]
					, СуммаФактПоВсемГруппам_День
					, Неопределено
					, "Факт. продажи без стиков и сиг-т сегодня" + " " + СуммаФактПоВсемГруппам_День);  

				НДиаг.УстановитьЗначение(ТочкаСуммаБонуса_День
					, НДиаг.Серии[0]
					, СуммаБонуса_День
					, Неопределено
					, "Сумма премии" + " " + СуммаБонуса_День);
			КонецЕсли;
				
				
				
			НДиаг.ОтображатьЛегенду			=   Ложь;	 		
			НДиаг.ВидПодписей				=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МаксимальноеЗначение		=	СуммаФакт + СуммаФакт/10;
			НДиаг.МинимальноеЗначение		=	-0.01; 

			Ном	=	Ном+1;
		КонецЦикла;
	КонецЕсли;;   	  
	
	флПостроенаПлановаяЛичная	=	Истина;	
КонецПроцедуры

//не исп
Функция ПолучитьСуммуФактПоВсемГруппам(Продавец_, НачалоПериода = Неопределено)  
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов");
	Рез = Запрос.Выполнить().Выгрузить();  	
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Продавец = &Продавец
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)");
		
		
	Если НачалоПериода = Неопределено тогда
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	иначе
		Запрос.УстановитьПараметр("ДатаНач",НачалоПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Продавец",Продавец_);
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
	Рез = Запрос.Выполнить().Выбрать();
	Если рез.Следующий() тогда
		Возврат рез.СуммаЧеки;
	иначе
		Возврат 0;
	КонецЕсли; 	
	
КонецФункции   
//

Функция ПолучитьСуммуФактПоВсемГруппамПоПродавцам()  
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов");
	Рез = Запрос.Выполнить().Выгрузить();  
	
		
	Если ВариантМотивации = 2 тогда
		НовСтр	=	Рез.Добавить();
		НовСтр.Номенклатура	=	Справочники.Номенклатура.НайтиПоКоду("00048205244");// сопутствующие товары
	КонецЕсли;

	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧеки,
	      	 	             |	ЧекККМТовары.Продавец КАК Продавец,
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.Дата >= &ТекДень
	      	 	             |					ТОГДА ВЫБОР
	      	 	             |							КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |								ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |							ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |						КОНЕЦ
	      	 	             |				ИНАЧЕ 0
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧекиСегодня
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ЧекККМТовары.Продавец");
		
		
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ТекДень",НачалоДня(ТекущаяДата())); 
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Возврат Запрос.Выполнить().Выгрузить();
	//Рез = Запрос.Выполнить().Выбрать();
	//Если рез.Следующий() тогда
	//	Возврат рез.СуммаЧеки;
	//иначе
	//	Возврат 0;
	//КонецЕсли; 	
	
КонецФункции

#КонецОбласти

#Область ФокуснаяМотивация

Процедура ЗаполнитьВариантФокуснойМотивации()
	Элементы.Фокусная.Видимость	=Истина;
	Элементы.Группа7.Видимость	=Истина;
	Элементы.Основная.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;	
	
	Запрос			=	Новый Запрос("ВЫБРАТЬ
	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
	      			 	             |ПОМЕСТИТЬ ПродавцыСмены
	      			 	             |ИЗ
	      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
	      			 	             |ГДЕ
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
	      			 	             |
	      			 	             |СГРУППИРОВАТЬ ПО
	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
	      			 	             |;
	      			 	             |
	      			 	             |////////////////////////////////////////////////////////////////////////////////
	      			 	             |ВЫБРАТЬ
	      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
	      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
	      			 	             |ИЗ
	      			 	             |	ПродавцыСмены КАК ПродавцыСмены
	      			 	             |
	      			 	             |СГРУППИРОВАТЬ ПО
	      			 	             |	ПродавцыСмены.Продавец");
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

	ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
	НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
	Если НужСтрока= Неопределено тогда 
		НовСтр	=	ТЗПродавцыСмены.Добавить();
		НовСтр.Продавец	=	Продавец;
		НовСтр.КолСмен	=	1;
	иначе
		Если НачалоМесяца(Период) = НачалоМесяца(ТекущаяДата()) тогда
			НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
		КонецЕсли;
	КонецЕсли;

	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, ) КАК ТБКФокуснаяМотивацияСрезПоследних
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Номенклатура");
	ГруппыНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	
	Сч=0;
	Для каждого СтрокаПродавец из  ТЗПродавцыСмены цикл
		ИтогоБонус	=	0;
		
		ТаблицаРасшифровка = Новый ТаблицаЗначений;
		ТаблицаРасшифровка.Колонки.Добавить("ФокусГруппа");
		ТаблицаРасшифровка.Колонки.Добавить("ПланПродаж");
		ТаблицаРасшифровка.Колонки.Добавить("ФактПродаж");
		ТаблицаРасшифровка.Колонки.Добавить("КоличествоСверх");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаФакт");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаСверх");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаПремии");

		
		Для каждого СтрокаГруппа из ГруппыНоменклатуры цикл
			БонусЗаГруппу			=	0;
			СуммаПродажСверхПлана	=	0;
			ТЗКолПродано	=	ПолучитьКоличествоПродажПоГруппе(СтрокаПродавец.Продавец, СтрокаГруппа.Номенклатура);			
			
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.ПланКоличество КАК ПланКоличество,
			      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Процент КАК Процент
			      	 	             |ИЗ
			      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ТБКФокуснаяМотивацияСрезПоследних
			      	 	             |
			      	 	             |УПОРЯДОЧИТЬ ПО
			      	 	             |	ПланКоличество");
			Запрос.УстановитьПараметр("Номенклатура",СтрокаГруппа.Номенклатура);
			резПроценты	=	Запрос.Выполнить().Выбрать();
			резПроценты.Следующий();    
			
			ПланКоличество	=  резПроценты.ПланКоличество ;   
			Процент			=  резПроценты.Процент ;

			Пояснение	=	"Продажи по плану: " + ПланКоличество + " шт. Процент от продаж сверх плана: " + Процент+"%";
			
			
			ИтогоПродано 		= 0;
			ИтогоПроданоСумма	=	0;
			Для каждого Строка из ТЗКолПродано цикл
				ИтогоПродано		=	ИтогоПродано + Строка.Количество; 
				ИтогоПроданоСумма	=	ИтогоПроданоСумма + Строка.Сумма;
				
				Если ИтогоПродано > ПланКоличество тогда
					Разница				= ИтогоПродано - ПланКоличество;
					КНачислению			= Мин(Разница, Строка.Количество); 
					КНачислениюСумма	= (Строка.Сумма /Строка.Количество)*КНачислению ;			
					
					ИтогоБонус				=	ИтогоБонус + КНачислениюСумма/100 * Процент;
					БонусЗаГруппу			=	БонусЗаГруппу + КНачислениюСумма/100 * Процент;
					СуммаПродажСверхПлана	=	СуммаПродажСверхПлана + КНачислениюСумма;
				КонецЕсли; 				
			КонецЦикла; 
			
			НовСтр	=	ТаблицаРасшифровка.Добавить();
			НовСтр.ФокусГруппа					=	СтрокаГруппа.Номенклатура;
			НовСтр.ПланПродаж					=	ПланКоличество;
			НовСтр.ФактПродаж					=	ИтогоПродано;
			НовСтр.КоличествоСверх				=	Макс(НовСтр.ФактПродаж - ПланКоличество,0);
			НовСтр.СуммаФакт					=	ИтогоПроданоСумма;
			НовСтр.СуммаСверх					=	СуммаПродажСверхПлана;
			НовСтр.СуммаПремии					=	БонусЗаГруппу;
			
		КонецЦикла;
		
		Если Сч	=	0 тогда
			ВывестиТаблицу(Элементы.Фокусная, ТаблицаРасшифровка,ИтогоБонус,СтрокаПродавец, сч);			
		иначе
			ВывестиТаблицу(Элементы.Группа7, ТаблицаРасшифровка,ИтогоБонус,СтрокаПродавец, сч);
		КонецЕсли;	
		
		Сч = Сч+1;
	КонецЦикла;
	
	флПостроенаПлановаяЛичная = Истина;
		
КонецПроцедуры

Функция ПолучитьКоличествоПродажПоГруппе(Продавец_, Номенклатура, Сгруппировать = Ложь)  
	
	Если Сгруппировать тогда
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Количество, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Количество, 0)
		      	 	             |			КОНЕЦ), 0) КАК Количество,
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
		      	 	             |			КОНЕЦ), 0) КАК Сумма
		      	 	             |ИЗ
		      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		      	 	             |ГДЕ
		      	 	             |	ЧекККМТовары.Ссылка.Проведен
		      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
		      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
		      	 	             |	И ЧекККМТовары.Продавец = &Продавец
		      	 	             |	И (ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура)
		      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)
		      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2))");
	иначе
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Количество, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Количество, 0)
		      	 	             |			КОНЕЦ), 0) КАК Количество,
		      	 	             |	ЧекККМТовары.Ссылка.Дата КАК Дата,
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
		      	 	             |			КОНЕЦ), 0) КАК Сумма
		      	 	             |ИЗ
		      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		      	 	             |ГДЕ
		      	 	             |	ЧекККМТовары.Ссылка.Проведен
		      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
		      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
		      	 	             |	И ЧекККМТовары.Продавец = &Продавец
		      	 	             |	И (ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура)
		      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)
		      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2))
		      	 	             |
		      	 	             |СГРУППИРОВАТЬ ПО
		      	 	             |	ЧекККМТовары.Ссылка.Дата
		      	 	             |
		      	 	             |УПОРЯДОЧИТЬ ПО
		      	 	             |	Дата");
	КонецЕсли;
		
	Если ПереключательМесяцДень = 0 тогда	
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	иначе
		Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(Период));  	
	КонецЕсли;

	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Продавец",Продавец_);
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);

	////КОСТЫЛИ!!!		
	//Если Номенклатура.Код = "00048205445" тогда //Кальянные табаки
	//	Запрос.УстановитьПараметр("Номенклатура1",Справочники.Номенклатура.НайтиПоКоду("Ю2-00016080")); // Табаки кальянные БК	
	//	Запрос.УстановитьПараметр("Номенклатура2",Справочники.Номенклатура.НайтиПоКоду("Ю2-00016087")); // Кальянные смеси БК
	//	
	//	
	//ИначеЕсли Номенклатура.Код = "Ю2-00010883" тогда // это VapSnow. их нужно объединить с лифтами и отдельной папкой Вап Сноу 1600
	//	Запрос.УстановитьПараметр("Номенклатура1",Справочники.Номенклатура.НайтиПоКоду("Ю2-00011062")); // VapSnow 1600	
	//	Запрос.УстановитьПараметр("Номенклатура2",Справочники.Номенклатура.НайтиПоКоду("Ю2-00014079")); // Лифт
	//	
	//	
	//ИначеЕсли Номенклатура.Код = "00046104688" тогда //Зажигалки разные блочная упаковка. Нужно ИСКЛЮЧИТЬ две папки
	//	Запрос.УстановитьПараметр("Номенклатура1",Справочники.Номенклатура.НайтиПоКоду("00048206840")); // Зажигалки (Уценка)	
	//	Запрос.УстановитьПараметр("Номенклатура2",Справочники.Номенклатура.НайтиПоКоду("00048205547")); // Зажигалки газовые Criket
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)","И НЕ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)");
	//	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2)","И НЕ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2)"); 
	//	
	//иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2)","");
	//КонецЕсли;
		
	Рез = Запрос.Выполнить().Выгрузить();
	Возврат рез;
	
КонецФункции


#КонецОбласти

#Область ОбщаяМотивация
&НаСервере
Процедура ЗаполнитьВариантОбщейМотивации()
	Элементы.Переключатель.Видимость	= Ложь;	
	Элементы.Группа3.Видимость			= Ложь;
	Элементы.Группа4.Видимость			= Ложь;
	Элементы.Основная.Видимость			= Истина;
	Элементы.Группа2.Видимость			= Истина; 
	
	
	//1 ЗАПОЛНЯЕМ ПЛАНЫ. Общий, личный, на сегодня. + Общие премии
	ЗаполнитьПланыИОсновныеПремииОбщаяМотивация();
	
	//Заполняем премии. Это проценты о группам товаров
	ЗаполнитьФокусныеПремииОбщаяМотивация();
КонецПроцедуры

Процедура ЗаполнитьПланыИОсновныеПремииОбщаяМотивация()
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период МЕЖДУ &ПериодН И &ПериодК
	      	 	             |	И ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана = ""План ТО""
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	Запрос.УстановитьПараметр("ПериодН", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ПериодК", КонецМесяца(Период));
	Рез = запрос.Выполнить().Выбрать(); 	
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Если рез.Следующий() тогда	
		Если ПереключательМесяцДень = 0 тогда// строим за МЕСЯЦ		
			
			Для Сч = 1 по 2 цикл // 1- общий план, 2 - личный план
				

				Если Сч =1 тогда
					НужЗаголовок		= "Общие показатели магазина";
					НазваниеДиаграммы	= "ПланТО";   
				иначе
					НужЗаголовок		= "Личные показатели";
					НазваниеДиаграммы	= "ПланЛичный"; 
				КонецЕсли;
				
				НДиаг         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
				НДиаг.Заголовок		= НужЗаголовок;
				
				ДобавляемыеРеквизиты = Новый Массив;
				ДобавляемыеРеквизиты.Добавить(НДиаг);  	
				ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

				Диаг 						= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа6);		
				Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
				Диаг.ПутьКДанным			= НазваниеДиаграммы;
				Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;
				//Диаг.Ширина					= 15;
				Диаг.Высота					= 17;
				НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
				НДиаг.Серии.Добавить("План");

				//определяем точки
				ТочкаПоПлану = НДиаг.УстановитьТочку("План");
				
				Если ПереключательМесяцДень = 0 и  Сч = 1 тогда 
					ТочкаПоПлану_Сегодня 				= НДиаг.УстановитьТочку("План_НаСегодня");		
					ТочкаПоПлану_Сегодня.текст			=	"План на сегодня";
					ТочкаПоПлану_Сегодня.ПриоритетЦвета	=	Истина;  
				КонецЕсли; 
				
				ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
				
				ТочкаПоФакту.ПриоритетЦвета	= Истина;   		
				ТочкаПоПлану.ПриоритетЦвета	= Истина;	
				ТочкаПоПлану.Цвет			= WebЦвета.КоролевскиГолубой;					
				
				
				//Заполняем точки значениями
				КолДнейВМесяце	=	День(КонецМесяца(Период));

				Если Месяц(ТекущаяДата()) = Месяц(Период) и Год(ТекущаяДата()) = Год(Период) тогда
					КолДней	=	День(ТекущаяДата());
				иначе
					КолДней	=	КолДнейВМесяце;
				КонецЕсли;
				
				Если Сч=1 тогда
					СуммаФакт	=	ПолучитьСуммуФактПоТипуПлана("План ТО");
					СуммаПлана	=	Рез.Сумма;
					
				иначе
					Если КоличествоСмен >0 тогда
						СуммаПлана	=	Окр((Рез.Сумма/КолДнейВМесяце) * КоличествоСмен,0);	
					иначе
						СуммаПлана	=	0;
					КонецЕсли;
					СуммаФакт		=	ПолучитьСуммуФактПоТипуПлана("План личный"); 
					СуммаОтставание	=	Макс(0, СуммаПлана - СуммаФакт); 					
				КонецЕсли;   				
				ТочкаОтставание	= 	НДиаг.УстановитьТочку("Отставание");					
				
				Если СуммаФакт >  СуммаПлана тогда	
					ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
				иначе
					ТочкаПоФакту.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
				КонецЕсли;
				
				Если СуммаПлана>0 тогда 
					ПроцентВыполнения	=	Окр((СуммаФакт / СуммаПлана) * 100,2);
				иначе
					ПроцентВыполнения	=	0;
				КонецЕсли;
				
				Если Сч=1 тогда
					НДиаг.УстановитьЗначение(ТочкаПоПлану
							, НДиаг.Серии[0]
							, СуммаПлана
							, Неопределено
							, Рез.ТипПлана + " "+СуммаПлана);
				Иначе
					НДиаг.УстановитьЗначение(ТочкаПоПлану
							, НДиаг.Серии[0]
							, СуммаПлана
							, Неопределено
							, "План дня * кол.смен "); 	
				КонецЕсли;
								
						
				Если ПереключательМесяцДень = 0 и  Сч = 1 тогда 
					СуммаПланНаСегодня	=	Окр(СуммаПлана / КолДнейВМесяце,2);
					СуммаПланНаСегодня	=	Окр(СуммаПланНаСегодня *  КолДней,0);
					СуммаОтставание		=	Макс(0, СуммаПланНаСегодня - СуммаФакт);					
					
					НДиаг.УстановитьЗначение(ТочкаПоПлану_Сегодня
						, НДиаг.Серии[0]
						, СуммаПланНаСегодня
						, Неопределено
						, Рез.ТипПлана + "(на сег.день) "+ СуммаПланНаСегодня);
						
					Если СуммаФакт >  СуммаПланНаСегодня тогда	
						ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
					иначе
						ТочкаПоФакту.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
					КонецЕсли;  
					
					
					//ВЫВОД ОТЛДЕЛЬНОЙ ДИАГРАММЫ ПО СРЕДНИМ ЗНАЧЕНИЯМ (личная просьба от админов)		
					НазваниеДиаграммы	= "ПланСреднее";
					НДиаг1         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
					НДиаг1.Заголовок		= "Средние показатели магазина";
					
					ДобавляемыеРеквизиты = Новый Массив;
					ДобавляемыеРеквизиты.Добавить(НДиаг1);  	
					ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

					Диаг 						= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа6);		
					Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
					Диаг.ПутьКДанным			= НазваниеДиаграммы;
					Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;
					//Диаг.Ширина					= 15;

					НДиаг1	=	ЭтаФорма[НазваниеДиаграммы];
					НДиаг1.Серии.Добавить("ПланСреднее");

					
					ТочкаПланСреднее = НДиаг1.УстановитьТочку("План дня");				
					ТочкаФактСреднее = НДиаг1.УстановитьТочку("Факт среднего дня");
					ТочкаПрогноз 	 = НДиаг1.УстановитьТочку("Прогноз");
										
					СумамПланСреднее	=	Окр(СуммаПлана/КолДнейВМесяце,0);
					СумамФактСреднее	=	Окр(СуммаФакт/День(ТекущаяДата()),0);
					Если КолДнейВМесяце <> КолДней тогда
						СумамПрогноз		=	Макс( Окр((СуммаПлана - СуммаФакт) / (КолДнейВМесяце - КолДней),0), СумамПланСреднее);
					иначе
						СумамПрогноз	=	0;
					КонецЕсли;
					
					Если КолДнейВМесяце <> КолДней тогда  
						Если СумамПрогноз > СумамФактСреднее тогда
							Заголовок	=	"Добрый День! Нужно поднажать!";
						иначе
							Заголовок	=	"Добрый День! Вы отлично потрудились!";
						КонецЕсли;
					иначе
						Заголовок	=	"Добрый День!";
					КонецЕсли;
						
					
					ТочкаПланСреднее.ПриоритетЦвета	= Истина;   		
					ТочкаФактСреднее.ПриоритетЦвета	= Истина;	
					//ТочкаПрогноз.ПриоритетЦвета		= Истина;	

					ТочкаПланСреднее.Цвет = WebЦвета.КоролевскиГолубой; 
					Если СумамФактСреднее >  СумамПланСреднее тогда	
						ТочкаПланСреднее.Цвет	=	WebЦвета.ЗеленаяЛужайка;
					иначе
						ТочкаПоФакту.Цвет		=	WebЦвета.БледноКрасноФиолетовый;
					КонецЕсли; 
					
					
					
					НДиаг1.УстановитьЗначение(ТочкаПланСреднее
						, НДиаг1.Серии[0]
						, СумамПланСреднее
						, Неопределено
						, "План на день " + СумамПланСреднее);  
					
					
				  	НДиаг1.УстановитьЗначение(ТочкаФактСреднее
						, НДиаг1.Серии[0]
						, СумамФактСреднее
						, Неопределено
						, "Факт среднего дня " + СумамФактСреднее); 
						
					 НДиаг1.УстановитьЗначение(ТочкаПрогноз
						, НДиаг1.Серии[0]
						, СумамПрогноз
						, Неопределено
						, "Нужно делать в день: " + СумамПрогноз);
						
					НДиаг1.ОтображатьЛегенду	= Ложь;	 		
					НДиаг1.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
					НДиаг1.АвтоМаксимальноеЗначение	=	Ложь;
					НДиаг1.АвтоМинимальноеЗначение	=	Ложь;
					НДиаг1.МинимальноеЗначение		=	0; 
				КонецЕсли;
				
				Если Сч=1 тогда
					НДиаг.УстановитьЗначение(ТочкаПоФакту
						, НДиаг.Серии[0]
						, СуммаФакт
						, Неопределено
						, "Сумма факт "+СуммаФакт);
				Иначе
					НДиаг.УстановитьЗначение(ТочкаПоФакту
						, НДиаг.Серии[0]
						, СуммаФакт
						, Неопределено
						, "Сумма факт за отработанные смены");
				КонецЕсли;
					
				Если ПереключательМесяцДень = 0 тогда
					НДиаг.УстановитьЗначение(ТочкаОтставание
						, НДиаг.Серии[0]
						, СуммаОтставание
						, Неопределено
						, "Отставание "+СуммаОтставание);
		
				КонецЕсли;
				
				НДиаг.ОтображатьЛегенду	= Ложь;	 		
				НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
				НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
				НДиаг.АвтоМинимальноеЗначение	=	Ложь;
				НДиаг.МаксимальноеЗначение		=	Макс(СуммаПлана, СуммаФакт) + СуммаПлана/10;
				НДиаг.МинимальноеЗначение		=	-0.01; 
			КонецЦикла;
			
			
		иначе //СТРОИМ ЗА ДЕНЬ
			НазваниеДиаграммы	=	"ПланТОДень";
			НДиаг         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
			НДиаг.Заголовок		= "Показатели за " + Формат(Период,"ДЛФ=DD");
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Диаг 						= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа6);		
			Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным			= НазваниеДиаграммы;
			Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;
			//Диаг.Ширина					= 15;
			Диаг.Высота						= 17;
			НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
			НДиаг.Серии.Добавить("План");

			//определяем точки
			ТочкаПоПлану 	= НДиаг.УстановитьТочку("План");			
			ТочкаПоФакту 	= НДиаг.УстановитьТочку("Факт");
			ТочкаОтставание = НДиаг.УстановитьТочку("Отставание");

			
			ТочкаПоФакту.ПриоритетЦвета	= Истина;   		
			ТочкаПоПлану.ПриоритетЦвета	= Истина;	
			ТочкаПоПлану.Цвет			= WebЦвета.КоролевскиГолубой; 
			
			ТочкаПоФактуЛичная = НДиаг.УстановитьТочку("Факт личный");
			ТочкаПоФактуЛичная.ПриоритетЦвета	= Истина;   		

			//Заполняем точки значениями
			КолДней			=	День(Период);
			КолДнейВМесяце	=	День(КонецМесяца(Период));
				
			СуммаПлана	=	Окр((Рез.Сумма/КолДнейВМесяце) ,0);	
			
			СуммаФактОбщий	=	ПолучитьСуммуФактПоТипуПлана("План ТО", Истина); 
			СуммаОтставание	=	Макс(СуммаПлана - СуммаФактОбщий, 0);
			СуммаФактЛичный	=	ПолучитьСуммуФактПоТипуПлана("План личный", Истина);
			
			
			
			Если СуммаФактОбщий >  СуммаПлана тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
			КонецЕсли;
			
			ПроцентВыполнения		=	Окр((СуммаФактОбщий / СуммаПлана) * 100,2);
			
			Если СуммаФактОбщий >0 тогда
				//ПроцентВыполненияЛичный	=	Окр((СуммаФактЛичный / СуммаФактОбщий) * 100,2);
				ПроцентВыполненияЛичный	=	Окр((СуммаФактЛичный / СуммаПлана) * 100,2);
			иначе
				ПроцентВыполненияЛичный	=	0;
			КонецЕсли;
			
			НДиаг.УстановитьЗначение(ТочкаПоПлану
					, НДиаг.Серии[0]
					, СуммаПлана
					, Неопределено
					, Рез.ТипПлана + " "+СуммаПлана);
									
									
			НДиаг.УстановитьЗначение(ТочкаПоФакту
				, НДиаг.Серии[0]
				, СуммаФактОбщий
				, Неопределено
				, "Факт общий" + " " + СуммаФактОбщий + "; Процент выполнения:"+ПроцентВыполнения+"%");  
			
			НДиаг.УстановитьЗначение(ТочкаОтставание
				, НДиаг.Серии[0]
				, СуммаОтставание
				, Неопределено
				, "Отставание: "+СуммаОтставание);
				
				
			НДиаг.УстановитьЗначение(ТочкаПоФактуЛичная
				, НДиаг.Серии[0]
				, СуммаФактЛичный
				, Неопределено
				, "Факт личный" + " " + СуммаФактЛичный + "; Процент выполнения:"+ПроцентВыполненияЛичный+"%");  

				
				
			НДиаг.ОтображатьЛегенду	= Ложь;	 		
			НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МаксимальноеЗначение		=	Макс(СуммаПлана, СуммаФактОбщий) + СуммаПлана/10;
			НДиаг.МинимальноеЗначение		=	-0.01; 
		КонецЕсли;
	КонецЕсли;
	
	//ОБЩИЕ ПРЕМИИ
	ТЗ_Премии	=	ПолучитьСуммуФактПоОсновнымГруппамПоПродавцу(Продавец, ПереключательМесяцДень, Период);	
	
	СтрокаПремииВейп		=	ТЗ_Премии.найти("Электронка");
	Если СтрокаПремииВейп <> Неопределено тогда
		СуммаПремииВейп	=	Окр(СтрокаПремииВейп.СуммаОборот,0);
	иначе
		СуммаПремииВейп	=	0; 
	КонецЕсли;
	
	СтрокаПремииТабак		=	ТЗ_Премии.найти("Табачная продукция");
	Если СтрокаПремииТабак <> Неопределено тогда
		СуммаПремииТабак	=	Окр(СтрокаПремииТабак.СуммаОборот,0);
	иначе
		СуммаПремииТабак	=	0; 
	КонецЕсли;

	
	СтрокаПремииСувениры		=	ТЗ_Премии.найти("Подарки и сувениры");
	Если СтрокаПремииСувениры <> Неопределено тогда
		СуммаПремииСувениры	=	Окр(СтрокаПремииСувениры.СуммаОборот,0);
	иначе
		СуммаПремииСувениры	=	0; 
	КонецЕсли;

	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	

	НазваниеДиаграммы	=	"ПланПремии";
	НДиаг         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
	НДиаг.Заголовок		= "Премии по основным группам: "+(СуммаПремииВейп+СуммаПремииТабак+СуммаПремииСувениры);
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(НДиаг);  	
	ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

	Диаг 						= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа6);		
	Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
	Диаг.ПутьКДанным			= НазваниеДиаграммы;
	Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;
	//Диаг.Ширина					= 15;
	
	НДиаг				=	ЭтаФорма[НазваниеДиаграммы];
	НДиаг.ТипДиаграммы	=	ТипДиаграммы.ГистограммаСНакоплениемОбъемная;

	НДиаг.Серии.Добавить("Вэйп");
	НДиаг.Серии.Добавить("Табак");
	НДиаг.Серии.Добавить("Сувениры");
	
	НДиаг.Серии[0].Цвет	=	WebЦвета.Красный;
	НДиаг.Серии[1].Цвет	=	WebЦвета.КоролевскиГолубой;
	НДиаг.Серии[2].Цвет	=	WebЦвета.Бежевый; 	  	
	
	ТочкаСуммаПремии 		= НДиаг.УстановитьТочку("Премии");

	НДиаг.УстановитьЗначение(ТочкаСуммаПремии
					, НДиаг.Серии[0]
					, СуммаПремииВейп
					, Неопределено
					, "Премия вэйп " + СуммаПремииВейп);
					
	НДиаг.УстановитьЗначение(ТочкаСуммаПремии
					, НДиаг.Серии[1]
					, СуммаПремииТабак
					, Неопределено
					, "Премия табак " + СуммаПремииТабак);
					
	НДиаг.УстановитьЗначение(ТочкаСуммаПремии
					, НДиаг.Серии[2]
					, СуммаПремииСувениры
					, Неопределено
					, "Премия сувениры " + СуммаПремииСувениры);

	ИтогоПремии = СуммаПремииВейп + СуммаПремииТабак + СуммаПремииСувениры;		
	
	Элементы.Итого.Заголовок	=	"Итого: "+ ИтогоПремии;
КонецПроцедуры

Процедура ЗаполнитьФокусныеПремииОбщаяМотивация()
	//ФОКУСНАЯ	
	ИтогоПремииФокус	=	0;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.ПланКоличество КАК ПланКоличество,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Процент КАК Процент,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Сумма КАК Сумма,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.СверхПлана КАК СверхПлана,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Тип КАК Тип
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, ) КАК ТБКФокуснаяМотивацияСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Период МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.ПланКоличество,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Процент,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Сумма,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.СверхПлана,
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Тип
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ПланКоличество УБЫВ");
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));

	ГруппыНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРасшифровка = Новый ТаблицаЗначений;
	ТаблицаРасшифровка.Колонки.Добавить("ФокусГруппа",,		"Группа");
	ТаблицаРасшифровка.Колонки.Добавить("ПланПродаж",,		"План");
	ТаблицаРасшифровка.Колонки.Добавить("ФактПродаж",,		"Факт");
	ТаблицаРасшифровка.Колонки.Добавить("КоличествоСверх",,	"Количество сверх плана");
	ТаблицаРасшифровка.Колонки.Добавить("СуммаФакт",,		"Сумма факт");
	ТаблицаРасшифровка.Колонки.Добавить("СуммаСверх",,		"Сумма сверх плана");
	ТаблицаРасшифровка.Колонки.Добавить("СуммаПремии",,		"Сумма премии");
	ТаблицаРасшифровка.Колонки.Добавить("Заголовок",,		"Заголовок");
	
	Для каждого СтрокаГруппа из ГруппыНоменклатуры цикл
		ЗапросН	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Номенклатура КАК Номенклатура
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, ) КАК ТБКФокуснаяМотивацияСрезПоследних
		      	 	             |ГДЕ
		      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Период МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И ТБКФокуснаяМотивацияСрезПоследних.Тип = &Тип");
		ЗапросН.УстановитьПараметр("Тип",СтрокаГруппа.Тип);
		ЗапросН.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		ЗапросН.УстановитьПараметр("ДатаКон",КонецМесяца(Период));

		РезН	=	ЗапросН.Выполнить().Выгрузить();
		МассивНоменклатуры	=	РезН.ВыгрузитьКолонку("Номенклатура");
		
		
		БонусЗаГруппу			=	0;
		СуммаПродажСверхПлана	=	0;
		 
		
		ПланКоличество		=  СтрокаГруппа.ПланКоличество;   
		ПроцентПремии		=  СтрокаГруппа.Процент;
		СуммаПремии			=  СтрокаГруппа.Сумма;
		
		ИтогоПродано 		= 0;
		ИтогоПроданоСумма	= 0;
		
		Если СтрокаГруппа.СверхПлана тогда   //только за то что сверх плана
			ТЗПродано	=	ПолучитьКоличествоПродажПоГруппе(Продавец, МассивНоменклатуры);			

			Для каждого Строка из ТЗПродано цикл
				ИтогоПродано		=	ИтогоПродано 		+ Строка.Количество; 
				ИтогоПроданоСумма	=	ИтогоПроданоСумма 	+ Строка.Сумма;
				
				
				Если ИтогоПродано > ПланКоличество тогда
					Разница				= ИтогоПродано - ПланКоличество;
						
					КНачислению			= Мин(Разница, Строка.Количество); 
					СуммаПродажСверхПлана	=	0;
					
					Если ПроцентПремии>0  тогда    
						КНачислениюСумма		=   (Строка.Сумма /Строка.Количество)*КНачислению ;			
						ИтогоПремииФокус		=	ИтогоПремииФокус   		+ КНачислениюСумма/100 * ПроцентПремии;
						БонусЗаГруппу			=	БонусЗаГруппу 			+ КНачислениюСумма/100 * ПроцентПремии;
						СуммаПродажСверхПлана	=	СуммаПродажСверхПлана 	+ КНачислениюСумма;
					иначе
						ИтогоПремииФокус		=	ИтогоПремииФокус   		+ КНачислению * СуммаПремии;
						БонусЗаГруппу			=	БонусЗаГруппу 			+ КНачислению * СуммаПремии;
						СуммаПродажСверхПлана	=	СуммаПродажСверхПлана 	+ (Строка.Сумма /Строка.Количество) * КНачислению;
					КонецЕсли;
					
				КонецЕсли;				
			КонецЦикла; 
			
			Если ПроцентПремии>0  тогда    
				НужЗаголовок	=	"Процент премии на сумму сверх плана. "+ Символы.ПС +СуммаПродажСверхПлана +" * "+ ПроцентПремии+"% = "+БонусЗаГруппу;
			иначе
				НужЗаголовок	=	Строка(СуммаПремии) + " за каждую проданную штуку сверх плана. "+ Символы.ПС  + Макс(ИтогоПродано - ПланКоличество,0) + " * " +СуммаПремии + " = "+БонусЗаГруппу;
			КонецЕсли;
			
			НовСтр	=	ТаблицаРасшифровка.Добавить();
			НовСтр.Заголовок					=	НужЗаголовок;
			НовСтр.ФокусГруппа					=	СтрокаГруппа.Тип;
			//Если СтрокаГруппа.Номенклатура.Код = "00046104688" тогда
			//	НовСтр.ФокусГруппа					=	"Зажигалки";
			//	
			//ИначеЕсли СтрокаГруппа.Номенклатура.Код = "Ю2-00010883" тогда
			//	НовСтр.ФокусГруппа					=	"Наши СТМ";
			//КонецЕсли;
			
			НовСтр.ПланПродаж					=	ПланКоличество;
			НовСтр.ФактПродаж					=	ИтогоПродано;
			НовСтр.КоличествоСверх				=	Макс(НовСтр.ФактПродаж - ПланКоличество,0);
			НовСтр.СуммаФакт					=	ИтогоПроданоСумма;
			НовСтр.СуммаСверх					=	СуммаПродажСверхПлана;
			НовСтр.СуммаПремии					=	БонусЗаГруппу;
			
		иначе //начисляем за все
			ТЗПродано	=	ПолучитьКоличествоПродажПоГруппе(Продавец,МассивНоменклатуры, Истина);			
			
			Если ТЗПродано.количество() > 0 тогда
				ИтогоПродано		=	ТЗПродано[0].Количество; 
				ИтогоПроданоСумма	=	ТЗПродано[0].Сумма;				
			КонецЕсли; 
			
			Если ИтогоПродано > ПланКоличество тогда
				
				Если ПроцентПремии>0  тогда    
					КНачислениюСумма		=   (ИтогоПроданоСумма/100)	 * ПроцентПремии;			
					ИтогоПремииФокус		=	ИтогоПремииФокус   		 + КНачислениюСумма;
					БонусЗаГруппу			=	БонусЗаГруппу			 + КНачислениюСумма; 					
				иначе 					
					ИтогоПремииФокус		=	ИтогоПремииФокус    + ИтогоПродано * СуммаПремии;
					БонусЗаГруппу			=	БонусЗаГруппу 		+ ИтогоПродано * СуммаПремии;
				КонецЕсли;
			КонецЕсли;  			
			
			Если ПроцентПремии>0  тогда    
				НужЗаголовок	=	"Процент премии на сумму продаж. "+ Символы.ПС +ИтогоПроданоСумма + " * "+ ПроцентПремии+"% = "+ БонусЗаГруппу;
			иначе
				НужЗаголовок	=	Строка(СуммаПремии) + " за каждую проданную штуку. "+ Символы.ПС + ИтогоПродано + " * " +СуммаПремии + " = "+БонусЗаГруппу;
			КонецЕсли;  

			
			НовСтр	=	ТаблицаРасшифровка.Добавить();
			НовСтр.ФокусГруппа					=	СтрокаГруппа.Тип;
			НовСтр.Заголовок					=	НужЗаголовок;
			//Если СтрокаГруппа.Номенклатура.Код = "00046104688" тогда
			//	НовСтр.ФокусГруппа					=	"Зажигалки";
			//	
			//ИначеЕсли СтрокаГруппа.Номенклатура.Код = "Ю2-00010883" тогда
			//	НовСтр.ФокусГруппа					=	"Наши СТМ";
			//КонецЕсли;

			НовСтр.ПланПродаж					=	ПланКоличество;
			НовСтр.ФактПродаж					=	ИтогоПродано;
			//НовСтр.КоличествоСверх				=	ИтогоПродано;
			НовСтр.СуммаФакт					=	ИтогоПроданоСумма;
			//НовСтр.СуммаСверх					=	ИтогоПроданоСумма;
			НовСтр.СуммаПремии					=	БонусЗаГруппу;
	
		КонецЕсли;
		
	КонецЦикла;
	
	//ОТДЕЛЬНО УЦЕНКА
	СтруктураДанныхУценка	=	ПолучитьДанныеПоУценке(ПереключательМесяцДень, Период);  
	
	НовСтр	=	ТаблицаРасшифровка.Добавить();
	
	НужЗаголовок	=	"Процент премии на сумму продаж. " + Символы.ПС + СтруктураДанныхУценка.СуммаТабак + " * 10% = "+ СтруктураДанныхУценка.ПремияТабак;
	НовСтр.Заголовок					=	НужЗаголовок;
	НовСтр.ФокусГруппа					=	"Табак (Уценка)";
	НовСтр.ПланПродаж					=	0;
	НовСтр.ФактПродаж					=	СтруктураДанныхУценка.ПроданоТабак;
	//НовСтр.КоличествоСверх				=	НовСтр.ФактПродаж;
	НовСтр.СуммаФакт					=	СтруктураДанныхУценка.СуммаТабак;
	//НовСтр.СуммаСверх					=	СтруктураДанныхУценка.СуммаТабак;
	НовСтр.СуммаПремии					=	СтруктураДанныхУценка.ПремияТабак;
	
	НовСтр	=	ТаблицаРасшифровка.Добавить();
	НужЗаголовок	=	"Процент премии на сумму продаж. " + Символы.ПС +СтруктураДанныхУценка.СуммаСувениры + " * 20% = "+ СтруктураДанныхУценка.ПремияСувениры;
	НовСтр.Заголовок					=	НужЗаголовок;
	НовСтр.ФокусГруппа					=	"Сувениры (Уценка)";
	НовСтр.ПланПродаж					=	0;
	НовСтр.ФактПродаж					=	СтруктураДанныхУценка.ПроданоСувениры;
	//НовСтр.КоличествоСверх				=	НовСтр.ФактПродаж;
	НовСтр.СуммаФакт					=	СтруктураДанныхУценка.СуммаСувениры;
	//НовСтр.СуммаСверх					=	СтруктураДанныхУценка.СуммаСувениры;
	НовСтр.СуммаПремии					=	СтруктураДанныхУценка.ПремияСувениры; 
	
	ИтогоПремииФокус					=	ИтогоПремииФокус + СтруктураДанныхУценка.ПремияСувениры + СтруктураДанныхУценка.ПремияТабак;
	//      
	
	Если ПереключательТаблицаДиаграмма = 0 тогда
		ВывестиТаблицу(Элементы.Группа9, ТаблицаРасшифровка, ИтогоПремииФокус, Продавец, 0);			
	иначе
		//ВЫВОД В ВИДЕ ДИАГРАММ. ФОКУСНАЯ МОТИВАЦИЯ
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Диаграмма"));
		ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	

		СЧ = 0;
		Для каждого СтрокаТЗ из ТаблицаРасшифровка цикл   
			НазваниеДиаграммы	=	"ПланФокусДиаграмма" + СЧ;
			НДиаг         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
			НДиаг.Заголовок		= Строка(СтрокаТЗ.ФокусГруппа) +Символы.ПС+ "Премия: " + СтрокаТЗ.СуммаПремии;

			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Если СЧ<5 Тогда  // максимум 5 диаграмм в каждой группе
				НужГруппа	=	Элементы.ФокусДиаграммы1;
			ИначеЕсли СЧ<10 Тогда
				НужГруппа	=	Элементы.ФокусДиаграммы2;
			ИначеЕсли СЧ<15 Тогда
				НужГруппа	=	Элементы.ФокусДиаграммы3;
			ИначеЕсли СЧ<20 Тогда
				НужГруппа	=	Элементы.ФокусДиаграммы4; 
			КонецЕсли;
			
			Диаг 							= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), НужГруппа);		
			Диаг.Вид						= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным				= НазваниеДиаграммы;
			Диаг.ЦветТекстаЗаголовка		= WebЦвета.Синий;
			//Диаг.Ширина						= 30;
			Диаг.РастягиватьПоГоризонтали	= Ложь;

			НДиаг				=	ЭтаФорма[НазваниеДиаграммы];
			//НДиаг.ТипДиаграммы	=	ТипДиаграммы.ГистограммаГоризонтальнаяОбъемная;
			НДиаг.Серии.Добавить("План");
			
			//определяем точки
			Если СтрокаТЗ.ПланПродаж >0 тогда
				ТочкаКолПлан = НДиаг.УстановитьТочку("План");	
				ТочкаКолПлан.ПриоритетЦвета	= Истина;   		
				ТочкаКолПлан.Цвет	=	WebЦвета.КоролевскиГолубой;  

				НДиаг.УстановитьЗначение(ТочкаКолПлан
					, НДиаг.Серии[0]
					, СтрокаТЗ.ПланПродаж
					, Неопределено
					, СтрокаТЗ.ПланПродаж);
					
					
			КонецЕсли;
				
			ТочкаКолФакт = НДиаг.УстановитьТочку("Продажи");						
			ТочкаКолФакт.ПриоритетЦвета	= Истина;   		
			ТочкаКолФакт.Цвет	=	WebЦвета.БледноКрасноФиолетовый;  

			Если Найти(СтрокаТЗ.Заголовок,"Процент премии") тогда // выводим Сумму
				ТочкаКолФакт.Текст			=	"Сумма продаж";

				НДиаг.УстановитьЗначение(ТочкаКолФакт
					, НДиаг.Серии[0]
					, СтрокаТЗ.СуммаФакт
					, Неопределено
					, Сред(СтрокаТЗ.Заголовок,Найти(СтрокаТЗ.Заголовок, Символы.ПС)+1));	
			иначе
				ТочкаКолФакт.Текст			=	"Продажи шт.";

				НДиаг.УстановитьЗначение(ТочкаКолФакт
					, НДиаг.Серии[0]
					, СтрокаТЗ.ФактПродаж
					, Неопределено
					, Сред(СтрокаТЗ.Заголовок,Найти(СтрокаТЗ.Заголовок, Символы.ПС)+1));
			КонецЕсли;
					

			Сч = Сч+1;
			
			НДиаг.ОтображатьЛегенду	= Ложь;	 		
			НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МинимальноеЗначение		=	0; 
			НДиаг.МаксимальноеЗначение		=	СтрокаТЗ.ФактПродаж +1; 

		КонецЦикла; 	
	КонецЕсли;	

	Элементы.ИтогоФокус.Заголовок	=	"Итого: "+ ИтогоПремииФокус;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьСуммуФактПоОсновнымГруппамПоПродавцу(Продавец, ПереключательМесяцДень, Период)
	запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ТБКПремииПоЧекамОбороты.Продавец КАК Продавец,
	      	 	             |	СУММА(ТБКПремииПоЧекамОбороты.СуммаОборот) КАК СуммаОборот,
	      	 	             |	ТБКПремииПоЧекамОбороты.Группа КАК Группа
	      	 	             |ИЗ
	      	 	             |	РегистрНакопления.ТБКПремииПоЧекам.Обороты(&ДатаНач, &ДатаКон, , Продавец = &Продавец) КАК ТБКПремииПоЧекамОбороты
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ТБКПремииПоЧекамОбороты.Продавец,
	      	 	             |	ТБКПремииПоЧекамОбороты.Группа");
	
	Если ПереключательМесяцДень = 0 тогда	
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	иначе
		Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Период));
		Запрос.УстановитьПараметр("ДатаКон",КонецДня(Период));  	
	КонецЕсли;
	Запрос.УстановитьПараметр("Продавец",		Продавец);	
	
	
	Возврат Запрос.Выполнить().Выгрузить();

	
	
	//ЗапросНоменклатура	=	Новый Запрос("ВЫБРАТЬ
	//      	 	             |	ВЫБОР
	//      	 	             |		КОГДА ТБКГруппыИПроцентыДляПремийОбщаяМотивацияСрезПоследних.ТипГруппы = &ТипГруппы
	//      	 	             |			ТОГДА ТБКГруппыИПроцентыДляПремийОбщаяМотивацияСрезПоследних.Номенклатура
	//      	 	             |	КОНЕЦ КАК Номенклатура,
	//      	 	             |	ТБКГруппыИПроцентыДляПремийОбщаяМотивацияСрезПоследних.Процент КАК Процент
	//      	 	             |ИЗ
	//      	 	             |	РегистрСведений.ТБКГруппыИПроцентыДляПремийОбщаяМотивация.СрезПоследних КАК ТБКГруппыИПроцентыДляПремийОбщаяМотивацияСрезПоследних");
	//
	//Запрос	=	Новый Запрос("ВЫБРАТЬ
	//      	 	             |	ВЫБОР
	//      	 	             |		КОГДА ПродажиОбороты.Номенклатура В ИЕРАРХИИ (&НоменклатураВэйп)
	//      	 	             |			ТОГДА ПродажиОбороты.СтоимостьОборот
	//      	 	             |		ИНАЧЕ 0
	//      	 	             |	КОНЕЦ КАК СуммаВэйп,
	//      	 	             |	ВЫБОР
	//      	 	             |		КОГДА ПродажиОбороты.Номенклатура В ИЕРАРХИИ (&НоменклатураТабак)
	//      	 	             |			ТОГДА ПродажиОбороты.СтоимостьОборот
	//      	 	             |		ИНАЧЕ 0
	//      	 	             |	КОНЕЦ КАК СуммаТабак,
	//      	 	             |	ВЫБОР
	//      	 	             |		КОГДА ПродажиОбороты.Номенклатура В ИЕРАРХИИ (&НоменклатураСувениры)
	//      	 	             |			ТОГДА ПродажиОбороты.СтоимостьОборот
	//      	 	             |		ИНАЧЕ 0
	//      	 	             |	КОНЕЦ КАК СуммаСувениры
	//      	 	             |ПОМЕСТИТЬ итог
	//      	 	             |ИЗ
	//      	 	             |	РегистрНакопления.Продажи.Обороты(
	//      	 	             |			&ДатаНач,
	//      	 	             |			&ДатаКон,
	//      	 	             |			,
	//      	 	             |			Продавец = &Продавец
	//      	 	             |				И (Номенклатура В ИЕРАРХИИ (&НоменклатураВэйп)
	//      	 	             |					ИЛИ Номенклатура В ИЕРАРХИИ (&НоменклатураТабак)
	//      	 	             |					ИЛИ Номенклатура В ИЕРАРХИИ (&НоменклатураСувениры))) КАК ПродажиОбороты
	//      	 	             |;
	//      	 	             |
	//      	 	             |////////////////////////////////////////////////////////////////////////////////
	//      	 	             |ВЫБРАТЬ
	//      	 	             |	СУММА(итог.СуммаВэйп) КАК СуммаВэйп,
	//      	 	             |	СУММА(итог.СуммаТабак) КАК СуммаТабак,
	//      	 	             |	СУММА(итог.СуммаСувениры) КАК СуммаСувениры
	//      	 	             |ИЗ
	//      	 	             |	итог КАК итог");

			
	//Если ПереключательМесяцДень = 0 тогда	
	//	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	//	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	//иначе
	//	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(Период));
	//	Запрос.УстановитьПараметр("ДатаКон",КонецДня(Период));  	
	//КонецЕсли;
	//
	//ЗапросНоменклатура.УстановитьПараметр("ТипГруппы", "Электронка");
	//Запрос.УстановитьПараметр("НоменклатураВэйп", 		ЗапросНоменклатура.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	//
	//ЗапросНоменклатура.УстановитьПараметр("ТипГруппы", "Табачная продукция");
	//Запрос.УстановитьПараметр("НоменклатураТабак", 		ЗапросНоменклатура.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	//
	//ЗапросНоменклатура.УстановитьПараметр("ТипГруппы", "Подарки и сувениры");
	//Запрос.УстановитьПараметр("НоменклатураСувениры", 		ЗапросНоменклатура.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	//

	//Запрос.УстановитьПараметр("СтатусЧекаККМ",	Перечисления.СтатусыЧековККМ.Пробитый);
	//Запрос.УстановитьПараметр("СтатусЧекаККМ1",	Перечисления.СтатусыЧековККМ.Архивный);
	//Запрос.УстановитьПараметр("ВидПродажа",		Перечисления.ВидыОперацийЧекККМ.Продажа);	
	//Запрос.УстановитьПараметр("Продавец",		Продавец);	
	//
	//
	//Рез = Запрос.Выполнить().Выбрать();
	//Если рез.Следующий() тогда
	//	СтруктураВозврата	=	Новый Структура;
	//	СтруктураВозврата.Вставить("СуммаВэйп", 	рез.СуммаВэйп);
	//	СтруктураВозврата.Вставить("СуммаТабак", 	рез.СуммаТабак);
	//	СтруктураВозврата.Вставить("СуммаСувениры", рез.СуммаСувениры);

	//	Возврат СтруктураВозврата;
	//КонецЕсли;
	
КонецФункции

#КонецОбласти



#область ДопФункции
&НаСервереБезКонтекста
Функция ПолучитьКоличествоСмен(Продавец, Период)
	Запрос			=	Новый Запрос("ВЫБРАТЬ
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		      			 	             |ИЗ
		      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      			 	             |ГДЕ
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		      			 	             |;
		      			 	             |
		      			 	             |////////////////////////////////////////////////////////////////////////////////
		      			 	             |ВЫБРАТЬ
		      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		      			 	             |ИЗ
		      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	ПродавцыСмены.Продавец");
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
	Запрос.УстановитьПараметр("Продавец",Продавец);

	ПродавцыСмены	=	Запрос.Выполнить().Выбрать();
	
	КолСмен	=	0;
	Если ПродавцыСмены.Следующий() тогда
		КолСмен	=	ПродавцыСмены.КолСмен;
	КонецЕсли; 
	
	
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ТБКСменыСотрудников.КассоваяСмена КАК КассоваяСмена
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКСменыСотрудников КАК ТБКСменыСотрудников
	      	 	             |ГДЕ
	      	 	             |	ТБКСменыСотрудников.Продавец = &Продавец
	      	 	             |	И ТБКСменыСотрудников.КассоваяСмена.Статус = &Статус
	      	 	             |	И ТБКСменыСотрудников.ТипПродавца = &ТипПродавца");
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыКассовойСмены.Открыта);
	Запрос.УстановитьПараметр("Продавец",Продавец);
	
	ОткрытыеСмены	=	Запрос.Выполнить().Выбрать();

	Если ОткрытыеСмены.Следующий() тогда
		КолСмен	=	КолСмен + 1;
	КонецЕсли; 

	
	Возврат КолСмен;  	
КонецФункции

&НаСервереБезКонтекста
Функция УдалениеНезначимыхСимволов (ВходящаяСтрока) Экспорт 

	ВходящаяСтрока = СокрЛП(ВходящаяСтрока);
    ДлинаСтроки = СтрДлина(ВходящаяСтрока);
    КонечнаяСтрока = Строка("");
     
      Пока ДлинаСтроки > 0 Цикл
           
            ПервыйСимвол = Лев(ВходящаяСтрока, 1);
           
            Если Не ПустаяСтрока(ПервыйСимвол) Тогда
                  КонечнаяСтрока = КонечнаяСтрока + ПервыйСимвол;
                  Отступ = 2;
                  ДлинаСтроки = ДлинаСтроки - 1;
          Иначе
                  КонечнаяСтрока = КонечнаяСтрока + "";
                  ВходящаяСтрока = СокрЛ(ВходящаяСтрока);
                  ДлинаСтроки = СтрДлина(ВходящаяСтрока);
                  Отступ = 1;
            КонецЕсли;
           
            Если ДлинаСтроки > 1 тогда
                  ВходящаяСтрока = Сред(ВходящаяСтрока, Отступ, ДлинаСтроки);
            Иначе
              КонечнаяСтрока = КонечнаяСтрока + Сред(ВходящаяСтрока, Отступ, 1);
                  ДлинаСтроки = 0;
            КонецЕсли;
           
      КонецЦикла;
     
      Возврат КонечнаяСтрока;
КонецФункции

&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	Если ВариантМотивации = 1 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПлановойМотивации();	
		Иначе
			ЗаполнитьВариантПлановойМотивации_Личный();
		КонецЕсли; 		
	иначеЕсли ВариантМотивации = 2 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();	
		Иначе
			ЗаполнитьВариантПроцентнойМотивации_Личный();
		КонецЕсли; 
		
	иначеЕсли ВариантМотивации = 3 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();//он такой же	
		Иначе
			ЗаполнитьВариантФокуснойМотивации();
		КонецЕсли; 

	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВывестиТаблицу(Родитель, ТаблицаРасшифровка, ИтогоБонус, Продавец, СЧ);
	//Родитель.Заголовок				=	Строка(Продавец) + "; Кол. смен: " + КоличествоСмен + 
	//												"; Сумма премии: "+ИтогоБонус + "р.";  				
	Родитель.ОтображатьЗаголовок	=	Истина; 
			
	// добавим таблицу: сначала саму таблицу, потом колонку.
	Реквизиты = Новый Массив;

		
	Реквизиты.Добавить(Новый РеквизитФормы("ТаблицаНаФорме"+СЧ, Новый ОписаниеТипов("ТаблицаЗначений")));
	Для Каждого Ст ИЗ ТаблицаРасшифровка.Колонки Цикл
		Реквизиты.Добавить(Новый РеквизитФормы(Ст.Имя, Ст.ТипЗначения, "ТаблицаНаФорме"+СЧ,Ст.заголовок));
	КонецЦикла;

	// добавим реквизиты на форму
	ИзменитьРеквизиты(Реквизиты);

	// добавим элементы формы
	Таб = Элементы.Добавить("ТаблицаНаФорме"+СЧ, Тип("ТаблицаФормы"),Родитель);
	Таб.ПутьКДанным = "ТаблицаНаФорме"+СЧ;
	Таб.Высота		=	11;
	//Таб.Ширина	=	200;
	// запретим менять положение строк и сами строки, отключим командную панель
	Таб.ИзменятьСоставСтрок = Ложь;
	Таб.ИзменятьПорядокСтрок = Ложь;
	Таб.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;

	Для Каждого Ст ИЗ ТаблицаРасшифровка.Колонки Цикл
		Если Ст.Имя = "Заголовок" тогда Продолжить; КонецЕсли;
		
		Рек = Элементы.Добавить("Колонка" + Ст.Имя+сч, Тип("ПолеФормы"), Таб);
		Рек.Вид = ВидПоляФормы.ПолеНадписи;
		Рек.ПутьКДанным = "ТаблицаНаФорме"+СЧ + "." + Ст.Имя;
		Рек.Заголовок = Ст.заголовок;
		Если  Ст.Имя	= "ФокусГруппа" тогда
			Рек.Ширина	= 30;	
		иначе
			Рек.Ширина	= 15;
		КонецЕсли;
	КонецЦикла;

	// заполним таблицу
	ЗначениеВРеквизитФормы(ТаблицаРасшифровка, "ТаблицаНаФорме"+СЧ);
	УстановитьДействиеПриАктивизацииСтрокиНаФорме();

КонецПроцедуры

&НаСервере
Процедура УстановитьДействиеПриАктивизацииСтрокиНаФорме()
	Элементы["ТаблицаНаФорме0"].УстановитьДействие("ПриАктивизацииСтроки", "ПриАктивизацииСтрокиТаблицы");   
КонецПроцедуры

&НаКлиенте
Процедура ПриАктивизацииСтрокиТаблицы();
	Если Элементы["ТаблицаНаФорме0"].ТекущиеДанные <> Неопределено тогда
		Элементы.Декорация1.Заголовок	=	Элементы["ТаблицаНаФорме0"].ТекущиеДанные.Заголовок;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроставитьСписокПродавцов(Период)
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
	      	 	             |ИЗ
	      	 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
	      	 	             |ГДЕ
	      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
	      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец");  
	
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	Запрос.УстановитьПараметр("ТекДата",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
	РезВсеПродавцы	=	Запрос.Выполнить().Выгрузить();    
	РезВсеПродавцы.Свернуть("Продавец");
	
	
	Элементы.Продавец.СписокВыбора.Очистить();
	Для каждого Строка из РезВсеПродавцы цикл 	
		Элементы.Продавец.СписокВыбора.Добавить(Строка.Продавец);
	КонецЦикла;
	
	
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ТБКСменыСотрудников.КассоваяСмена КАК КассоваяСмена,
	      	 	             |	ТБКСменыСотрудников.Продавец КАК Продавец
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКСменыСотрудников КАК ТБКСменыСотрудников
	      	 	             |ГДЕ
	      	 	             |	ТБКСменыСотрудников.КассоваяСмена.Статус = &Статус
	      	 	             |	И ТБКСменыСотрудников.ТипПродавца = &ТипПродавца");
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыКассовойСмены.Открыта);
	
	ОткрытыеСмены	=	Запрос.Выполнить().Выбрать();

	Если ОткрытыеСмены.Следующий() тогда
		Если Элементы.Продавец.СписокВыбора.НайтиПоЗначению(ОткрытыеСмены.Продавец) = Неопределено тогда
			Элементы.Продавец.СписокВыбора.Добавить(ОткрытыеСмены.Продавец);
		КонецЕсли;
	КонецЕсли; 


КонецФункции



Процедура УдалитьРеквизиты(флТолькоПоФокусу = Ложь)
	УдаляемыеРеквизиты = Новый Массив;
	
	
	Если флТолькоПоФокусу тогда
		Для каждого элемент из ЭтаФорма.ПолучитьРеквизиты() цикл
		    Если (Найти(элемент.Имя, "ФокусДиаграмма") или Найти(элемент.Имя, "ТаблицаНаФорме")) и не  Найти(элемент.Имя, "фл") тогда
				УдаляемыеРеквизиты.Добавить(элемент.Имя);  	
			КонецЕсли;
		КонецЦикла;  
		
	иначе
		Для каждого элемент из ЭтаФорма.ПолучитьРеквизиты() цикл
		    Если (Найти(элемент.Имя, "План") или Найти(элемент.Имя, "ТаблицаНаФорме")) и не  Найти(элемент.Имя, "фл") тогда
				УдаляемыеРеквизиты.Добавить(элемент.Имя);  	
			КонецЕсли;
		КонецЦикла;  
		
	КонецЕсли;

	ЭтаФорма.ИзменитьРеквизиты(,УдаляемыеРеквизиты);    
КонецПроцедуры


&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	//Период = НачалоМесяца(Период);
	фПостроенаПлановаяОбщая	=	Ложь;
	флПостроенаПлановаяЛичная	=	ложь;

	УдалитьРеквизиты();
			
	Если ВариантМотивации = 1 тогда
		Если Переключатель = 0 тогда		
			ЗаполнитьВариантПлановойМотивации();
		иначе
			ЗаполнитьВариантПлановойМотивации_Личный();
		КонецЕсли;	
		
	ИначеЕсли ВариантМотивации = 2 тогда
		ЗаполнитьВариантПроцентнойМотивации_Личный();
		
	ИначеЕсли ВариантМотивации = 3 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();//он такой же в общем варианте, отличается только в личном
		иначе
			ЗаполнитьВариантФокуснойМотивации();
		КонецЕсли;
		
	ИначеЕсли ВариантМотивации = 4 тогда
		ЗаполнитьВариантОбщейМотивации();

	КонецЕсли;
	
	ПроставитьСписокПродавцов(Период);	
	КоличествоСмен						=	ПолучитьКоличествоСмен(Продавец, Период);
	Элементы.КолСменСтрока.Заголовок	=	"Кол.смен: " + Строка(КоличествоСмен);
КонецПроцедуры

&НаКлиенте
Процедура ПериодСписокПриИзменении(Элемент)
	Если ПериодСписок = "Январь" тогда Период	=	Дата(Год(текущаяДата()),1,1) КонецЕсли;
	Если ПериодСписок = "Февраль" тогда Период	=	Дата(Год(текущаяДата()),2,1) КонецЕсли;
	Если ПериодСписок = "Март" тогда Период		=	Дата(Год(текущаяДата()),3,1) КонецЕсли;
	Если ПериодСписок = "Апрель" тогда Период	=	Дата(Год(текущаяДата()),4,1) КонецЕсли;
	Если ПериодСписок = "Май" тогда Период		=	Дата(Год(текущаяДата()),5,1) КонецЕсли;
	Если ПериодСписок = "Июнь" тогда Период		=	Дата(Год(текущаяДата()),6,1) КонецЕсли;
	Если ПериодСписок = "Июль" тогда Период		=	Дата(Год(текущаяДата()),7,1) КонецЕсли;
	Если ПериодСписок = "Август" тогда Период	=	Дата(Год(текущаяДата()),8,1) КонецЕсли;
	Если ПериодСписок = "Сентябрь" тогда Период	=	Дата(Год(текущаяДата()),9,1) КонецЕсли;
	Если ПериодСписок = "Октябрь" тогда Период	=	Дата(Год(текущаяДата()),10,1) КонецЕсли;
	Если ПериодСписок = "Ноябрь" тогда Период	=	Дата(Год(текущаяДата()),11,1) КонецЕсли;
	Если ПериодСписок = "Декабрь" тогда Период	=	Дата(Год(текущаяДата()),12,1) КонецЕсли;

	ПериодПриИзменении(Неопределено);

КонецПроцедуры                                                         


&НаКлиенте
Процедура ПродавецПриИзменении(Элемент)
	КоличествоСмен	=	ПолучитьКоличествоСмен(Продавец, Период);
	Элементы.КолСменСтрока.Заголовок	=	"Кол.смен: "+Строка(КоличествоСмен);
	
	УдалитьРеквизиты();

	Если ВариантМотивации = 1 тогда
		Если Переключатель = 0 тогда		
			ЗаполнитьВариантПлановойМотивации();
		иначе
			ЗаполнитьВариантПлановойМотивации_Личный();
		КонецЕсли;	
		
	ИначеЕсли ВариантМотивации = 2 тогда
		ЗаполнитьВариантПроцентнойМотивации_Личный();
		
	ИначеЕсли ВариантМотивации = 3 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();//он такой же в общем варианте, отличается только в личном
		иначе
			ЗаполнитьВариантФокуснойМотивации();
		КонецЕсли;
		
	ИначеЕсли ВариантМотивации = 4 тогда
		ЗаполнитьВариантОбщейМотивации();

	КонецЕсли; 	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательМесяцДеньПриИзменении(Элемент)
	Если ПереключательМесяцДень = 0 тогда
		ПериодСписокПриИзменении(Неопределено);
	иначе
		Период	=	ТекущаяДата();
	КонецЕсли;
	
	УдалитьРеквизиты();
	ЗаполнитьВариантОбщейМотивации();    
КонецПроцедуры

&НаКлиенте
Процедура ПереключательТаблицаДиаграммаПриИзменении(Элемент)
	УдалитьРеквизиты(истина);
	//ЗаполнитьВариантОбщейМотивации(); 
	ЗаполнитьФокусныеПремииОбщаяМотивация();
	
	Если ПереключательТаблицаДиаграмма	=	0 тогда
		Элементы.Декорация1.Видимость			=	Истина;
		//ЭтаФорма.Высота	=	30;
	иначе
		Элементы.Декорация1.Видимость			=	Ложь;
		//ЭтаФорма.Высота	=	45;
	КонецЕсли;

КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьДанныеПоУценке(ПереключательМесяцДень, Период)	
	Запрос	=	новый запрос("ВЫБРАТЬ
	      	 	             |	КомментарииСтатистики.ХешНаименования КАК ХешНаименования,
	      	 	             |	КомментарииСтатистики.Наименование КАК Наименование
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.КомментарииСтатистики КАК КомментарииСтатистики
	      	 	             |ГДЕ
	      	 	             |	КомментарииСтатистики.Наименование ПОДОБНО &НаименованиеТБК
	      	 	             |	И ПОДСТРОКА(КомментарииСтатистики.ХешНаименования, 4, 2) = &Месяц
	      	 	             |	И ПОДСТРОКА(КомментарииСтатистики.ХешНаименования, 7, 4) = &Год
	      	 	             |	И ПОДСТРОКА(КомментарииСтатистики.ХешНаименования, 1, 2) = &День");
	Запрос.УстановитьПараметр("НаименованиеТБК","%tbkskidka%");

	ДеньСтрока	=	Строка(День(Период));
	МесяцСтрока	=	Строка(Месяц(Период));
	ГодСтрока	=	УдалениеНезначимыхСимволов(Строка(Год(Период)));

	Если СтрДлина(МесяцСтрока) = 1 тогда МесяцСтрока = "0"+ МесяцСтрока; КонецЕсли;
	
	Запрос.УстановитьПараметр("Месяц",МесяцСтрока);
	Запрос.УстановитьПараметр("Год",ГодСтрока);
	
	Если ПереключательМесяцДень = 1 тогда
		Если СтрДлина(ДеньСтрока) = 1 тогда ДеньСтрока = "0"+ ДеньСтрока; КонецЕсли;
		Запрос.УстановитьПараметр("День",ДеньСтрока);   
	иначе
		Запрос.Текст	=	СтрЗаменить(Запрос.Текст,"И ПОДСТРОКА(КомментарииСтатистики.ХешНаименования, 1, 2) = &День","");		
	КонецЕсли;
	
	МассивВозврата	=	Новый Массив;
	
	
	ПроданоТабак	=	0;
	ПроданоСувениры	=	0;
	ПремияТабак		=	0;
	ПремияСувениры	=	0;
	СуммаТабак		=	0;
	СуммаСувениры	=	0;
	
	Рез = Запрос.Выполнить().Выгрузить();
	Для каждого Строка из рез цикл
		Данные		=	Строка.Наименование;		
		Поз3		=	СтрНайти(Данные,"/",,,3);
		Поз9		=	СтрНайти(Данные,"/",,,9);
		Поз10		=	СтрНайти(Данные,"/",,,10);
		ПозЗагружен	=	СтрНайти(Данные,"загружен");
		
		КодГруппы	=	Сред(Данные,Поз3+1,11);
		
		КодГруппы	=	СтрЗаменить(КодГруппы,"u","Ю");
		
		Попытка
			Если Поз10 = 0 тогда 
				Если ПозЗагружен >0 тогда
					Сумма		=	Сред(Данные,Поз9+1, ПозЗагружен-Поз9-1);
				иначе
					Сумма		=	Сред(Данные,Поз9+1);
				КонецЕсли;
				Сумма	=	Число(Сумма);
				
			иначе
				Если ПозЗагружен >0 тогда
					Сумма		=	Сред(Данные,Поз10+1, ПозЗагружен-Поз10-1);
				иначе
					Сумма		=	Сред(Данные,Поз10+1);
				КонецЕсли;
				Сумма	=	Число(Сумма);
			КонецЕсли;
			
		Исключение
			Продолжить;
		КонецПопытки;


		ПК			=	Справочники.Номенклатура.НайтиПоКоду(КодГруппы).ПолныйКод();
		Если найти(ПК, "00048205349") тогда //Это Табак
			ПроданоТабак	=	ПроданоТабак +1;
			ПремияТабак		=	ПремияСувениры + (Сумма/100)*10;	
			Попытка
				СуммаТабак		=	СуммаТабак + Сумма;
			Исключение
			КонецПопытки;
		иначе
			ПроданоСувениры	=	ПроданоСувениры + 1;
			ПремияСувениры	=	ПремияСувениры  +  (Сумма/100)*20;	
			Попытка
				СуммаСувениры	=	СуммаСувениры + Сумма;
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураПремийУценка	=	Новый Структура;
	СтруктураПремийУценка.Вставить("ПроданоТабак", 		ПроданоТабак);
	СтруктураПремийУценка.Вставить("ПроданоСувениры", 	ПроданоСувениры);
	СтруктураПремийУценка.Вставить("СуммаТабак", 		СуммаТабак);
	СтруктураПремийУценка.Вставить("СуммаСувениры", 	СуммаСувениры);
	СтруктураПремийУценка.Вставить("ПремияТабак", 		ПремияТабак);
	СтруктураПремийУценка.Вставить("ПремияСувениры", 	ПремияСувениры);
	
	
	Возврат СтруктураПремийУценка;
	
	
КонецФункции

&НаКлиенте
Процедура Группа8ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.заголовок = "Основная" тогда
		ТекущаяСтраница.РастягиватьПоВертикали	=	Ложь;
		//ТекущаяСтраница.Высота					=	45;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Основная.РастягиватьПоВертикали	=	Ложь;
	Если флразвернуть тогда
		Попытка
			WSHShell = Новый COMОбъект("WScript.Shell");
			WSHShell.SendKeys("% ");
			WSHShell.SendKeys("{DOWN}{DOWN}{DOWN}{DOWN}{ENTER}");

		Исключение
		КонецПопытки;
	КонецЕсли;
	
	
	
КонецПроцедуры

#КонецОбласти
 


	////Выводим Суммы ФОКУС мотивации БЕЗ ПЛАНА! для примера гистограммы с накоплением
	//Запрос	=	Новый Запрос("ВЫБРАТЬ
	//      	 	             |	ТБКФокуснаяМотивация.Период КАК Период,
	//      	 	             |	ТБКФокуснаяМотивация.Номенклатура КАК Номенклатура,
	//      	 	             |	ТБКФокуснаяМотивация.Процент КАК Процент,
	//      	 	             |	ТБКФокуснаяМотивация.Сумма КАК Сумма
	//      	 	             |ИЗ
	//      	 	             |	РегистрСведений.ТБКФокуснаяМотивация КАК ТБКФокуснаяМотивация
	//      	 	             |ГДЕ
	//      	 	             |	ТБКФокуснаяМотивация.Период МЕЖДУ &ДатаНач И &ДатаКон
	//      	 	             |	И ТБКФокуснаяМотивация.ПланКоличество = 0");
	//
	//Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(Период));
	//Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(Период));
	//Рез = Запрос.Выполнить().Выбрать();
	//
	//НазваниеДиаграммы	=	"ПланФокус";
	//НДиаг         		= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);
	//
	//ДобавляемыеРеквизиты = Новый Массив;
	//ДобавляемыеРеквизиты.Добавить(НДиаг);  	
	//ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

	//Диаг 						= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа2);		
	//Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
	//Диаг.ПутьКДанным			= НазваниеДиаграммы;
	//Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;
	//Диаг.Ширина					=	15;
	//
	//НДиаг						=	ЭтаФорма[НазваниеДиаграммы];
	//НДиаг.ТипДиаграммы			=	ТипДиаграммы.ГистограммаСНакоплениемОбъемная;

	//ТочкаСуммаПремии 			=	НДиаг.УстановитьТочку("Премии");

	//СуммаИтог	=	0;
	//Ном = 0;
	//Пока Рез.Следующий() цикл
	//	
	//	//СтрокаФокусГруппа	=	ТЗ_Премии.найти(Строка(Рез.Номенклатура));
	//	//Если СтрокаФокусГруппа<>Неопределено тогда
	//	//	СуммаПремииФокус	=	СтрокаФокусГруппа.СуммаОборот;
	//	//иначе
	//	//	Продолжить;
	//	//КонецЕсли; 
	//	
	//	ТЗПродано	=	ПолучитьКоличествоПродажПоГруппе(Продавец, Рез.Номенклатура,  Истина);	
	//	Если ТЗПродано.Количество() = 0 тогда Продолжить; КонецЕсли;
	//	
	//	Если Рез.Процент>0 тогда
	//		СуммаПремииФокус	=	(ТЗПродано[0].Сумма/100) * Рез.Процент;
	//	иначе
	//		СуммаПремииФокус	=	ТЗПродано[0].Количество * Рез.Сумма;
	//	КонецЕсли;
	//	
	//	СуммаИтог			=	СуммаИтог + СуммаПремииФокус;		

	//	НДиаг.Серии.Добавить(Строка(Рез.Номенклатура));
	//	
	//	//определяем точки

	//	НДиаг.УстановитьЗначение(ТочкаСуммаПремии
	//					, НДиаг.Серии[Ном]
	//					, СуммаПремииФокус
	//					, Неопределено
	//					, "Премия за " + Строка(Рез.Номенклатура)+" "+СуммаПремииФокус);
	//					

	//	Ном	=	Ном+1;
	//	
	//	ИтогоПремии	=	ИтогоПремии +  СуммаПремииФокус;
	//КонецЦикла;
	//Диаг.Заголовок		= "Премии по фокус.группам: " + СуммаИтог;
