
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Продавец	=	ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца();
	
	ВариантМотивации	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ВариантМотивации");
	
	Если ВариантМотивации = 1 тогда
		ЗаполнитьВариантПлановойМотивации();
		
	ИначеЕсли ВариантМотивации = 2 тогда
		Элементы.Переключатель.Видимость	= Ложь;
		//ЗаполнитьВариантПроцентнойМотивации();
		ЗаполнитьВариантПроцентнойМотивации_Личный();
		
	ИначеЕсли ВариантМотивации = 3 тогда
		ЗаполнитьВариантПроцентнойМотивации();//он такой же в общем варианте, отличается только в личном

	КонецЕсли;
	
	Переключатель	=	0;
	
КонецПроцедуры

#Область ПлановаяМотивация
&НаСервере
Процедура ЗаполнитьВариантПлановойМотивации()
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь;
	Элементы.Группа1.Видимость	= Истина;
	Элементы.Группа2.Видимость	= Истина; 
	
	Если флПостроенаПлановаяОбщая тогда Возврат КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать();
	
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Пока рез.Следующий() цикл	
		СуммаФакт	=	ПолучитьСуммуФактПоТипуПлана(Рез.ТипПлана);
				
		НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(Рез.ТипПлана));
		
		НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

		НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НДиаг);  	
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

		Если Найти(НРег(Строка(Рез.ТипПлана)),"личный") или Найти(НРег(Строка(Рез.ТипПлана)),"план то") тогда
			Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа2);	
		иначе
			Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа1);	
		КонецЕсли;
		
		
		Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
		Диаг.ПутьКДанным			= НазваниеДиаграммы;
		Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;

		НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
		НДиаг.Серии.Добавить("План");

		ТочкаПоПлану = НДиаг.УстановитьТочку("План");
		ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
		
		ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
		ТочкаПоПлану.ПриоритетЦвета	=Истина;	
		ТочкаПоПлану.Цвет	=	WebЦвета.БледноКрасноФиолетовый;		
		
		Если СуммаФакт >  рез.Сумма тогда	
			ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
		иначе
			ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
		КонецЕсли;
		
		ПроцентВыполнения	=	Окр((СуммаФакт / рез.Сумма) * 100,2);
		
		НДиаг.УстановитьЗначение(ТочкаПоПлану
				, НДиаг.Серии[0]
				, рез.Сумма
				, Неопределено
				, Рез.ТипПлана + " "+рез.Сумма);
		

		НДиаг.УстановитьЗначение(ТочкаПоФакту
			, НДиаг.Серии[0]
			, СуммаФакт
			, Неопределено
			, "Факт. продажи" + " " + СуммаФакт + "; Процент выполнения:"+ПроцентВыполнения+"%");  		
			
			
		НДиаг.ОтображатьЛегенду	= Ложь;	 		
		НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
		НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
		НДиаг.АвтоМинимальноеЗначение	=	Ложь;
		НДиаг.МаксимальноеЗначение		=	Макс(рез.Сумма, СуммаФакт) + рез.Сумма/10;
		НДиаг.МинимальноеЗначение		=	0; 
		НДиаг.МинимальноеЗначение		=	-0.01; 

	КонецЦикла; 
	
	флПостроенаПлановаяОбщая = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВариантПлановойМотивации_Личный()

	Элементы.Группа1.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Истина;
	Элементы.Группа4.Видимость	= Истина; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;

		
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана <> ""План личный""
	      	 	             |			И ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана <> ""План ТО""
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать(); 
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Пока рез.Следующий() цикл	
		СуммаПлан		=	Рез.Сумма; 		
 		КоличествоДней 	=	Сред(КонецМесяца(ТекущаяДата()), 1, 2);
		СуммаПлан_Смена	=	Окр(СуммаПлан / КоличествоДней,0);
		
		Запрос			=	Новый Запрос("ВЫБРАТЬ
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		      			 	             |ИЗ
		      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      			 	             |ГДЕ
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		      			 	             |;
		      			 	             |
		      			 	             |////////////////////////////////////////////////////////////////////////////////
		      			 	             |ВЫБРАТЬ
		      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		      			 	             |ИЗ
		      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	ПродавцыСмены.Продавец");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

		ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
		Если НужСтрока= Неопределено тогда 
			НовСтр	=	ТЗПродавцыСмены.Добавить();
			НовСтр.Продавец	=	Продавец;
			НовСтр.КолСмен	=	1;
		иначе
			НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
		КонецЕсли;
		
		
		Ном = 0;
		Для каждого ПродавцыСмены из  ТЗПродавцыСмены цикл
			СуммаФакт		=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец);
			СуммаФактДень	=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец, НачалоДня(ТекущаяДата()));
			КолСмен			=	ПродавцыСмены.КолСмен;
			
			НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(ПродавцыСмены.Продавец) + Строка(Рез.ТипПлана));
			
			НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

			НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Если Ном = 1 тогда
				Элементы.Группа4.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен;
				Элементы.Группа4.ОтображатьЗаголовок	=	Истина; 				
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа4);  	
			иначе
				Элементы.Группа3.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен;
				Элементы.Группа3.ОтображатьЗаголовок	=	Истина;   
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа3);
			КонецЕсли; 
			
			Диаг.Вид					= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным			= НазваниеДиаграммы; 
			Диаг.ЦветТекстаЗаголовка	= WebЦвета.Синий;

			НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
			НДиаг.Серии.Добавить("План");

			ТочкаПоПлану = НДиаг.УстановитьТочку("План");
			ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
			
			ТочкаПоПлану_День = НДиаг.УстановитьТочку("План день");
			ТочкаПоФакту_День = НДиаг.УстановитьТочку("Факт сегодня");
			
			ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
			ТочкаПоПлану.ПриоритетЦвета	=Истина;	
			
			ТочкаПоПлану_День.ПриоритетЦвета	=Истина;   		
			ТочкаПоФакту_День.ПриоритетЦвета	=Истина;
			
			ТочкаПоПлану.Цвет		=	WebЦвета.БледноКрасноФиолетовый;	
			ТочкаПоПлану_День.Цвет	=	WebЦвета.БледноКрасноФиолетовый;
			
			СуммаПлан	=	СуммаПлан_Смена * КолСмен;
			
			Если СуммаФакт >  СуммаПлан тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			Если СуммаФактДень >  СуммаПлан_Смена тогда	
				ТочкаПоФакту_День.Цвет	=	WebЦвета.ЗеленаяЛужайка;
			иначе
				ТочкаПоФакту_День.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			НДиаг.УстановитьЗначение(ТочкаПоПлану
					, НДиаг.Серии[0]
					, СуммаПлан
					, Неопределено
					, Рез.ТипПлана + " "+СуммаПлан);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту
				, НДиаг.Серии[0]
				, СуммаФакт
				, Неопределено
				, "Факт. продажи" + " " + СуммаФакт);
				
				
				
			НДиаг.УстановитьЗначение(ТочкаПоПлану_День
					, НДиаг.Серии[0]
					, СуммаПлан_Смена
					, Неопределено
					, Рез.ТипПлана + " "+СуммаПлан_Смена);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту_День
				, НДиаг.Серии[0]
				, СуммаФактДень
				, Неопределено
				, "Факт. продажи" + " " + СуммаФактДень);  
				
				
			НДиаг.ОтображатьЛегенду			=   Ложь;	 		
			НДиаг.ВидПодписей				=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МаксимальноеЗначение		=	Макс(СуммаПлан, СуммаФакт) + СуммаПлан/10;
			НДиаг.МинимальноеЗначение		=	-0.01; 

			Ном	=	Ном+1;
		КонецЦикла;
	КонецЦикла;   	  

	флПостроенаПлановаяЛичная	=	Истина;	
КонецПроцедуры

Функция ПолучитьСуммуФактПоТипуПлана(ТипПлана)     	
	//Личный
	Если ТипПлана = "План личный" тогда
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка КАК Ссылка
		      	 	             |ПОМЕСТИТЬ Доки
		      	 	             |ИЗ
		      	 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      	 	             |ГДЕ
		      	 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      	 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      	 	             |;
		      	 	             |
		      	 	             |////////////////////////////////////////////////////////////////////////////////
		      	 	             |ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ТБК_ВедомостьОПродажахЗаДень.ВыручкаЗаСменуПоКассе - ТБК_ВедомостьОПродажахЗаДень.ВозвратОтПокупателяНал - ТБК_ВедомостьОПродажахЗаДень.ВозвратОтПокупателяБезНал), 0) КАК СуммаВедомости
		      	 	             |ИЗ
		      	 	             |	Доки КАК Доки
		      	 	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТБК_ВедомостьОПродажахЗаДень КАК ТБК_ВедомостьОПродажахЗаДень
		      	 	             |		ПО Доки.Ссылка = ТБК_ВедомостьОПродажахЗаДень.Ссылка
		      	 	             |;
		      	 	             |
		      	 	             |////////////////////////////////////////////////////////////////////////////////
		      	 	             |ВЫБРАТЬ
		      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
		      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
		      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
		      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
		      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
		      	 	             |ИЗ
		      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		      	 	             |ГДЕ
		      	 	             |	ЧекККМТовары.Ссылка.Проведен
		      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      	 	             |	И ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
		      	 	             |	И ЧекККМТовары.Продавец = &Продавец");
		
		
		
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
		Запрос.УстановитьПараметр("Продавец",Продавец);
		Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
		Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
		Рез = Запрос.ВыполнитьПакет();
		
		СуммаЗаДень	=	Рез[1].Выгрузить()[0].СуммаВедомости + Рез[2].Выгрузить()[0].СуммаЧеки;
		
		Запрос			=	Новый Запрос("ВЫБРАТЬ
			      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
			      			 	             |ПОМЕСТИТЬ ПродавцыСмены
			      			 	             |ИЗ
			      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
			      			 	             |ГДЕ
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
			      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
			      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец = &Продавец
			      			 	             |
			      			 	             |СГРУППИРОВАТЬ ПО
			      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
			      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
			      			 	             |;
			      			 	             |
			      			 	             |////////////////////////////////////////////////////////////////////////////////
			      			 	             |ВЫБРАТЬ
			      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
			      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
			      			 	             |ИЗ
			      			 	             |	ПродавцыСмены КАК ПродавцыСмены
			      			 	             |
			      			 	             |СГРУППИРОВАТЬ ПО
			      			 	             |	ПродавцыСмены.Продавец");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);
		Запрос.УстановитьПараметр("Продавец",Объект.Продавец);

		ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		Если ТЗПродавцыСмены.Количество() = 0 тогда 
			КолСмен	=	1;	
		иначе
			КолСмен	=	ТЗПродавцыСмены[0].КолСмен +1;	
		КонецЕсли;
		
		СуммаФАкт	=	СуммаЗаДень * КолСмен;
			
		Возврат СуммаФАкт;
	КонецЕсли;
	
	//Общий
	Если ТипПлана = "План ТО" тогда
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ПродажиОбороты.СтоимостьОборот КАК Сумма
		      	 	             |ИЗ
		      	 	             |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , ) КАК ПродажиОбороты");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		
		Рез = Запрос.Выполнить().Выбрать();
		Если Рез.Следующий() тогда
			Возврат Рез.сумма;
		иначе
			Возврат 0;
		КонецЕсли;

	КонецЕсли;

	//По группам товаров 
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов
	      	 	             |ГДЕ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.ТипПлана = &ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана",ТипПлана);
	Рез = Запрос.Выполнить().Выгрузить();

	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ПродажиОбороты.СтоимостьОборот), 0) КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрНакопления.Продажи.Обороты(&ДатаНач, &ДатаКон, , Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ПродажиОбороты");
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Если рез.Следующий() тогда
		Возврат Рез.Сумма;
	иначе
		Возврат 0;
	КонецЕсли;

	
КонецФункции

Функция ПолучитьСуммуФактПоТипуПлана_Личный(ТипПлана, Продавец_, НачалоПериода = Неопределено, ВариантМотивации = 1)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов
	      	 	             |ГДЕ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.ТипПлана = &ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана",ТипПлана);
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если ВариантМотивации = 2 тогда
		НовСтр	=	Рез.Добавить();
		НовСтр.Номенклатура	=	Справочники.Номенклатура.НайтиПоКоду("Номенклатура");// сопутствующие товары
	КонецЕсли;

	
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Продавец = &Продавец
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)");
		
		
		Если НачалоПериода = Неопределено тогда
			Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		иначе
			Запрос.УстановитьПараметр("ДатаНач",НачалоПериода);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("Продавец",Продавец_);
		Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
		Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
		Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
		Если ТипПлана = "План ТО" тогда
			Запрос.Текст	=	СтрЗаменить(Запрос.Текст, "И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)", "");			
		КонецЕсли;
		
		Рез = Запрос.Выполнить().Выбрать();
		Если рез.Следующий() тогда
			Возврат рез.СуммаЧеки;
		иначе
			Возврат 0;
		КонецЕсли;
	
	
КонецФункции

#КонецОбласти 

#Область ПроцентнаяМотивация
&НаСервере
Процедура ЗаполнитьВариантПроцентнойМотивации()
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь;
	Элементы.Группа6.Видимость	= Ложь;
	Элементы.Группа7.Видимость	= Ложь;
	Элементы.Группа1.Видимость	= Истина;
	Элементы.Группа2.Видимость	= Истина; 
	
	Если флПостроенаПлановаяОбщая тогда Возврат КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана = &ТипПлана
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	Запрос.УстановитьПараметр("ТипПлана","План ТО");
	рез = запрос.Выполнить().Выбрать(); 	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Если рез.Следующий() тогда	
		СуммаФакт	=	ПолучитьСуммуФактПоТипуПлана(Рез.ТипПлана); 		
		
		НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(Рез.ТипПлана));
		
		НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

		НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(НДиаг);  	
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  
		Диаг 				= ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа1);	
		
		Диаг.Вид			= ВидПоляФормы.ПолеДиаграммы; 
		Диаг.ПутьКДанным	= НазваниеДиаграммы;

		НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
		НДиаг.Серии.Добавить("План");

		ТочкаПоПлану = НДиаг.УстановитьТочку("План");
		ТочкаПоФакту = НДиаг.УстановитьТочку("Факт");
		
		ТочкаПоФакту.ПриоритетЦвета	=Истина;   		
		ТочкаПоПлану.ПриоритетЦвета	=Истина;	
		ТочкаПоПлану.Цвет	=	WebЦвета.БледноКрасноФиолетовый;		
		
		Если СуммаФакт >  рез.Сумма тогда	
			ТочкаПоФакту.Цвет	=	WebЦвета.ЗеленаяЛужайка;
		иначе
			ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
		КонецЕсли;  
		
		НДиаг.УстановитьЗначение(ТочкаПоПлану
				, НДиаг.Серии[0]
				, рез.Сумма
				, Неопределено
				, Рез.ТипПлана + " "+рез.Сумма);
		

		НДиаг.УстановитьЗначение(ТочкаПоФакту
			, НДиаг.Серии[0]
			, СуммаФакт
			, Неопределено
			, "Факт. продажи" + " " + СуммаФакт);  		
			
			
		НДиаг.ОтображатьЛегенду	= Ложь;	 		
		НДиаг.ВидПодписей		=	ВидПодписейКДиаграмме.Значение;
		НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
		НДиаг.АвтоМинимальноеЗначение	=	Ложь;
		НДиаг.МаксимальноеЗначение		=	Макс(рез.Сумма, СуммаФакт) + рез.Сумма/10;
		НДиаг.МинимальноеЗначение		=	-0.01; 
		Диаг.Ширина						=	100;
		Диаг.Высота						=	20;
	КонецЕсли; 
	
	флПостроенаПлановаяОбщая = Истина;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьВариантПроцентнойМотивации_Личный()

	Элементы.Группа1.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Истина;
	Элементы.Группа4.Видимость	= Истина; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;

		
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Период КАК Период,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана КАК ТипПлана,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Сумма КАК Сумма,
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.Процент КАК Процент
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКПланыМагазинаПоМесяцам.СрезПоследних КАК ПланыМагазинаПоМесяцамСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПланыМагазинаПоМесяцамСрезПоследних.ТипПлана = ""План ТО""
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	ТипПлана");
	рез = запрос.Выполнить().Выбрать(); 
	

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Диаграмма"));
	ДопустимыеТипы = Новый ОписаниеТипов(МассивТипов); 	
	
	Ном = 1;
	Если  рез.Следующий() тогда	
		СуммаПлан		=	Рез.Сумма; 		
 		КоличествоДней 	=	Сред(КонецМесяца(ТекущаяДата()), 1, 2);
		СуммаПлан_Смена	=	Окр(СуммаПлан / КоличествоДней,0);
		
		Запрос			=	Новый Запрос("ВЫБРАТЬ
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
		      			 	             |ПОМЕСТИТЬ ПродавцыСмены
		      			 	             |ИЗ
		      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
		      			 	             |ГДЕ
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
		      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
		      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
		      			 	             |;
		      			 	             |
		      			 	             |////////////////////////////////////////////////////////////////////////////////
		      			 	             |ВЫБРАТЬ
		      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
		      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
		      			 	             |ИЗ
		      			 	             |	ПродавцыСмены КАК ПродавцыСмены
		      			 	             |
		      			 	             |СГРУППИРОВАТЬ ПО
		      			 	             |	ПродавцыСмены.Продавец");
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

		ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
		НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
		Если НужСтрока= Неопределено тогда 
			НовСтр	=	ТЗПродавцыСмены.Добавить();
			НовСтр.Продавец	=	Продавец;
			НовСтр.КолСмен	=	1;
		иначе
			НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
		КонецЕсли;
		
		ТЗ_СуммаФактПоВсемГруппамПоПродавцам 			=   ПолучитьСуммуФактПоВсемГруппамПоПродавцам(); 
	
		
		Ном = 0;
		Для каждого ПродавцыСмены из  ТЗПродавцыСмены цикл
			СуммаФакт		=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец,,ВариантМотивации);
			СуммаФактДень	=	ПолучитьСуммуФактПоТипуПлана_Личный(Рез.ТипПлана, ПродавцыСмены.Продавец, НачалоДня(ТекущаяДата()), ВариантМотивации);
			КолСмен			=	ПродавцыСмены.КолСмен;
			
			//Считаем по процентам
			НужПроцент = Рез.Процент;
			//СуммаФактПоВсемГруппам 			=   ПолучитьСуммуФактПоВсемГруппам(ПродавцыСмены.Продавец);		
			//СуммаФактПоВсемГруппам_День 	=   ПолучитьСуммуФактПоВсемГруппам(ПродавцыСмены.Продавец, НачалоДня(ТекущаяДата()));
			
			НужСтрока					=	ТЗ_СуммаФактПоВсемГруппамПоПродавцам.найти(ПродавцыСмены.Продавец);
			СуммаФактПоВсемГруппам		=	НужСтрока.СуммаЧеки;
			СуммаФактПоВсемГруппам_День	=	НужСтрока.СуммаЧекиСегодня;
			

			СуммаБонуса				=	Окр((СуммаФактПоВсемГруппам / 100) * НужПроцент,0);	
			СуммаБонуса_День		=	Окр((СуммаФактПоВсемГруппам_День / 100) * НужПроцент,0);
			//
			
			НазваниеДиаграммы	=	УдалениеНезначимыхСимволов(Строка(ПродавцыСмены.Продавец) + Строка(Рез.ТипПлана));
			
			НДиаг         	= Новый РеквизитФормы(НазваниеДиаграммы, ДопустимыеТипы);

			НДиаг.Заголовок	=	Строка(Рез.ТипПлана);
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НДиаг);  	
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);  

			Если Ном = 1 тогда
				Элементы.Группа4.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен + 
															"; Всего продаж без стиков и сигарет: " + СуммаФактПоВсемГруппам + "р.; Сумма премии: "+СуммаБонуса + "р.";
				
				Элементы.Группа4.ОтображатьЗаголовок	=	Истина; 				                                                                              
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа4);  	
			иначе
				Элементы.Группа3.Заголовок				=	Строка(ПродавцыСмены.Продавец) + "; Кол. смен: " + КолСмен + 
															"; Всего продаж без стиков и сигарет: " + СуммаФактПоВсемГруппам + "р.; Сумма премии: "+СуммаБонуса + "р.";
				
				Элементы.Группа3.ОтображатьЗаголовок	=	Истина;   
				Диаг 									=   ЭтаФорма.Элементы.Добавить(НазваниеДиаграммы, Тип("ПолеФормы"), Элементы.Группа3);
			КонецЕсли; 
			
			Диаг.Вид			= ВидПоляФормы.ПолеДиаграммы; 
			Диаг.ПутьКДанным	= НазваниеДиаграммы;  

			НДиаг	=	ЭтаФорма[НазваниеДиаграммы];
			НДиаг.Серии.Добавить("План");

			//ТочкаПоПлану 					= НДиаг.УстановитьТочку("План");
			ТочкаПоФакту 					= НДиаг.УстановитьТочку("Факт");
			ТочкаПоФактуБезСтиковиСигарет 	= НДиаг.УстановитьТочку("Факт без стиков и сиг-т");  
			ТочкаСуммаБонуса			 	= НДиаг.УстановитьТочку("Сумма премии");

			
			//ТочкаПоПлану_День 					= НДиаг.УстановитьТочку("План день");
			ТочкаПоФакту_День 					= НДиаг.УстановитьТочку("Факт сегодня");
			ТочкаПоФактуБезСтиковиСигарет_День 	= НДиаг.УстановитьТочку("Факт без стиков и сиг-т сегодня");  
			ТочкаСуммаБонуса_День			 	= НДиаг.УстановитьТочку("Сумма премии сегодня");

			
			ТочкаПоФакту.ПриоритетЦвета							=Истина;   		
			//ТочкаПоПлану.ПриоритетЦвета							=Истина;			
			//ТочкаПоПлану_День.ПриоритетЦвета					=Истина;   		
			ТочкаПоФакту_День.ПриоритетЦвета					=Истина;   
			ТочкаПоФактуБезСтиковиСигарет.ПриоритетЦвета		=Истина;   		
			ТочкаСуммаБонуса.ПриоритетЦвета						=Истина;
			ТочкаПоФактуБезСтиковиСигарет_День.ПриоритетЦвета	=Истина;   		
			ТочкаСуммаБонуса_День.ПриоритетЦвета				=Истина;

			
			ТочкаПоФактуБезСтиковиСигарет.Цвет		=	WebЦвета.Золотой;	
			ТочкаПоФактуБезСтиковиСигарет_День.Цвет	=	WebЦвета.Золотой;			
			ТочкаСуммаБонуса.Цвет					=	WebЦвета.Пурпурный;	
			ТочкаСуммаБонуса_День.Цвет				=	WebЦвета.Пурпурный; 			
			//ТочкаПоПлану.Цвет						=	WebЦвета.БледноКрасноФиолетовый;	
			//ТочкаПоПлану_День.Цвет					=	WebЦвета.БледноКрасноФиолетовый;
			
			//СуммаПлан	=	СуммаПлан_Смена * КолСмен;
			
			Если СуммаФакт >  СуммаПлан тогда	
				ТочкаПоФакту.Цвет	=	WebЦвета.ЛимонноЗеленый;
			иначе
				ТочкаПоФакту.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			Если СуммаФактДень >  СуммаПлан_Смена тогда	
				ТочкаПоФакту_День.Цвет	=	WebЦвета.ЛимонноЗеленый;
			иначе
				ТочкаПоФакту_День.Цвет	=	WebЦвета.Бирюзовый;
			КонецЕсли;  
			
			//НДиаг.УстановитьЗначение(ТочкаПоПлану
			//		, НДиаг.Серии[0]
			//		, СуммаПлан
			//		, Неопределено
			//		, Рез.ТипПлана + " "+СуммаПлан);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту
				, НДиаг.Серии[0]
				, СуммаФакт
				, Неопределено
				, "Факт. продажи" + " " + СуммаФакт); 
				
				
			НДиаг.УстановитьЗначение(ТочкаПоФактуБезСтиковиСигарет
				, НДиаг.Серии[0]
				, СуммаФактПоВсемГруппам
				, Неопределено
				, "Факт. продажи без стиков и сиг-т" + " " + СуммаФактПоВсемГруппам);  

			НДиаг.УстановитьЗначение(ТочкаСуммаБонуса
				, НДиаг.Серии[0]
				, СуммаБонуса
				, Неопределено
				, "Сумма премии" + " " + СуммаБонуса); 			
				
				
			//НДиаг.УстановитьЗначение(ТочкаПоПлану_День
			//		, НДиаг.Серии[0]
			//		, СуммаПлан_Смена
			//		, Неопределено
			//		, Рез.ТипПлана + " "+СуммаПлан_Смена);
			

			НДиаг.УстановитьЗначение(ТочкаПоФакту_День
				, НДиаг.Серии[0]
				, СуммаФактДень
				, Неопределено
				, "Факт. продажи" + " " + СуммаФактДень);
				
			НДиаг.УстановитьЗначение(ТочкаПоФактуБезСтиковиСигарет_День
				, НДиаг.Серии[0]
				, СуммаФактПоВсемГруппам_День
				, Неопределено
				, "Факт. продажи без стиков и сиг-т сегодня" + " " + СуммаФактПоВсемГруппам_День);  

			НДиаг.УстановитьЗначение(ТочкаСуммаБонуса_День
				, НДиаг.Серии[0]
				, СуммаБонуса_День
				, Неопределено
				, "Сумма премии" + " " + СуммаБонуса_День); 	
				
				
				
			НДиаг.ОтображатьЛегенду			=   Ложь;	 		
			НДиаг.ВидПодписей				=	ВидПодписейКДиаграмме.Значение;
			НДиаг.АвтоМаксимальноеЗначение	=	Ложь;
			НДиаг.АвтоМинимальноеЗначение	=	Ложь;
			НДиаг.МаксимальноеЗначение		=	СуммаФакт + СуммаФакт/10;
			НДиаг.МинимальноеЗначение		=	-0.01; 

			Ном	=	Ном+1;
		КонецЦикла;
	КонецЕсли;;   	  
	
	ЭтаФорма.Ширина	=	150;
	флПостроенаПлановаяЛичная	=	Истина;	
КонецПроцедуры

//не исп
Функция ПолучитьСуммуФактПоВсемГруппам(Продавец_, НачалоПериода = Неопределено)  
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов");
	Рез = Запрос.Выполнить().Выгрузить();  	
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ), 0) КАК СуммаЧеки
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Продавец = &Продавец
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)");
		
		
	Если НачалоПериода = Неопределено тогда
		Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
	иначе
		Запрос.УстановитьПараметр("ДатаНач",НачалоПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Продавец",Продавец_);
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
		
	Рез = Запрос.Выполнить().Выбрать();
	Если рез.Следующий() тогда
		Возврат рез.СуммаЧеки;
	иначе
		Возврат 0;
	КонецЕсли; 	
	
КонецФункции   
//

Функция ПолучитьСуммуФактПоВсемГруппамПоПродавцам()  
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКГруппыНоменклатурыДляПланов.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКГруппыНоменклатурыДляПланов КАК ТБКГруппыНоменклатурыДляПланов");
	Рез = Запрос.Выполнить().Выгрузить();  	
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧеки,
	      	 	             |	ЧекККМТовары.Продавец КАК Продавец,
	      	 	             |	СУММА(ЕСТЬNULL(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.Дата >= &ТекДень
	      	 	             |					ТОГДА ВЫБОР
	      	 	             |							КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |								ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |							ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |						КОНЕЦ
	      	 	             |				ИНАЧЕ 0
	      	 	             |			КОНЕЦ, 0)) КАК СуммаЧекиСегодня
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Номенклатура В ИЕРАРХИИ(&Номенклатура)
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ЧекККМТовары.Продавец");
		
		
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДень",НачалоДня(ТекущаяДата())); 
	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура",Рез.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Возврат Запрос.Выполнить().Выгрузить();
	//Рез = Запрос.Выполнить().Выбрать();
	//Если рез.Следующий() тогда
	//	Возврат рез.СуммаЧеки;
	//иначе
	//	Возврат 0;
	//КонецЕсли; 	
	
КонецФункции

#КонецОбласти

#Область ФокуснаяМотивация

Процедура ЗаполнитьВариантФокуснойМотивации()
	Элементы.Группа6.Видимость	=Истина;
	Элементы.Группа7.Видимость	=Истина;
	Элементы.Группа1.Видимость	= Ложь;
	Элементы.Группа2.Видимость	= Ложь;
	Элементы.Группа3.Видимость	= Ложь;
	Элементы.Группа4.Видимость	= Ложь; 
	
	Если флПостроенаПлановаяЛичная тогда Возврат КонецЕсли;	
	
	Запрос			=	Новый Запрос("ВЫБРАТЬ
	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ) КАК Поле1,
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец КАК Продавец
	      			 	             |ПОМЕСТИТЬ ПродавцыСмены
	      			 	             |ИЗ
	      			 	             |	Документ.ТБК_ВедомостьОПродажахЗаДень.Продавцы КАК ТБК_ВедомостьОПродажахЗаДеньПродавцы
	      			 	             |ГДЕ
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Проведен
	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.ТипПродавца = &ТипПродавца
	      			 	             |	И ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      			 	             |	И НЕ ТБК_ВедомостьОПродажахЗаДеньПродавцы.ПродавецНаЗамену
	      			 	             |
	      			 	             |СГРУППИРОВАТЬ ПО
	      			 	             |	НАЧАЛОПЕРИОДА(ТБК_ВедомостьОПродажахЗаДеньПродавцы.Ссылка.Дата, ДЕНЬ),
	      			 	             |	ТБК_ВедомостьОПродажахЗаДеньПродавцы.Продавец
	      			 	             |;
	      			 	             |
	      			 	             |////////////////////////////////////////////////////////////////////////////////
	      			 	             |ВЫБРАТЬ
	      			 	             |	ПродавцыСмены.Продавец КАК Продавец,
	      			 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродавцыСмены.Поле1) КАК КолСмен
	      			 	             |ИЗ
	      			 	             |	ПродавцыСмены КАК ПродавцыСмены
	      			 	             |
	      			 	             |СГРУППИРОВАТЬ ПО
	      			 	             |	ПродавцыСмены.Продавец");
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТипПродавца",Перечисления.ТБКТипыПродавцов.ОсновнойПродавец);

	ТЗПродавцыСмены	=	Запрос.Выполнить().Выгрузить();
	НужСтрока	=	ТЗПродавцыСмены.Найти(Продавец) ;
	Если НужСтрока= Неопределено тогда 
		НовСтр	=	ТЗПродавцыСмены.Добавить();
		НовСтр.Продавец	=	Продавец;
		НовСтр.КолСмен	=	1;
	иначе
		НужСтрока.КолСмен	=	НужСтрока.КолСмен + 1;	
	КонецЕсли;

	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Номенклатура КАК Номенклатура
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, ) КАК ТБКФокуснаяМотивацияСрезПоследних
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Номенклатура");
	ГруппыНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	
	Сч=0;
	Для каждого СтрокаПродавец из  ТЗПродавцыСмены цикл
		ИтогоБонус	=	0;
		
		ТаблицаРасшифровка = Новый ТаблицаЗначений;
		ТаблицаРасшифровка.Колонки.Добавить("ФокусГруппа");
		ТаблицаРасшифровка.Колонки.Добавить("ПланПродаж");
		ТаблицаРасшифровка.Колонки.Добавить("ФактПродаж");
		ТаблицаРасшифровка.Колонки.Добавить("КоличествоСверх");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаФакт");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаСверх");
		ТаблицаРасшифровка.Колонки.Добавить("СуммаПремии");

		
		Для каждого СтрокаГруппа из ГруппыНоменклатуры цикл
			БонусЗаГруппу			=	0;
			СуммаПродажСверхПлана	=	0;
			ТЗКолПродано	=	ПолучитьКоличествоПродажПоГруппе(СтрокаПродавец.Продавец, СтрокаГруппа.Номенклатура);			
			
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.ПланКоличество КАК ПланКоличество,
			      	 	             |	ТБКФокуснаяМотивацияСрезПоследних.Процент КАК Процент
			      	 	             |ИЗ
			      	 	             |	РегистрСведений.ТБКФокуснаяМотивация.СрезПоследних(, Номенклатура В ИЕРАРХИИ (&Номенклатура)) КАК ТБКФокуснаяМотивацияСрезПоследних
			      	 	             |
			      	 	             |УПОРЯДОЧИТЬ ПО
			      	 	             |	ПланКоличество");
			Запрос.УстановитьПараметр("Номенклатура",СтрокаГруппа.Номенклатура);
			резПроценты	=	Запрос.Выполнить().Выбрать();
			резПроценты.Следующий();    
			
			ПланКоличество	=  резПроценты.ПланКоличество ;   
			Процент			=  резПроценты.Процент ;

			Пояснение	=	"Продажи по плану: " + ПланКоличество + " шт. Процент от продаж сверх плана: " + Процент+"%";
			
			
			ИтогоПродано 		= 0;
			ИтогоПроданоСумма	=	0;
			Для каждого Строка из ТЗКолПродано цикл
				ИтогоПродано		=	ИтогоПродано + Строка.Количество; 
				ИтогоПроданоСумма	=	ИтогоПроданоСумма + Строка.Сумма;
				
				Если ИтогоПродано > ПланКоличество тогда
					Разница				= ИтогоПродано - ПланКоличество;
					КНачислению			= Мин(Разница, Строка.Количество); 
					КНачислениюСумма	= (Строка.Сумма /Строка.Количество)*Разница ;			
					
					ИтогоБонус				=	ИтогоБонус + КНачислениюСумма/100 * Процент;
					БонусЗаГруппу			=	БонусЗаГруппу + КНачислениюСумма/100 * Процент;
					СуммаПродажСверхПлана	=	СуммаПродажСверхПлана + КНачислениюСумма;
				КонецЕсли; 				
			КонецЦикла; 
			
			НовСтр	=	ТаблицаРасшифровка.Добавить();
			НовСтр.ФокусГруппа					=	СтрокаГруппа.Номенклатура;
			НовСтр.ПланПродаж					=	ПланКоличество;
			НовСтр.ФактПродаж					=	ИтогоПродано;
			НовСтр.КоличествоСверх				=	Макс(НовСтр.ФактПродаж - ПланКоличество,0);
			НовСтр.СуммаФакт					=	ИтогоПроданоСумма;
			НовСтр.СуммаСверх					=	СуммаПродажСверхПлана;
			НовСтр.СуммаПремии					=	БонусЗаГруппу;
			
		КонецЦикла;
		
		Если Сч	=	0 тогда
			ВывестиТаблицу(Элементы.Группа6, ТаблицаРасшифровка,ИтогоБонус,СтрокаПродавец, сч);			
		иначе
			ВывестиТаблицу(Элементы.Группа7, ТаблицаРасшифровка,ИтогоБонус,СтрокаПродавец, сч);
		КонецЕсли;	
		
		Сч = Сч+1;
	КонецЦикла;
	
	флПостроенаПлановаяЛичная = Истина;
		
КонецПроцедуры

Функция ПолучитьКоличествоПродажПоГруппе(Продавец_, Номенклатура)  
	
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Количество, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Количество, 0)
	      	 	             |			КОНЕЦ), 0) КАК Количество,
	      	 	             |	ЧекККМТовары.Ссылка.Дата КАК Дата,
	      	 	             |	ЕСТЬNULL(СУММА(ВЫБОР
	      	 	             |				КОГДА ЧекККМТовары.Ссылка.ВидОперации = &ВидПродажа
	      	 	             |					ТОГДА ЕСТЬNULL(ЧекККМТовары.Сумма, 0)
	      	 	             |				ИНАЧЕ ЕСТЬNULL(-ЧекККМТовары.Сумма, 0)
	      	 	             |			КОНЕЦ), 0) КАК Сумма
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.Ссылка.Проведен
	      	 	             |	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	      	 	             |	И (ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ
	      	 	             |			ИЛИ ЧекККМТовары.Ссылка.СтатусЧекаККМ = &СтатусЧекаККМ1)
	      	 	             |	И ЧекККМТовары.Продавец = &Продавец
	      	 	             |	И (ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура)
	      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)
	      	 	             |			ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2))
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ЧекККМТовары.Ссылка.Дата
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	Дата");
		
		
	Запрос.УстановитьПараметр("ДатаНач",НачалоМесяца(ТекущаяДата()));   	
	Запрос.УстановитьПараметр("ДатаКон",КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("Продавец",Продавец_);
	Запрос.УстановитьПараметр("СтатусЧекаККМ",Перечисления.СтатусыЧековККМ.Пробитый);
	Запрос.УстановитьПараметр("СтатусЧекаККМ1",Перечисления.СтатусыЧековККМ.Архивный);
	Запрос.УстановитьПараметр("ВидПродажа",Перечисления.ВидыОперацийЧекККМ.Продажа);
	
	Если Номенклатура.Код = "00048205445" тогда //Кальянные табаки
		Запрос.УстановитьПараметр("Номенклатура1",Справочники.Номенклатура.НайтиПоКоду("Ю2-00016080")); // Табаки кальянные БК	
		Запрос.УстановитьПараметр("Номенклатура2",Справочники.Номенклатура.НайтиПоКоду("Ю2-00016087")); // Кальянные смеси БК
	иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура1)","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ИЛИ ЧекККМТовары.Номенклатура В ИЕРАРХИИ (&Номенклатура2)","");
	КонецЕсли;
		
	Рез = Запрос.Выполнить().Выгрузить();
	Возврат рез;
	//Если рез.Следующий() тогда
	//	Возврат рез.Количество;
	//иначе
	//	Возврат 0;
	//КонецЕсли; 	
	
КонецФункции


#КонецОбласти


#область ДопФункции
Функция УдалениеНезначимыхСимволов (ВходящаяСтрока) Экспорт 

	ВходящаяСтрока = СокрЛП(ВходящаяСтрока);
    ДлинаСтроки = СтрДлина(ВходящаяСтрока);
    КонечнаяСтрока = Строка("");
     
      Пока ДлинаСтроки > 0 Цикл
           
            ПервыйСимвол = Лев(ВходящаяСтрока, 1);
           
            Если Не ПустаяСтрока(ПервыйСимвол) Тогда
                  КонечнаяСтрока = КонечнаяСтрока + ПервыйСимвол;
                  Отступ = 2;
                  ДлинаСтроки = ДлинаСтроки - 1;
          Иначе
                  КонечнаяСтрока = КонечнаяСтрока + "";
                  ВходящаяСтрока = СокрЛ(ВходящаяСтрока);
                  ДлинаСтроки = СтрДлина(ВходящаяСтрока);
                  Отступ = 1;
            КонецЕсли;
           
            Если ДлинаСтроки > 1 тогда
                  ВходящаяСтрока = Сред(ВходящаяСтрока, Отступ, ДлинаСтроки);
            Иначе
              КонечнаяСтрока = КонечнаяСтрока + Сред(ВходящаяСтрока, Отступ, 1);
                  ДлинаСтроки = 0;
            КонецЕсли;
           
      КонецЦикла;
     
      Возврат КонечнаяСтрока;
КонецФункции

&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	Если ВариантМотивации = 1 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПлановойМотивации();	
		Иначе
			ЗаполнитьВариантПлановойМотивации_Личный();
		КонецЕсли; 		
	иначеЕсли ВариантМотивации = 2 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();	
		Иначе
			ЗаполнитьВариантПроцентнойМотивации_Личный();
		КонецЕсли; 
		
	иначеЕсли ВариантМотивации = 3 тогда
		Если Переключатель = 0 тогда
			ЗаполнитьВариантПроцентнойМотивации();//он такой же	
		Иначе
			ЗаполнитьВариантФокуснойМотивации();
		КонецЕсли; 

	КонецЕсли;
	
	
КонецПроцедуры

Процедура ВывестиТаблицу(Родитель, ТаблицаРасшифровка, ИтогоБонус, СтрокаПродавец, СЧ);
	Родитель.Заголовок				=	Строка(СтрокаПродавец.Продавец) + "; Кол. смен: " + СтрокаПродавец.КолСмен + 
													"; Сумма премии: "+ИтогоБонус + "р.";  				
	Родитель.ОтображатьЗаголовок	=	Истина; 
			
	// добавим таблицу: сначала саму таблицу, потом колонку.
	Реквизиты = Новый Массив;
	Реквизиты.Добавить(Новый РеквизитФормы("ТаблицаНаФорме"+СЧ, Новый ОписаниеТипов("ТаблицаЗначений")));
	Для Каждого Ст ИЗ ТаблицаРасшифровка.Колонки Цикл
		Реквизиты.Добавить(Новый РеквизитФормы(Ст.Имя, Ст.ТипЗначения, "ТаблицаНаФорме"+СЧ));
	КонецЦикла;

	// добавим реквизиты на форму
	ИзменитьРеквизиты(Реквизиты);

	// добавим элементы формы
	Таб = Элементы.Добавить("ТаблицаНаФорме"+СЧ, Тип("ТаблицаФормы"),Родитель);
	Таб.ПутьКДанным = "ТаблицаНаФорме"+СЧ;
	Таб.Ширина	=	200;

	// запретим менять положение строк и сами строки, отключим командную панель
	Таб.ИзменятьСоставСтрок = Ложь;
	Таб.ИзменятьПорядокСтрок = Ложь;
	Таб.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;

	Для Каждого Ст ИЗ ТаблицаРасшифровка.Колонки Цикл
		Рек = Элементы.Добавить("Колонка" + Ст.Имя+сч, Тип("ПолеФормы"), Таб);
		Рек.Вид = ВидПоляФормы.ПолеНадписи;
		Рек.ПутьКДанным = "ТаблицаНаФорме"+СЧ + "." + Ст.Имя;
		Рек.Заголовок = Ст.Имя;
		Если  Ст.Имя	= "ФокусГруппа" тогда
			Рек.Ширина	= 30;	
		иначе
			Рек.Ширина	= 15;
		КонецЕсли;
	КонецЦикла;

	// заполним таблицу
	ЗначениеВРеквизитФормы(ТаблицаРасшифровка, "ТаблицаНаФорме"+СЧ);	
КонецПроцедуры
#КонецОбласти