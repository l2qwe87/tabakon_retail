
&НаКлиенте
Процедура Foo(Команда)
	FooНаСервере();
КонецПроцедуры

&НаСервере
Процедура FooНаСервере()
	об = ЭтаФорма.Магазин.ПолучитьОбъект();
		
	об.СкладУправляющейСистемы 	= Ложь;
	об.СкладПоступления 		= ЭтаФорма.Склад;
	об.СкладПродажи  			= ЭтаФорма.Склад; 			
	об.ОбменДанными.Загрузка	= Истина;
	об.Записать();
	
	об = ЭтаФорма.Касса.ПолучитьОбъект();
	
	об.КассаУправляющейСистемы 	= Ложь;			
	об.ОбменДанными.Загрузка 	= Истина;
	
	об.Записать();
КонецПроцедуры

&НаСервере
Процедура ПроставитьВСЕНаСервере()
	//FOO
	об = ЭтаФорма.Магазин.ПолучитьОбъект();
		
	об.СкладУправляющейСистемы 	= Ложь;
	об.СкладПоступления 		= ЭтаФорма.Склад;
	об.СкладПродажи  			= ЭтаФорма.Склад; 			
	об.ОбменДанными.Загрузка	= Истина;
	об.Записать();
	
	об = ЭтаФорма.Касса.ПолучитьОбъект();
	
	об.КассаУправляющейСистемы 	= Ложь;			
	об.ОбменДанными.Загрузка 	= Истина;
	
	об.Записать();
	//
	
	
	//Организация	
	МенеджерЗаписи = РегистрыСведений.ПрименениеСистемНалогообложения.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период 					= ТекущаяДатаСеанса();
	МенеджерЗаписи.Организация 				= Организация;
	МенеджерЗаписи.СистемаНалогообложения 	= Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	МенеджерЗаписи.ОсвобожденОтНДС			= Истина;
	МенеджерЗаписи.Записать(Истина);
	
	если ЗначениеЗаполнено(Фамилия) тогда
		МенеджерЗаписи = РегистрыСведений.ФИОФизЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ФизЛицо = Организация;
		МенеджерЗаписи.Период = ТекущаяДатаСеанса();
		МенеджерЗаписи.Фамилия = Фамилия;
		МенеджерЗаписи.Имя = Имя;
		МенеджерЗаписи.Отчество = Отчество;
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	//
	
	//КассаККМ
	Об_кассаККМ = КассаККМ.ПолучитьОбъект();
	Об_кассаККМ.Магазин				 	 =	Магазин;
	Об_кассаККМ.ШиринаЛенты				 =	48;
	Об_кассаККМ.ТипКассы				 =	Перечисления.ТипыКассККМ.ФискальныйРегистратор;
	Об_кассаККМ.НастройкаРаспределенияВыручкиПоСекциям = ПредопределенноеЗначение("Справочник.НастройкиРаспределенияВыручкиПоСекциямФР.РаспределениеПоУмолчанию");
	Об_кассаККМ.ИспользоватьБезПодключенияОборудования = Ложь;
	
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ПодключаемоеОборудование.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	      	 	             |ГДЕ
	      	 	             |	ПодключаемоеОборудование.Организация = &Организация
	      	 	             |	И ПодключаемоеОборудование.УстройствоИспользуется");
	Запрос.УстановитьПараметр("Организация",Организация);
	Рез = Запрос.Выполнить().Выгрузить();
		
	Об_кассаККМ.ПодключаемоеОборудование = Рез[0].ссылка;
	Об_кассаККМ.РабочееМесто			 =	Об_кассаККМ.ПодключаемоеОборудование.РабочееМесто;
	Об_кассаККМ.Записать();	
	//
	
	//Касса
	Об_касса = касса.ПолучитьОбъект();
	Об_касса.Магазин	=	Магазин;
	Об_касса.ПробиватьЧекиПоКассеККМ	=	истина;
	Об_касса.КассаККМ	=	КассаККМ;	
	Об_касса.Записать();
	//
	
	//Эквайринг
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ЭквайринговыеТерминалы.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	      	 	             |ГДЕ
	      	 	             |	НЕ ЭквайринговыеТерминалы.ПометкаУдаления");
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка из рез цикл
		Об = Строка.Ссылка.ПолучитьОбъект();
		Об.Организация = Организация;
		Об.Касса = КассаККМ;
		Об.наименование = "Сбербанк/"+Строка(Организация);
		Об.записать();
	КонецЦикла;
	//	
	
	//Магазин 
	ВидЦен = Справочники.ВидыЦен.НайтиПоНаименованию(СокрЛП(Магазин.Наименование));
	Если ЗначениеЗаполнено(ВидЦен) тогда
	
		Об_магазин = Магазин.ПолучитьОбъект();
		Об_магазин.ИспользоватьПрименениеЦен	=	Истина;
		
		НовоеПравилоЦенообразования = Справочники.ПравилаЦенообразования.НайтиПоНаименованию(СокрЛП(Магазин.Наименование));
		
		Если не ЗначениеЗаполнено(НовоеПравилоЦенообразования) тогда
			НовоеПравилоЦенообразования					=	Справочники.ПравилаЦенообразования.СоздатьЭлемент();
			НовоеПравилоЦенообразования.Наименование	=	СокрЛП(Об_магазин.Наименование);
			НовоеПравилоЦенообразования.ВидЦен			=	ВидЦен;
			НовоеПравилоЦенообразования.ЦенаВключаетНДС	=   ВидЦен.ЦенаВключаетНДС;
			НовоеПравилоЦенообразования.Записать();
		КонецЕсли;
		
		Об_магазин.ПравилоЦенообразования			=	НовоеПравилоЦенообразования.Ссылка;
		
		
		Об_магазин.Записать();
	иначе
		Сообщить("Внимание! Не найден Вид Цен",СтатусСообщения.Важное);
	КонецЕсли;
	
	
	//Пользователи 
	СпрПользователи	=	Справочники.Пользователи.Выбрать();
	
	Пока СпрПользователи.Следующий() цикл
		
		Если СпрПользователи.ПометкаУдаления тогда
			Продолжить;
		КонецЕсли;
		
		Если не ЗначениеЗаполнено(СпрПользователи.ФизЛицо) тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СпрПользователи.Подразделение) тогда
			Продолжить;
		КонецЕсли;

		
		Об = СпрПользователи.ПолучитьОбъект();
		Об.Подразделение = Магазин.Ссылка;
		Об.Магазин = Магазин.Ссылка;

		Попытка
			Об.Записать();
		Исключение
			Сообщить("Не удалось записать: "+Строка(Об));
		КонецПопытки;   			
	КонецЦикла;  
	
	//УдалитьВсюРегистрацию	
	Пл = ПланыОбмена.ОбменРозницаУправлениеТорговлей103.НайтиПоКоду("УТ");

	ПланыОбмена.УдалитьРегистрациюИзменений(пл);
	
	Пл	=	ПЛ.ПолучитьОбъект();
	
	НоваяСтрока			 = Пл.Склады.Добавить();
	НоваяСтрока.Склад	 = Магазин.Ссылка;
	
	НоваяСтрока 			= Пл.Организации.Добавить();
	НоваяСтрока.Организация	= Организация.Ссылка;
	
	Пл.ИспользоватьОтборПоСкладам		= Истина;
	Пл.ИспользоватьОтборПоОрганизациям	= Истина;

	Пл.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ПроставитьВСЕ(Команда)
	
	
	ПроставитьВСЕНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	спр = Справочники.Организации.Выбрать();
	
	если Спр.Следующий() тогда	
		Организация	=	спр.ссылка;
	КонецЕсли;
	
	спр = Справочники.Кассы.Выбрать();
	
	если Спр.Следующий() тогда	
		Касса	=	спр.ссылка;
	КонецЕсли;
	
	спр = Справочники.КассыККМ.Выбрать();
	
	если Спр.Следующий() тогда	
		КассаККМ	=	спр.ссылка;
	КонецЕсли;
	
	спр = Справочники.Магазины.НайтиПоНаименованию(КассаККМ.Наименование);
	Магазин	=	спр.ссылка;

	спр = Справочники.Склады.НайтиПоНаименованию(КассаККМ.Наименование);
	Склад	=	спр.ссылка;

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РабочееМесто = ПолучитьРабМесто();
	МенеджерОборудованияКлиент.УстановитьРабочееМесто(РабочееМесто);
	
	ПодключитьОборудование();
	
	СтруктураФИО = ПолучитьФИО(Организация);
	
	Фамилия 	= СтруктураФИО.Фамилия;
	Имя 		= СтруктураФИО.Имя;
	Отчество 	= СтруктураФИО.Отчество;
	
	Склад = ПроставитьСклад();

КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьРабМесто()
	
	СПР = Справочники.РабочиеМеста.Выбрать();
	Пока СПР.Следующий() цикл
		Если найти(Спр.Наименование,"Админ(NPOS)") тогда
			Возврат Спр.Ссылка;
		КонецЕсли;
	КонецЦикла;

КонецФункции

&НаСервереБезКонтекста
Функция  ПолучитьФИО(Организация)
	
	ФИО = СокрЛП(Сред(Организация.НаименованиеПолное,32));
	
	ПервыйПробел = Найти(ФИО," ");
	ВторойПробел = Найти(Сред(ФИО,ПервыйПробел + 1)," ");
	
	Фамилия 	 =  Сред(ФИО,1,ПервыйПробел - 1);
	Имя 	 	 =  Сред(ФИО,ПервыйПробел + 1,ВторойПробел - 1);
	Отчество 	 =  Сред(ФИО,ПервыйПробел + ВторойПробел + 1);
	
	Структура = Новый Структура;
	Структура.Вставить("Фамилия",Фамилия);
	Структура.Вставить("Имя",Имя);
	Структура.Вставить("Отчество",Отчество);

	Возврат Структура;

КонецФункции


&НаСервере
Процедура ПодключитьОборудование()
	СПР = Справочники.ПодключаемоеОборудование.Выбрать();
	Пока СПР.Следующий() цикл
		Если СокрЛП(СПР.Наименование) = "ФР1" тогда
			Об = Спр.ПолучитьОбъект();
			Об.УстройствоИспользуется	=	Истина;
			Об.Организация				=	Организация;
			Об.Записать();
		ИначеЕсли СокрЛП(СПР.Наименование) = "ФР2" тогда

			Об = Спр.ПолучитьОбъект();
			Об.УстройствоИспользуется	=	Ложь;
			Об.Организация				=	Организация;
			Об.Записать();
		КонецЕсли; 		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция  ПроставитьСклад()
	Склад = Справочники.Склады.НайтиПоНаименованию(СокрЛП(КассаККМ.Наименование));
	Если ЗначениеЗаполнено(Склад) тогда
		Возврат склад;	
	иначе
		НовыйСклад = Справочники.Склады.СоздатьЭлемент();
		НовыйСклад.Наименование	= СокрЛП(Магазин.Наименование);
		НовыйСклад.ТипСклада	=	Перечисления.ТипыСкладов.СкладскоеПомещение;
		НовыйСклад.Организация	=	Организация;
		НовыйСклад.Магазин		=	Магазин;
		НовыйСклад.Записать();
		Возврат НовыйСклад.Ссылка;
	КонецЕсли;
	
КонецФункции