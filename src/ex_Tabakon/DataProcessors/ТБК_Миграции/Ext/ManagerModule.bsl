


Функция НакатитьМиграции() ЭКСПОРТ
	
	Попытка
		Для Каждого миграция из Метаданные.Обработки.ТБК_Миграции.Команды Цикл
			//миграция.
			
			НакатитьМиграцию(миграция.Имя);
		КонецЦикла
	Исключение
		Сообщить("АААА");
	КонецПопытки;
	
КонецФункции



Функция НакатитьМиграцию(идентификатор)
	
	нз = РегистрыСведений.ТБКМиграции.СоздатьНаборЗаписей();
	нз.Отбор.Идентификатор.Установить(идентификатор,Истина);
	
	нз.Прочитать();
	

	Попытка
		Если нз.Количество() = 0 Тогда
			
			Выполнить(""+идентификатор+"();");
			
			запись= нз.Добавить();
			запись.ДатаПрименения = ТекущаяДата();
			запись.Применена = 1;
			запись.Идентификатор = идентификатор;
			нз.Записать(Истина);
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецФункции




Функция М_00001_ДатаЗапретИзменениеДанных20200701()
	Если НЕ Константы.ИспользоватьДатыЗапретаИзменения.Получить() Тогда
		Константы.ИспользоватьДатыЗапретаИзменения.Установить(Истина);
	КонецЕсли;
	
	дляВсехПользователей=Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей;
	
	нз = РегистрыСведений.ДатыЗапретаИзменения.СоздатьНаборЗаписей();
	нз.Отбор.Пользователь.Установить(дляВсехПользователей,истина);
	
	запись = нз.Добавить();
	запись.Пользователь = дляВсехПользователей;
	запись.Объект = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.Раздел = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.ДатаЗапрета = Дата(2020,06,30);
	
	нз.Записать(Истина);
КонецФункции

Функция М_00002_ПКО_До_20200706()
	
	выборкаВед = Документы.ТБК_ВедомостьОПродажахЗаДень.Выбрать(Дата(2020,07,01),Дата(2020,07,07));
	
	пока выборкаВед.Следующий() Цикл
		
		Для Каждого стр из выборкаВед.ВыемкаДенежныхСредств Цикл
			Если ЗначениеЗаполнено(стр.ПКО) Тогда
				об = стр.ПКО.ПолучитьОбъект();
				об.Приложение="1.1 Торговая розничная выручка - НАЛ";
				об.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(выборкаВед.ВедомостьПродажНеУчтено_ПКО) Тогда
			об = выборкаВед.ВедомостьПродажНеУчтено_ПКО.ПолучитьОбъект();
			об.Приложение="1.4 Торговая выручка - НЕУЧТЕНКА";
			об.Записать(РежимЗаписиДокумента.Запись);
		Конецесли;
		
	КонецЦикла;
	
КонецФункции

Функция М_00003_ДатаЗапретИзменениеДанных20200701()
	Если НЕ Константы.ИспользоватьДатыЗапретаИзменения.Получить() Тогда
		Константы.ИспользоватьДатыЗапретаИзменения.Установить(Истина);
	КонецЕсли;
	
	дляВсехПользователей=Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей;
	
	нз = РегистрыСведений.ДатыЗапретаИзменения.СоздатьНаборЗаписей();
	нз.Отбор.Пользователь.Установить(дляВсехПользователей,истина);
	
	запись = нз.Добавить();
	запись.Пользователь = дляВсехПользователей;
	запись.Объект = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.Раздел = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.ДатаЗапрета = Дата(2020,06,30);
	
	нз.Записать(Истина);
КонецФункции

Функция М_00004_ПКО_До_20200708()
	
	
	Если НЕ Константы.ИспользоватьДатыЗапретаИзменения.Получить() Тогда
		Константы.ИспользоватьДатыЗапретаИзменения.Установить(Истина);
	КонецЕсли;
	
	дляВсехПользователей=Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей;
	
	нз = РегистрыСведений.ДатыЗапретаИзменения.СоздатьНаборЗаписей();
	нз.Отбор.Пользователь.Установить(дляВсехПользователей,истина);
	
	запись = нз.Добавить();
	запись.Пользователь = дляВсехПользователей;
	запись.Объект = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.Раздел = ПланыВидовХарактеристик.РазделыДатЗапретаИзменения.ПустаяСсылка();
	запись.ДатаЗапрета = Дата(2020,06,30);
	
	нз.Записать(Истина);

	
	выборкаВед = Документы.ТБК_ВедомостьОПродажахЗаДень.Выбрать(Дата(2020,07,01),Дата(2020,07,08));
	
	пока выборкаВед.Следующий() Цикл
		
		Если ЗначениеЗаполнено(выборкаВед.ВедомостьПродажНеУчтено_ПКО) Тогда
			Если выборкаВед.ВыемкаДенежныхСредств.Количество() > 0 Тогда
				об = выборкаВед.ВедомостьПродажНеУчтено_ПКО.ПолучитьОбъект();
				об.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ;			
				об.КассаККМ = выборкаВед.КассаККМ;
				об.ДокументОснование = выборкаВед.ВыемкаДенежныхСредств[0].Выемка;
				об.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		Конецесли;
		
	КонецЦикла;
	
КонецФункции

Функция М_00005_ДатаЗапрета_Документ_Ваучеры()
	
	актуальнаДатаЗапрета = Дата(2020,06,30);
	датаКудаПеренести = КонецДня(актуальнаДатаЗапрета) + 1;
	
	ТБК_ПраваДоступа.СнятьДатуЗапрета();
	Документы.МаркетинговаяАкция.ПередвинутьДокументыНаДату(датаКудаПеренести);	
	ТБК_ПраваДоступа.УстановитьДатуЗапрета(актуальнаДатаЗапрета);
КонецФункции

Функция М_00006_РКО_ДДС_Поставщику()
	выборкаВед = Документы.ТБК_ВедомостьОПродажахЗаДень.Выбрать(Дата(2020,07,01),Дата(2020,09,01));
	
	Пока выборкаВед.Следующий() Цикл
		
		Для Каждого стр из выборкаВед.ОплатаПоставщику Цикл
			Если ЗначениеЗаполнено(стр.РКО) Тогда
				об = стр.РКО.ПолучитьОбъект();
				об.Приложение=Документы.ТБК_ВедомостьОПродажахЗаДень.ПолучитьСтатьяДДСОплатаПоставщику();
				об.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецФункции

Функция М_00007_ДатаЗапретИзменениеДанных20200712()
	
	актуальнаДатаЗапрета = Дата(2020,07,12);
	датаКудаПеренести = КонецДня(актуальнаДатаЗапрета) + 1;
	
	ТБК_ПраваДоступа.СнятьДатуЗапрета();
	Документы.МаркетинговаяАкция.ПередвинутьДокументыНаДату(датаКудаПеренести);	
	ТБК_ПраваДоступа.УстановитьДатуЗапрета(актуальнаДатаЗапрета);
КонецФункции

Функция М_00008_ЧисткаШтрихкодов()
	РегистрыСведений.Штрихкоды.ОбработатьТипыШтрихкодов();	
	РегистрыСведений.Штрихкоды.ЧисткаШтрихкодов();
КонецФункции


Функция М_00009_ДатаЗапретИзменениеДанных20200731()
	актуальнаДатаЗапрета = Дата(2020,07,31);
	датаКудаПеренести = КонецДня(актуальнаДатаЗапрета) + 1;
	
	ТБК_ПраваДоступа.СнятьДатуЗапрета();
	Документы.МаркетинговаяАкция.ПередвинутьДокументыНаДату(датаКудаПеренести);	
	ТБК_ПраваДоступа.УстановитьДатуЗапрета(актуальнаДатаЗапрета); 
КонецФункции


Функция М_00010_ВаучерыНаВесьЧек()
	выборкаСкидки = Справочники.СкидкиНаценки.Выбрать();
	
	Пока выборкаСкидки.Следующий() Цикл
		скидка = выборкаСкидки.Ссылка;
		Если скидка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		обСкидка= скидка.ПолучитьОбъект();
		обСкидка.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе;
		обСкидка.ОбменДанными.Загрузка = Истина;
		обСкидка.Записать();
	КонецЦикла;
	
	
	выборкаУсловияСкидок = Справочники.УсловияПредоставленияСкидокНаценок.Выбрать();
	Пока выборкаУсловияСкидок.Следующий() Цикл
		условиСкидка = выборкаУсловияСкидок.Ссылка;
		Если условиСкидка.ЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		
		Если условиСкидка.УсловиеПредоставления <> Перечисления.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж Тогда
			Продолжить;
		КонецЕсли;
		
		обУсловиеСкидок = условиСкидка.ПолучитьОбъект();
		обУсловиеСкидок.ОбластьОграничения = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе;
		обУсловиеСкидок.Наименование = "Сумма в документе не менее 0 руб.";
		обУсловиеСкидок.ОбменДанными.Загрузка = Истина;
		обУсловиеСкидок.Записать();
	КонецЦикла;
	
	
КонецФункции

Функция М_00011_ПроведениеСписаний()
	мНомераДокументов = Новый Массив();
	мНомераДокументов.Добавить("00000001896");
	мНомераДокументов.Добавить("00000001903");
	мНомераДокументов.Добавить("00000001895");
	мНомераДокументов.Добавить("00000001894");
	мНомераДокументов.Добавить("00000001914");
	мНомераДокументов.Добавить("00000001916");
	мНомераДокументов.Добавить("00000001928");
	мНомераДокументов.Добавить("00000001929");
	мНомераДокументов.Добавить("00000001061");
	мНомераДокументов.Добавить("00000001923");
	мНомераДокументов.Добавить("00000001950");
	мНомераДокументов.Добавить("00000001951");
	мНомераДокументов.Добавить("00000001930");
	мНомераДокументов.Добавить("00000001931");
	мНомераДокументов.Добавить("00000001947");
	мНомераДокументов.Добавить("00000001948");
	мНомераДокументов.Добавить("00000001956");
	мНомераДокументов.Добавить("00000001961");
	мНомераДокументов.Добавить("00000001962");
	мНомераДокументов.Добавить("00000001965");
	мНомераДокументов.Добавить("00000001971");
	мНомераДокументов.Добавить("00000001974");
	мНомераДокументов.Добавить("00000001964");
	мНомераДокументов.Добавить("00000001970");
	мНомераДокументов.Добавить("00000001968");
	мНомераДокументов.Добавить("00000001975");
	мНомераДокументов.Добавить("00000001998");
	мНомераДокументов.Добавить("00000001993");
	мНомераДокументов.Добавить("00000001988");
	мНомераДокументов.Добавить("00000001994");
	мНомераДокументов.Добавить("00000001990");
	мНомераДокументов.Добавить("00000001997");
	мНомераДокументов.Добавить("00000002031");
	мНомераДокументов.Добавить("00000002032");
	мНомераДокументов.Добавить("00000002003");
	мНомераДокументов.Добавить("00000002007");
	мНомераДокументов.Добавить("00000002015");
	мНомераДокументов.Добавить("00000002049");
	мНомераДокументов.Добавить("00000002036");
	мНомераДокументов.Добавить("00000002048");
	мНомераДокументов.Добавить("00000002050");
	мНомераДокументов.Добавить("00000002052");
	мНомераДокументов.Добавить("00000002058");
	мНомераДокументов.Добавить("00000002062");
	мНомераДокументов.Добавить("00000002054");
	мНомераДокументов.Добавить("00000002063");
	мНомераДокументов.Добавить("00000002064");
	мНомераДокументов.Добавить("00000002065");
	мНомераДокументов.Добавить("00000002075");
	мНомераДокументов.Добавить("00000002082");
	мНомераДокументов.Добавить("00000002068");
	мНомераДокументов.Добавить("00000002067");
	мНомераДокументов.Добавить("00000002356");
	мНомераДокументов.Добавить("00000002069");
	мНомераДокументов.Добавить("00000002079");
	мНомераДокументов.Добавить("00000002080");
	мНомераДокументов.Добавить("00000002076");
	мНомераДокументов.Добавить("00000002084");
	мНомераДокументов.Добавить("00000002093");
	мНомераДокументов.Добавить("00000002358");
	мНомераДокументов.Добавить("00000002088");
	мНомераДокументов.Добавить("00000002101");
	мНомераДокументов.Добавить("00000002359");
	мНомераДокументов.Добавить("00000002106");
	мНомераДокументов.Добавить("00000002112");
	мНомераДокументов.Добавить("00000002159");
	мНомераДокументов.Добавить("00000002357");
	мНомераДокументов.Добавить("00000002121");
	мНомераДокументов.Добавить("00000002115");
	мНомераДокументов.Добавить("00000002157");
	мНомераДокументов.Добавить("00000002461");
	мНомераДокументов.Добавить("00000002462");
	мНомераДокументов.Добавить("00000002160");
	мНомераДокументов.Добавить("00000002161");
	мНомераДокументов.Добавить("00000002211");
	мНомераДокументов.Добавить("00000002201");
	мНомераДокументов.Добавить("00000002194");
	мНомераДокументов.Добавить("00000002460");
	мНомераДокументов.Добавить("00000002199");
	мНомераДокументов.Добавить("00000002240");
	мНомераДокументов.Добавить("00000002289");
	мНомераДокументов.Добавить("00000002475");
	мНомераДокументов.Добавить("00000002308");
	мНомераДокументов.Добавить("00000002463");
	мНомераДокументов.Добавить("00000002469");
	мНомераДокументов.Добавить("00000002317");
	мНомераДокументов.Добавить("00000002322");
	мНомераДокументов.Добавить("00000002384");
	мНомераДокументов.Добавить("00000002329");
	мНомераДокументов.Добавить("00000002351");
	мНомераДокументов.Добавить("00000002354");
	мНомераДокументов.Добавить("00000002116");
	мНомераДокументов.Добавить("00000002095");
	мНомераДокументов.Добавить("00000002100");
	мНомераДокументов.Добавить("00000002382");
	мНомераДокументов.Добавить("00000002386");
	мНомераДокументов.Добавить("00000002398");
	мНомераДокументов.Добавить("00000002383");
	мНомераДокументов.Добавить("00000002380");
	мНомераДокументов.Добавить("00000002399");
	мНомераДокументов.Добавить("00000002401");
	мНомераДокументов.Добавить("00000002402");
	мНомераДокументов.Добавить("00000002421");
	мНомераДокументов.Добавить("00000002422");
	мНомераДокументов.Добавить("00000002424");
	мНомераДокументов.Добавить("00000002429");
	мНомераДокументов.Добавить("00000002420");
	мНомераДокументов.Добавить("00000002442");
	мНомераДокументов.Добавить("00000002444");
	мНомераДокументов.Добавить("00000002428");
	мНомераДокументов.Добавить("00000002452");
	мНомераДокументов.Добавить("00000002451");
	мНомераДокументов.Добавить("00000002651");
	мНомераДокументов.Добавить("00000002279");
	мНомераДокументов.Добавить("00000002511");
	мНомераДокументов.Добавить("00000002479");
	мНомераДокументов.Добавить("00000002652");
	мНомераДокументов.Добавить("00000002654");
	мНомераДокументов.Добавить("00000002726");
	мНомераДокументов.Добавить("00000002459");
	мНомераДокументов.Добавить("00000002215");
	мНомераДокументов.Добавить("00000002158");
	мНомераДокументов.Добавить("00000002156");
	мНомераДокументов.Добавить("00000002307");
	мНомераДокументов.Добавить("00000002468");
	мНомераДокументов.Добавить("00000002474");
	мНомераДокументов.Добавить("00000002478");
	мНомераДокументов.Добавить("00000002677");
	мНомераДокументов.Добавить("00000002504");
	мНомераДокументов.Добавить("00000002502");
	мНомераДокументов.Добавить("00000002516");
	мНомераДокументов.Добавить("00000002509");
	мНомераДокументов.Добавить("00000002512");
	мНомераДокументов.Добавить("00000002518");
	мНомераДокументов.Добавить("00000002515");
	мНомераДокументов.Добавить("00000002514");
	мНомераДокументов.Добавить("00000002714");
	мНомераДокументов.Добавить("00000002520");
	мНомераДокументов.Добавить("00000002692");
	мНомераДокументов.Добавить("00000002731");
	мНомераДокументов.Добавить("00000002643");
	мНомераДокументов.Добавить("00000002645");
	мНомераДокументов.Добавить("00000002723");
	мНомераДокументов.Добавить("00000002656");
	мНомераДокументов.Добавить("00000002763");
	мНомераДокументов.Добавить("00000002648");
	мНомераДокументов.Добавить("00000002650");
	мНомераДокументов.Добавить("00000002655");
	мНомераДокументов.Добавить("00000002691");
	мНомераДокументов.Добавить("00000002752");
	мНомераДокументов.Добавить("00000002676");
	мНомераДокументов.Добавить("00000002687");
	мНомераДокументов.Добавить("00000002679");
	мНомераДокументов.Добавить("00000002681");
	мНомераДокументов.Добавить("00000002682");
	мНомераДокументов.Добавить("00000002758");
	мНомераДокументов.Добавить("00000002689");
	мНомераДокументов.Добавить("00000002693");
	мНомераДокументов.Добавить("00000002721");
	мНомераДокументов.Добавить("00000002705");
	мНомераДокументов.Добавить("00000002720");
	мНомераДокументов.Добавить("00000002722");
	мНомераДокументов.Добавить("00000002713");
	мНомераДокументов.Добавить("00000003048");
	мНомераДокументов.Добавить("00000002728");
	мНомераДокументов.Добавить("00000002732");
	мНомераДокументов.Добавить("00000002736");
	мНомераДокументов.Добавить("00000002761");
	мНомераДокументов.Добавить("00000002745");
	мНомераДокументов.Добавить("00000002748");
	мНомераДокументов.Добавить("00000002742");
	мНомераДокументов.Добавить("00000002780");
	мНомераДокументов.Добавить("00000002750");
	
	
	ТБК_ПраваДоступа.СнятьДатуЗапрета();
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого номер из мНомераДокументов цикл
		сДок = Документы.СписаниеТоваров.НайтиПоНомеру(номер,Дата(2020,07,01));
		
		Если ЗначениеЗаполнено(сДок)И(НЕ сДок.Проведен) Тогда 
			сДок.ПолучитьОбъект().Записать(РежимЗаписиДокумента.Проведение);			
			снятьСРегистрацииКОбменуСсылку(сДок);
		КонецЕсли;
	КонецЦикла;  	
	
	актуальнаДатаЗапрета = Дата(2020,07,31);
	ТБК_ПраваДоступа.УстановитьДатуЗапрета(актуальнаДатаЗапрета); 

КонецФункции


Функция снятьСРегистрацииКОбменуСсылку(ссылка)
	планы = ПланыОбмена.ОбменРозницаУправлениеТорговлей103.Выбрать();
	Пока планы.Следующий() Цикл
		Если планы.НомерПринятого > 0 Тогда
			ПланыОбмена.УдалитьРегистрациюИзменений(планы.Ссылка ,ссылка);
		КонецЕсли;
	Конеццикла;

КонецФункции