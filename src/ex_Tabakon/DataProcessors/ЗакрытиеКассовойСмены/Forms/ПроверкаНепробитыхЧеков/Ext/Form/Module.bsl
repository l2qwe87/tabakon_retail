
&НаСервере
&Вместо("ТаблицаНеПробитыхЧеков")
Функция ТБКТаблицаНеПробитыхЧеков()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЧекККМОплата.Ссылка КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ЧекККМОплата.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМОплата.Сумма
	|			ИНАЧЕ -ЧекККМОплата.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	МАКСИМУМ(ЧекККМОплата.ДанныеПереданыВБанк) КАК ДанныеПереданыВБанк
	|ПОМЕСТИТЬ ВложенныйЗапрос
	|ИЗ
	|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
	|ГДЕ
	|	ЧекККМОплата.Ссылка.Проведен
	|	И ЧекККМОплата.Ссылка.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.ПустаяСсылка)
	|	И (ЧекККМОплата.ВидОплаты.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта)
	|			ИЛИ ЧекККМОплата.ВидОплаты.ПлатежнаяСистема = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежнойСистемыККТ.СертификатНСПК))
	|	И ЧекККМОплата.Ссылка.КассаККМ = &КассаККМ
	|	И ЧекККМОплата.Ссылка.Дата >= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМОплата.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЧекККМ.Ссылка КАК ДокументНаККМ,
	|	СУММА(ВЫБОР
	|			КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМ.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.Сумма, 0)) КАК ОплатаКартой,
	|	СУММА(ВЫБОР
	|			КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА ЧекККМ.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Возврат,
	|	ЧекККМ.Дата КАК Дата,
	|	&ВозможностьИзмененияЧек КАК ВозможностьИзменения,
	|	&ВидДокументаЧек КАК ВидДокумента,
	|	ЕСТЬNULL(ВложенныйЗапрос.ДанныеПереданыВБанк, ЛОЖЬ) КАК ЕстьОперацииПереданныеВБанк,
	|	ВЫБОР
	|		КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ТипЧека,
	|	0 КАК ТипОплаты
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВложенныйЗапрос КАК ВложенныйЗапрос
	|		ПО ЧекККМ.Ссылка = ВложенныйЗапрос.Ссылка
	|ГДЕ
	|	ЧекККМ.Проведен
	|	И ЧекККМ.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.ПустаяСсылка)
	|	И ЧекККМ.КассаККМ = &КассаККМ
	|	И ЧекККМ.Дата >= &Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМ.Ссылка,
	|	ЧекККМ.Дата,
	|	ЕСТЬNULL(ВложенныйЗапрос.ДанныеПереданыВБанк, ЛОЖЬ),
	|	ВЫБОР
	|		КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйКассовыйОрдер.Ссылка,
	|	0,
	|	0,
	|	РасходныйКассовыйОрдер.СуммаДокумента,
	|	РасходныйКассовыйОрдер.Дата,
	|	&ВозможностьИзмененияРКО,
	|	&ВидДокументаРКО,
	|	ЛОЖЬ,
	|	1,
	|	0
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.КассаККМ = &КассаККМ
	|	И РасходныйКассовыйОрдер.ХозяйственнаяОперация = &ХозяйственнаяОперацияРКО
	|	И РасходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
	|	И РасходныйКассовыйОрдер.Проведен
	|	И НЕ РасходныйКассовыйОрдер.ПробитЧек
	|	И НЕ РасходныйКассовыйОрдер.СменаЗакрыта
	|	И РасходныйКассовыйОрдер.Дата >= &Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.СуммаДокумента,
	|	0,
	|	0,
	|	ПриходныйКассовыйОрдер.Дата,
	|	&ВозможностьИзмененияПКО,
	|	&ВидДокументаПКО,
	|	ЛОЖЬ,
	|	0,
	|	0
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|ГДЕ
	|	ПриходныйКассовыйОрдер.КассаККМ = &КассаККМ
	|	И ПриходныйКассовыйОрдер.ХозяйственнаяОперация = &ПоступлениеОплатыОтКлиента
	|	И ПриходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
	|	И ПриходныйКассовыйОрдер.Проведен
	|	И НЕ ПриходныйКассовыйОрдер.ПробитЧек
	|	И НЕ ПриходныйКассовыйОрдер.СменаЗакрыта
	|	И ПриходныйКассовыйОрдер.Дата >= &Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОплатаОтПокупателяПлатежнойКартой.Ссылка,
	|	ВЫБОР
	|		КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = &ПоступлениеОплатыОтКлиента
	|			ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента,
	|	ВЫБОР
	|		КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = &ХозяйственнаяОперацияРКО
	|			ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ОплатаОтПокупателяПлатежнойКартой.Дата,
	|	&ВозможностьИзмененияЭО,
	|	&ВидДокументаЭО,
	|	ОплатаОтПокупателяПлатежнойКартой.ОплатаВыполнена,
	|	ВЫБОР
	|		КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = &ПоступлениеОплатыОтКлиента
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	1
	|ИЗ
	|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
	|ГДЕ
	|	ОплатаОтПокупателяПлатежнойКартой.КассаККМ = &КассаККМ
	|	И ОплатаОтПокупателяПлатежнойКартой.ПробиватьЧекиПоКассеККМ
	|	И ОплатаОтПокупателяПлатежнойКартой.Проведен
	|	И НЕ ОплатаОтПокупателяПлатежнойКартой.ПробитЧек
	|	И НЕ ОплатаОтПокупателяПлатежнойКартой.СменаЗакрыта
	|	И ОплатаОтПокупателяПлатежнойКартой.Дата >= &Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияБезналичнойОплаты.Ссылка,
	|	РегистрацияБезналичнойОплаты.СуммаДокумента,
	|	0,
	|	0,
	|	РегистрацияБезналичнойОплаты.Дата,
	|	&ВозможностьИзмененияРБО,
	|	&ВидДокументаРБО,
	|	ЛОЖЬ,
	|	0,
	|	0
	|ИЗ
	|	Документ.РегистрацияБезналичнойОплаты КАК РегистрацияБезналичнойОплаты
	|ГДЕ
	|	РегистрацияБезналичнойОплаты.КассаККМ = &КассаККМ
	|	И РегистрацияБезналичнойОплаты.ХозяйственнаяОперация = &ПоступлениеОплатыОтКлиента
	|	И РегистрацияБезналичнойОплаты.Проведен
	|	И НЕ РегистрацияБезналичнойОплаты.ПробитЧек
	|	И РегистрацияБезналичнойОплаты.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|	И РегистрацияБезналичнойОплаты.Дата >= &ДатаНачалаСмены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.ДокументНаККМ КАК ДокументНаККМ,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.ОплатаКартой КАК ОплатаКартой,
	|	ТаблицаДокумента.Возврат КАК Возврат,
	|	ИСТИНА КАК Пометка,
	|	ТаблицаДокумента.ВозможностьИзменения КАК ВозможностьИзменения,
	|	ТаблицаДокумента.ВидДокумента КАК ВидДокумента,
	|	ТаблицаДокумента.ЕстьОперацииПереданныеВБанк КАК ЕстьОперацииПереданныеВБанк,
	|	ТаблицаДокумента.ТипЧека КАК ТипЧека,
	|	ТаблицаДокумента.ТипОплаты КАК ТипОплаты
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокумента.Дата";
	
	Запрос.УстановитьПараметр("КассаККМ"                  ,   Объект.КассаККМ);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияРКО"  ,   Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Запрос.УстановитьПараметр("ПоступлениеОплатыОтКлиента"  , Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	
	Запрос.УстановитьПараметр("ВидДокументаЧек", "ЧекККМ");
	Запрос.УстановитьПараметр("ВидДокументаПКО", "ПриходныйКассовыйОрдер");
	Запрос.УстановитьПараметр("ВидДокументаРКО", "РасходныйКассовыйОрдер");
	Запрос.УстановитьПараметр("ВидДокументаРБО", "РегистрацияБезналичнойОплаты");
	Запрос.УстановитьПараметр("ВидДокументаЭО" , "ОплатаОтПокупателяПлатежнойКартой");
	
	ВозможностьИзмененияЧек = ПравоДоступа("Изменение", Метаданные.Документы.ЧекККМ);
	ВозможностьИзмененияПКО = ПравоДоступа("Изменение", Метаданные.Документы.ПриходныйКассовыйОрдер);
	ВозможностьИзмененияРКО = ПравоДоступа("Изменение", Метаданные.Документы.РасходныйКассовыйОрдер);
	ВозможностьИзмененияРБО = ПравоДоступа("Изменение", Метаданные.Документы.РегистрацияБезналичнойОплаты);
	ВозможностьИзмененияЭО  = ПравоДоступа("Изменение", Метаданные.Документы.ОплатаОтПокупателяПлатежнойКартой);
	
	Запрос.УстановитьПараметр("ВозможностьИзмененияЧек", ВозможностьИзмененияЧек);
	Запрос.УстановитьПараметр("ВозможностьИзмененияПКО", ВозможностьИзмененияПКО);
	Запрос.УстановитьПараметр("ВозможностьИзмененияРКО", ВозможностьИзмененияРКО);
	Запрос.УстановитьПараметр("ВозможностьИзмененияРБО", ВозможностьИзмененияРБО);
	Запрос.УстановитьПараметр("ВозможностьИзмененияЭО" , ВозможностьИзмененияЭО);
	
	Запрос.УстановитьПараметр("ДатаНачалаСмены", ДатаНачалаСмены);
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата() - 24*60*60); // вик 2024-07-02
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	ИтогСуммаПродаж    = ТаблицаЗапроса.Итог("Сумма");
	ИтогСуммаВозвратов = ТаблицаЗапроса.Итог("Возврат");
	ИтогОплатаКартой   = ТаблицаЗапроса.Итог("ОплатаКартой");
	
	ОсновнаяТаблица.Загрузить(ТаблицаЗапроса);
КонецФункции

&НаСервере
&Вместо("ПолучитьСуммуПродаж")
Процедура ТБКПолучитьСуммуПродаж()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВложенныйЗапрос.Возврат) КАК Возврат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМ.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА ЧекККМ.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА ЧекККМ.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК Возврат
	|	ИЗ
	|		Документ.ЧекККМ КАК ЧекККМ
	|	ГДЕ
	|		ЧекККМ.Проведен
	|		И ЧекККМ.КассаККМ = &КассаККМ
	|		И НЕ ЧекККМ.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|		И НЕ ЧекККМ.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Аннулированный)
	|		И НЕ ЧекККМ.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Отложенный)
	|		И ЧекККМ.Дата >= &Дата
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПриходныйКассовыйОрдер.СуммаДокумента,
	|		0
	|	ИЗ
	|		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|	ГДЕ
	|		ПриходныйКассовыйОрдер.КассаККМ = &КассаККМ
	|		И ПриходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		И ПриходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
	|		И ПриходныйКассовыйОрдер.Проведен
	|		И НЕ ПриходныйКассовыйОрдер.СменаЗакрыта
	|		И ПриходныйКассовыйОрдер.Дата >= &Дата
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		РасходныйКассовыйОрдер.СуммаДокумента
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|	ГДЕ
	|		РасходныйКассовыйОрдер.КассаККМ = &КассаККМ
	|		И РасходныйКассовыйОрдер.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|		И РасходныйКассовыйОрдер.ПробиватьЧекиПоКассеККМ
	|		И РасходныйКассовыйОрдер.Проведен
	|		И НЕ РасходныйКассовыйОрдер.СменаЗакрыта
	|		И РасходныйКассовыйОрдер.Дата >= &Дата
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = &ПоступлениеОплатыОтКлиента
	|				ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ОплатаОтПокупателяПлатежнойКартой.ХозяйственнаяОперация = &ХозяйственнаяОперацияРКО
	|				ТОГДА ОплатаОтПокупателяПлатежнойКартой.СуммаДокумента
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
	|	ГДЕ
	|		ОплатаОтПокупателяПлатежнойКартой.КассаККМ = &КассаККМ
	|		И ОплатаОтПокупателяПлатежнойКартой.ПробиватьЧекиПоКассеККМ
	|		И ОплатаОтПокупателяПлатежнойКартой.Проведен
	|		И НЕ ОплатаОтПокупателяПлатежнойКартой.СменаЗакрыта
	|		И ОплатаОтПокупателяПлатежнойКартой.Дата >= &Дата
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РегистрацияБезналичнойОплаты.СуммаДокумента,
	|		0
	|	ИЗ
	|		Документ.РегистрацияБезналичнойОплаты КАК РегистрацияБезналичнойОплаты
	|	ГДЕ
	|		РегистрацияБезналичнойОплаты.КассаККМ = &КассаККМ
	|		И РегистрацияБезналичнойОплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|		И РегистрацияБезналичнойОплаты.Проведен
	|		И РегистрацияБезналичнойОплаты.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|		И РегистрацияБезналичнойОплаты.Дата >= &ДатаНачалаСмены) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("КассаККМ", Объект.КассаККМ);
	Запрос.УстановитьПараметр("ДатаНачалаСмены", ДатаНачалаСмены);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияРКО"  ,   Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	Запрос.УстановитьПараметр("ПоступлениеОплатыОтКлиента"  , Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	Запрос.УстановитьПараметр("Дата", ТекущаяДата() - 24*60*60);
	
	Результат = Запрос.Выполнить();
	Выборка   = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СуммаПродаж    = Выборка.Сумма;
		СуммаВозвратов = Выборка.Возврат;
		
		Если НЕ ЗначениеЗаполнено(СуммаПродаж) Тогда
			СуммаПродаж = 0;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СуммаВозвратов) Тогда
			СуммаВозвратов = 0;
		КонецЕсли;
		
	Иначе
		СуммаПродаж    = 0;
		СуммаВозвратов = 0;
	КонецЕсли;

КонецПроцедуры
