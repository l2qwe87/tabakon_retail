
&НаСервере
Процедура ОтправитьНаСервере()
	Попытка
		Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
		Прокси	=	Массив[0];
	Исключение
		Прокси	=	Неопределено;	
	КонецПопытки;

	Если Прокси = Неопределено тогда	
		Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПроктиWStbk();
		Если Прокси <> Неопределено тогда
			Массив	=	новый Массив;
			Массив.Добавить(Прокси);
			Адрес_ВебСоединение	=	ПоместитьВоВременноеХранилище(Массив,ЭтаФорма.УникальныйИдентификатор); 
		КонецЕсли;
	КонецЕсли;
	
	Идент			=	Строка(Новый УникальныйИдентификатор);
	флУспех			=	Неопределено;
	НужДат			=	ОбщегоНазначения.ТекущаяДатаИзИнтернета();
	НужОтправитель	=	Строка(Пользователи.ТекущийПользователь());
	
	
	Если Прокси <> Неопределено тогда
		
		эл	=	Новый Структура;
		эл.Вставить("Отправитель",НужОтправитель);
		эл.Вставить("Дата",Строка(НужДат));
		эл.Вставить("Магазин",Строка(ОбщегоНазначения.ПолучитьМагазин()));
		эл.Вставить("ИдентификаторСообщения",Идент);
		эл.Вставить("Сообщение",Сообщение);
		эл.Вставить("Тема",СокрЛП(ТемаОтбор));

		JS = ОбщегоНазначения.СтруктураВjson_Общая(эл);

		флУспех	=	Прокси.WriteMessage(JS);
		
		Если флУспех = "Истина" тогда
			НовыйЭл							=	Справочники.ТБКСообщенияУТРозница.СоздатьЭлемент();
			НовыйЭл.Дата					=	НужДат;
			НовыйЭл.Отправитель				=	НужОтправитель;
			НовыйЭл.Сообщение				=	Сообщение;
			НовыйЭл.Отправлено				=	Истина;
			НовыйЭл.ИдентификаторСообщения	=	Идент;
			НовыйЭл.Тема					=	СокрЛП(ТемаОтбор);

			НовыйЭл.Записать();
			
			НоваяСтрока	=	Объект.Чат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,НовыйЭл);

			Элементы.ТабличнаяЧасть1.ТекущаяСтрока	=	НоваяСтрока.ПолучитьИдентификатор();

			Сообщение	=	"";  
		иначе
			Сообщить("Не удалось отправить сообщение! " + флУспех);
		КонецЕсли;		
		
	КонецЕсли;	
	

КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	Если СокрЛП(Сообщение) <>"" тогда
		ОтправитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	Объект.Чат.Очистить();
	
	//Загружаем все сообщения согласно отборам
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКСообщенияУТРозница.Дата КАК Дата,
	      	 	             |	ТБКСообщенияУТРозница.Отправитель КАК Отправитель,
	      	 	             |	ТБКСообщенияУТРозница.Сообщение КАК Сообщение,
	      	 	             |	ТБКСообщенияУТРозница.Прочитано КАК Прочитано,
	      	 	             |	ТБКСообщенияУТРозница.Отправлено КАК Отправлено,
	      	 	             |	ТБКСообщенияУТРозница.Тема КАК Тема,
	      	 	             |	ТБКСообщенияУТРозница.ИдентификаторСообщения КАК ИдентификаторСообщения
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКСообщенияУТРозница КАК ТБКСообщенияУТРозница
	      	 	             |ГДЕ
	      	 	             |	ТБКСообщенияУТРозница.Дата >= &Дата
	      	 	             |	И НЕ ТБКСообщенияУТРозница.ПометкаУдаления
	      	 	             |	И ТБКСообщенияУТРозница.Тема = &Тема
	      	 	             |	И ТБКСообщенияУТРозница.Дата >= &ДатаНачОтбор
	      	 	             |	И ТБКСообщенияУТРозница.Дата <= &ДатаКонОтбор
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	Дата,
	      	 	             |	Отправитель");
	Запрос.УстановитьПараметр("Дата",ТекущаяДата() - 90*24*60*60);
	
	//отборы
	Если Не ЗначениеЗаполнено(ТемаОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Тема = &Тема","");
	иначе
		запрос.УстановитьПараметр("Тема",ТемаОтбор);
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ДатаНачОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Дата >= &ДатаНачОтбор","");
	иначе
		запрос.УстановитьПараметр("ДатаНачОтбор",ДатаНачОтбор);
	КонецЕсли;  
	
	Если Не ЗначениеЗаполнено(ДатаКонОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Дата <= &ДатаКонОтбор","");
	иначе
		запрос.УстановитьПараметр("ДатаКонОтбор",ДатаКонОтбор);
	КонецЕсли; 	
	//КонецОтборы
	
	Рез	=	Запрос.Выполнить().Выгрузить();
	Объект.Чат.Загрузить(Рез);
	
	//Марк 2024-02-12
	//Заполнение картинок                                                             
	КаталогИб = СтрокаСоединенияИнформационнойБазы();
	КаталогИб = СтрЗаменить(КаталогИб, "File=""", "");
	КаталогИб = СтрЗаменить(КаталогИб, """;", "");

	ЕстьФото = Ложь;
	СтрокаПутиКатинок = "";
	для каждого Строка Из Объект.Чат Цикл
		//заполнение путей фоток для отккрытия
		КаталогChat = НайтиФайлы(КаталогИб + "\photo\chat", "*");
		для каждого Фотка Из КаталогChat Цикл
			если НЕ СтрНайти(Фотка.ИмяБезРасширения, Строка.ИдентификаторСообщения) Тогда
				Продолжить;
			КонецЕсли;
			Строка.ПутьКартинки.Добавить(Фотка.ПолноеИмя);
			ЕстьФото = Истина;
		КонецЦикла;

		Если ЕстьФото Тогда
			Строка.Фото = Истина;
			ЕстьФото = Ложь;
		КонецЕсли;
	КонецЦикла;
	//КонецМарк
	
	Если Рез.Количество() >0 тогда
		Элементы.ТабличнаяЧасть1.ТекущаяСтрока	=	Объект.Чат[Рез.Количество()-1].ПолучитьИдентификатор();
	КонецЕсли;

	
	//Проставляем метку прочитано в УТ и грузим темы
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ТБКСообщенияУТРозница.Ссылка КАК Ссылка,
	      	 	             |	ТБКСообщенияУТРозница.ИдентификаторСообщения КАК ИдентификаторСообщения
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБКСообщенияУТРозница КАК ТБКСообщенияУТРозница
	      	 	             |ГДЕ
	      	 	             |	ТБКСообщенияУТРозница.Отправитель = &Отправитель
	      	 	             |	И НЕ ТБКСообщенияУТРозница.Прочитано
	      	 	             |	И ТБКСообщенияУТРозница.Тема = &Тема
	      	 	             |	И ТБКСообщенияУТРозница.Дата >= &ДатаНачОтбор
	      	 	             |	И ТБКСообщенияУТРозница.Дата <= &ДатаКонОтбор");
	Запрос.УстановитьПараметр("Отправитель","Офис");
	
	//Отборы
	Если Не ЗначениеЗаполнено(ТемаОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Тема = &Тема","");
	иначе
		запрос.УстановитьПараметр("Тема",ТемаОтбор);
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ДатаНачОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Дата >= &ДатаНачОтбор","");
	иначе
		запрос.УстановитьПараметр("ДатаНачОтбор",ДатаНачОтбор);
	КонецЕсли;  
	
	Если Не ЗначениеЗаполнено(ДатаКонОтбор) тогда
		Запрос.Текст	=	СтрЗаменить(запрос.Текст,"И ТБКСообщенияУТРозница.Дата <= &ДатаКонОтбор","");
	иначе
		запрос.УстановитьПараметр("ДатаКонОтбор",ДатаКонОтбор);
	КонецЕсли;  	
	//КонецОтборы

	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Количество() <> 0 или Элементы.ТемаОтбор.СписокВыбора.Количество() = 0 тогда
	
		Прокси  = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User_tbk", "http://mx.tbkon.ru:1777/ut/ws/tbk?wsdl", 10, Истина);
		Массив	=	новый Массив;
		Массив.Добавить(Прокси);
		Адрес_ВебСоединение	=	ПоместитьВоВременноеХранилище(Массив,ЭтаФорма.УникальныйИдентификатор); 
		
		Если Прокси <> Неопределено тогда
			Пока Рез.Следующий() цикл
				флУспех	=	Прокси.WriteMessageTag(Рез.ИдентификаторСообщения);
				Если флУспех = "Истина" тогда
					Об	=	Рез.Ссылка.ПолучитьОбъект();	
					Об.Прочитано	=	Истина;
					Об.Записать();
				КонецЕсли;			
			КонецЦикла;	
			
			Если Элементы.ТемаОтбор.СписокВыбора.Количество() = 0 тогда
				Темы		=	Прокси.getChatTem();
				ТемыМассив	=	ОбщегоНазначения.jsonВСтруктура_Общая(Темы); 
				
				Элементы.ТемаОтбор.СписокВыбора.ЗагрузитьЗначения(ТемыМассив); 
			КонецЕсли;

		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

	
&НаКлиенте
Процедура ПроверкаНовыхСообщений() экспорт
	Сообщение	=	элементы.сообщение.ТекстРедактирования;
	ПроверкаСообщенийнаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверкаСообщенийнаСервере()
  Запрос	=	Новый Запрос("ВЫБРАТЬ
        	 	             |	ТБКСообщенияУТРозница.Ссылка КАК Ссылка,
        	 	             |	ТБКСообщенияУТРозница.ИдентификаторСообщения КАК ИдентификаторСообщения,
        	 	             |	ТБКСообщенияУТРозница.Дата КАК Дата,
        	 	             |	ТБКСообщенияУТРозница.Отправитель КАК Отправитель,
        	 	             |	ТБКСообщенияУТРозница.Сообщение КАК Сообщение,
        	 	             |	ТБКСообщенияУТРозница.Тема КАК Тема
        	 	             |ИЗ
        	 	             |	Справочник.ТБКСообщенияУТРозница КАК ТБКСообщенияУТРозница
        	 	             |ГДЕ
        	 	             |	ТБКСообщенияУТРозница.Отправитель = &Отправитель
        	 	             |	И НЕ ТБКСообщенияУТРозница.Прочитано");
    Запрос.УстановитьПараметр("Отправитель","Офис");
    Рез = Запрос.Выполнить().Выбрать();
    
    Если Рез.Количество() = 0 тогда
    	Возврат
    КонецЕсли;
    
    Попытка
    	Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
    	Прокси	=	Массив[0];
    Исключение
    	Прокси	=	Неопределено;	
    КонецПопытки;

    Если Прокси = Неопределено тогда	
    	Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПроктиWStbk();
    КонецЕсли;

    Если Прокси <> Неопределено тогда
    	Пока Рез.Следующий() цикл
    		флУспех	=	Прокси.WriteMessageTag(Рез.ИдентификаторСообщения);
    		Если флУспех = "Истина" тогда
    			Об	=	Рез.Ссылка.ПолучитьОбъект();	
    			Об.Прочитано	=	Истина;
    			Об.Записать();
    		КонецЕсли;
    		
    		НовСтрока	=	Объект.Чат.Добавить();
    		ЗаполнитьЗначенияСвойств(НовСтрока,Рез);
    		НовСтрока.Отправлено = Истина;
			
			
			Если Объект.Чат.Количество() >0 тогда 
   				Элементы.ТабличнаяЧасть1.ТекущаяСтрока	=	Объект.Чат[Объект.Чат.Количество()-1].ПолучитьИдентификатор();
			КонецЕсли;
    	КонецЦикла;		
    КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Попытка
		Если не Адрес_ВебСоединение  = "" тогда
			Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
			Массив[0] = Неопределено;
		КонецЕсли;
	Исключение
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ПроверкаНовыхСообщений",20);
КонецПроцедуры

&НаКлиенте
Процедура СообщениеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	Если Найти(Текст,символы.ПС) тогда
		Если СокрЛП(Текст) <>"" тогда 
			Сообщение	=	СтрЗаменить(Текст,символы.ПС,"");
			ОтправитьНаСервере();
		КонецЕсли;
	КонецЕсли;  
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьДокументНаСервере(НомерДокумента)
	НужДокПерем	=	Документы.ПеремещениеТоваров.НайтиПоНомеру(НомерДокумента,ТекущаяДата());
	НужДокЗаказ	=	Документы.ЗаказПокупателя.НайтиПоНомеру(НомерДокумента,ТекущаяДата());
	
	Структура	=	Новый Структура;
	Структура.Вставить("НужДокПерем",НужДокПерем);
	Структура.Вставить("НужДокЗаказ",НужДокЗаказ);

	Возврат Структура;
КонецФункции

&НаКлиенте
Процедура ОткрытьДокумент(Команда) 
	//ДопОбработка
	Если НомерДокумента = "" тогда
		ТекСтрока	=	Элементы.ТабличнаяЧасть1.ТекущиеДанные;
		Если ТекСтрока <> Неопределено тогда
			ВыделенноеСообщение	=	ТекСтрока.Сообщение;
			Поз		=	Найти(НРег(ВыделенноеСообщение),"перемещение");
			Поз1	=	Найти(НРег(ВыделенноеСообщение),"заказа");
			Поз2	=	Найти(НРег(ВыделенноеСообщение),"заказ №");
			
			Если Поз >0 тогда
				НомерДокумента	=	Сред(ВыделенноеСообщение,Поз + 12,11);					
			КонецЕсли;	
			
			Если Поз1 >0 тогда
				НомерДокумента	=	Сред(ВыделенноеСообщение,Поз1 + 7,11);					
			КонецЕсли;	
			
			Если Поз2 >0 тогда
				НомерДокумента	=	Сред(ВыделенноеСообщение,Поз2 + 7,11);					
			КонецЕсли;	
		
		КонецЕсли;
	КонецЕсли;
	
	
	СтруктураДок	=	ПолучитьДокументНаСервере(НомерДокумента);
	
	Если не СтруктураДок.НужДокПерем.Пустая() тогда  
		ПараметрыФормы = Новый Структура("Ключ", СтруктураДок.НужДокПерем);
		ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента", ПараметрыФормы);
		НомерДокумента	=	"";
		Возврат;
	КонецЕсли;
	
	Если не СтруктураДок.НужДокЗаказ.Пустая() тогда  
		ПараметрыФормы = Новый Структура("Ключ", СтруктураДок.НужДокЗаказ);
		ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаДокумента", ПараметрыФормы);
		НомерДокумента	=	"";
		Возврат;
	КонецЕсли;
	Сообщить("Не найден документ: "+НомерДокумента);
	НомерДокумента	=	"";

КонецПроцедуры


&НаКлиенте
Процедура ТемаОтборПриИзменении(Элемент)
	ЗагрузитьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачОтборПриИзменении(Элемент)
	ЗагрузитьНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДатаКонОтборПриИзменении(Элемент)
	ЗагрузитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура БыстрйОтветНажатие(Элемент)
	ДопТекст	=	"";
	ТекСтрока	=	Элементы.ТабличнаяЧасть1.ТекущиеДанные;
	Если ТекСтрока <> Неопределено тогда
		ВыделенноеСообщение	=	ТекСтрока.Сообщение;
		Поз		=	Найти(НРег(ВыделенноеСообщение),"перемещение");
		Поз1	=	Найти(НРег(ВыделенноеСообщение),"заказа");
		Поз2	=	Найти(НРег(ВыделенноеСообщение),"заказ №");

		Если Поз >0 тогда
			ДопТекст	=	"Перемещение " + Сред(ВыделенноеСообщение,Поз + 12,11)+" ";					
		КонецЕсли;	
		
		Если Поз1 >0 тогда
			ДопТекст	=	"Заказ " + Сред(ВыделенноеСообщение,Поз + 21,11)+" ";					
		КонецЕсли;		
		
		Если Поз2 >0 тогда
			ДопТекст	=	"Заказ " + Сред(ВыделенноеСообщение,Поз + 21,11)+" ";					
		КонецЕсли;	
	КонецЕсли; 	
	
	Сообщение	=	ДопТекст + Элемент.Заголовок;
	Элементы.БыстрыеОтветы.Скрыть();
КонецПроцедуры   

&НаКлиенте
Процедура ТабличнаяЧасть1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//Марк 2024-02-26
	Если Поле.Имя = "ТабличнаяЧасть1Фото" Тогда
		для каждого Фотка из Элемент.ТекущиеДанные.ПутьКартинки Цикл
			ЗапуститьПриложение(Фотка.Значение);
		КонецЦикла;
	КонецЕсли;
	//КонецМарк
	
	
	СтандартнаяОбработка = Ложь;

	ТекСтрока	=	Элементы.ТабличнаяЧасть1.ТекущиеДанные;
	Если ТекСтрока <> Неопределено тогда
		ВыделенноеСообщение	=	ТекСтрока.Сообщение;
		Поз		=	Найти(НРег(ВыделенноеСообщение),"перемещение");
		Поз1	=	Найти(НРег(ВыделенноеСообщение),"заказа");
		Поз2	=	Найти(НРег(ВыделенноеСообщение),"заказ №");
		
		Если Поз >0 тогда
			НомерДокумента	=	Сред(ВыделенноеСообщение,Поз + 12,11);					
		КонецЕсли;	
		
		Если Поз1 >0 тогда
			НомерДокумента	=	Сред(ВыделенноеСообщение,Поз1 + 7,11);					
		КонецЕсли;	
		
		Если Поз2 >0 тогда
			НомерДокумента	=	Сред(ВыделенноеСообщение,Поз2 + 7,11);					
		КонецЕсли;			
	КонецЕсли;

		
	
	СтруктураДок	=	ПолучитьДокументНаСервере(НомерДокумента);
	
	Если не СтруктураДок.НужДокПерем.Пустая() тогда  
		ПараметрыФормы = Новый Структура("Ключ", СтруктураДок.НужДокПерем);
		ОткрытьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента", ПараметрыФормы);
		НомерДокумента	=	"";
		Возврат;
	КонецЕсли;
	
	Если не СтруктураДок.НужДокЗаказ.Пустая() тогда  
		ПараметрыФормы = Новый Структура("Ключ", СтруктураДок.НужДокЗаказ);
		ОткрытьФорму("Документ.ЗаказПокупателя.Форма.ФормаДокумента", ПараметрыФормы);
		НомерДокумента	=	"";
		Возврат;
	КонецЕсли;
	НомерДокумента	=	"";

КонецПроцедуры
