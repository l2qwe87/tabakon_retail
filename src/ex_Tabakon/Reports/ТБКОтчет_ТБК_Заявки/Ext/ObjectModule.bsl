Функция ПолучитьТаблицу()

	//Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User_tbk", "http://192.168.0.22:1488/tabakon_1c8_SMV/ws/tbk?wsdl");
	Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User_tbk", "http://mx.tbkon.ru:1777/ut/ws/tbk?wsdl");
	Если Прокси = Неопределено Тогда
	
		Сообщить("нет связи с ут. попробуйте позже");	
	    Возврат Неопределено;
		
	КонецЕсли;
	Структурjs = Новый Структура;
	Структурjs.Вставить("ДатаНач", 		"");
	Структурjs.Вставить("ДатаКон", 		"");
	Структурjs.Вставить("Магазин", 		"");		
	Структурjs.Вставить("Админ", 		"");
	Структурjs.Вставить("СтатусЗаявки", ""); 
	
	Для каждого Параметр Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Если Параметр.Использование Тогда
			
			Если Строка(Параметр.Параметр) = "ДатаКон" или Строка(Параметр.Параметр) = "ДатаНач"  Тогда
				Структурjs[Строка(Параметр.Параметр)] = Строка(Параметр.Значение.Дата);
			ИНаче
				Структурjs[Строка(Параметр.Параметр)] = Строка(Параметр.Значение);	
			КонецЕсли;	
		
		КонецЕсли;
			
	
	КонецЦикла;
	
	json = ОбщегоНазначения.СтруктураВjson_Общая(Структурjs);
	
	Ответ = Прокси.TBK_RequestsReportAPI(json);
	
	МассивОтвета = ОбщегоНазначения.jsonВСтруктура_Общая(Ответ);
    ТаблицаЗначений = ИнтеграцияИС.МассивВТаблицуЗначений(МассивОтвета);
	Возврат ТаблицаЗначений;
	
КонецФункции // ()

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
    СтандартнаяОбработка = Ложь;
    Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
    
    Настройки = КомпоновщикНастроек.ПолучитьНастройки();
    ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
    ТЗ = ПолучитьТаблицу();
	
	Если ТЗ = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
    ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТЗ", ТЗ);
                                  
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
    ДокументРезультат.Очистить();
            
    ПроцессорВывода = Новый
    ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	
КонецПроцедуры

