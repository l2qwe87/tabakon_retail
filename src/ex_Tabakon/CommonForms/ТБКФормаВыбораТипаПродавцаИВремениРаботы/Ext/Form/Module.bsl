
&НаКлиенте
Процедура ОК(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если НеНадоПроверять = Ложь тогда 		
		Если не ЗначениеЗаполнено(Продавец_Основной) и не ЗначениеЗаполнено(Продавец_Второй)
			и не ЗначениеЗаполнено(Продавец_Ночной) и не ЗначениеЗаполнено(Продавец_Младший) тогда
			
			Отказ = Истина;
			Сообщить("Не заполнены продавцы!");
		КонецЕсли;
		
		
		Если не ЗначениеЗаполнено(ВремяСмены_Основной) и не ЗначениеЗаполнено(ВремяСмены_Второй)
			и не ЗначениеЗаполнено(ВремяСмены_Ночной) и не ЗначениеЗаполнено(ВремяСмены_Младший) тогда
			
			Отказ = Истина;
			Сообщить("Не заполнены время смены!");
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(Продавец_Основной) и ВремяСмены_Основной = 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнено время смены основного продавца!");
		КонецЕсли; 

		Если ЗначениеЗаполнено(Продавец_Второй) и ВремяСмены_Второй = 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнено время смены второго продавца!");
		КонецЕсли; 

		Если ЗначениеЗаполнено(Продавец_Младший) и ВремяСмены_Младший = 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнено время смены младшего продавца!");
		КонецЕсли; 

		Если ЗначениеЗаполнено(Продавец_Ночной) и ВремяСмены_Ночной = 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнено время смены ночного продавца!");
		КонецЕсли; 
		
		
		Если не ЗначениеЗаполнено(Продавец_Основной) и ВремяСмены_Основной > 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнен основной продавец!");
		КонецЕсли; 

		Если не ЗначениеЗаполнено(Продавец_Второй) и ВремяСмены_Второй  > 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнен второй продавец!");
		КонецЕсли; 

		Если не ЗначениеЗаполнено(Продавец_Младший) и ВремяСмены_Младший  > 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнен младший продавец!");
		КонецЕсли; 

		Если не ЗначениеЗаполнено(Продавец_Ночной) и ВремяСмены_Ночной  > 0 тогда			
			Отказ = Истина;
			Сообщить("Не заполнен ночной продавца!");
		КонецЕсли; 
		
		
		Если ВремяСмены_Основной >24 или ВремяСмены_Второй >24
			или ВремяСмены_Младший >24 или ВремяСмены_Ночной >24 тогда
			
			Отказ = Истина;
			Сообщить("Время смены превысило 24!");
		КонецЕсли; 
		
		Если не отказ тогда
			ЗаписатьДанные();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура  ЗаписатьДанные()
	Рег =  РегистрыСведений.ТБКСменыСотрудников.СоздатьНаборЗаписей();
	Рег.Отбор.КассоваяСмена.Установить(КассоваяСмена);
	Рег.Записать();

	Если ЗначениеЗаполнено(Продавец_Основной) тогда
		Рег = РегистрыСведений.ТБКСменыСотрудников.СоздатьМенеджерЗаписи();
		Рег.ВремяСмены		=	ВремяСмены_Основной;
		Рег.Продавец		=	Продавец_Основной;
		Рег.КассоваяСмена	=	КассоваяСмена;
		Рег.ТипПродавца		=	Перечисления.ТБКТипыПродавцов.ОсновнойПродавец;  
		Рег.ПродавецНаЗамену=	ПродавецНаЗамену;   
		Рег.Записать();	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Продавец_Второй) тогда
		Рег = РегистрыСведений.ТБКСменыСотрудников.СоздатьМенеджерЗаписи();
		Рег.ВремяСмены		=	ВремяСмены_Второй;
		Рег.Продавец		=	Продавец_Второй;
		Рег.КассоваяСмена	=	КассоваяСмена;
		Рег.ТипПродавца		=	Перечисления.ТБКТипыПродавцов.ВторойПродавец;
		Рег.Записать();	
	КонецЕсли;  	
	
	Если ЗначениеЗаполнено(Продавец_Младший) тогда
		Рег = РегистрыСведений.ТБКСменыСотрудников.СоздатьМенеджерЗаписи();
		Рег.ВремяСмены		=	ВремяСмены_Младший;
		Рег.Продавец		=	Продавец_Младший;
		Рег.КассоваяСмена	=	КассоваяСмена;
		Рег.ТипПродавца		=	Перечисления.ТБКТипыПродавцов.МладшийПродавец;
		Рег.Записать();	
	КонецЕсли;
	
		Если ЗначениеЗаполнено(Продавец_Ночной) тогда
		Рег = РегистрыСведений.ТБКСменыСотрудников.СоздатьМенеджерЗаписи();
		Рег.ВремяСмены		=	ВремяСмены_Ночной;
		Рег.Продавец		=	Продавец_Ночной;
		Рег.КассоваяСмена	=	КассоваяСмена;
		Рег.ТипПродавца		=	Перечисления.ТБКТипыПродавцов.НочнойПродавец;
		Рег.Записать();	
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
Процедура Выйти(Команда)
	НеНадоПроверять	=	истина;
	Этаформа.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	КассоваяСмена.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.КассоваяСмена КАК КассоваяСмена
	      	 	             |ГДЕ
	      	 	             |	КассоваяСмена.Статус = &Статус
	      	 	             |	И КассоваяСмена.КассаККМ = &КассаККМ
	      	 	             |
	      	 	             |УПОРЯДОЧИТЬ ПО
	      	 	             |	КассоваяСмена.Дата УБЫВ");
	Запрос.УстановитьПараметр("Статус",		Перечисления.СтатусыКассовойСмены.Открыта);
	Запрос.УстановитьПараметр("КассаККМ",	Параметры.КассаККМ);
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() >0 тогда
		КассоваяСмена	=	Рез[0].ссылка;
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	ТБКСменыСотрудников.Продавец КАК Продавец,
		      	 	             |	ТБКСменыСотрудников.ТипПродавца КАК ТипПродавца,
		      	 	             |	ТБКСменыСотрудников.ВремяСмены КАК ВремяСмены,
		      	 	             |	ТБКСменыСотрудников.ПродавецНаЗамену КАК ПродавецНаЗамену
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.ТБКСменыСотрудников КАК ТБКСменыСотрудников
		      	 	             |ГДЕ
		      	 	             |	ТБКСменыСотрудников.КассоваяСмена = &КассоваяСмена");
		Запрос.УстановитьПараметр("КассоваяСмена",КассоваяСмена);
		Рез = Запрос.Выполнить().Выгрузить();
		
		Для каждого Строка из Рез цикл
			Если Строка.ТипПродавца	=	Перечисления.ТБКТипыПродавцов.ОсновнойПродавец тогда
				Продавец_Основной	=	Строка.Продавец;
				ВремяСмены_Основной	=	Строка.ВремяСмены; 
				ПродавецНаЗамену	=	Строка.ПродавецНаЗамену;
				
			ИначеЕсли Строка.ТипПродавца	=	Перечисления.ТБКТипыПродавцов.ВторойПродавец тогда
				Продавец_Второй		=	Строка.Продавец;
				ВремяСмены_Второй	=	Строка.ВремяСмены;
				
			ИначеЕсли Строка.ТипПродавца	=	Перечисления.ТБКТипыПродавцов.МладшийПродавец тогда
				Продавец_Младший	=	Строка.Продавец;
				ВремяСмены_Младший	=	Строка.ВремяСмены;
				
			ИначеЕсли Строка.ТипПродавца	=	Перечисления.ТБКТипыПродавцов.НочнойПродавец тогда
				Продавец_Ночной		=	Строка.Продавец;
				ВремяСмены_Ночной	=	Строка.ВремяСмены;  
			КонецЕсли;
			
		КонецЦикла;		
	иначе
		Сообщить("Внимание! Нет открытой смены!");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПродавецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораПродавца", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сотрудник" 		, Истина);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК",
			ПараметрыФормы, УникальныйИдентификатор,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры
		

&НаКлиенте
Процедура ОповещениеОткрытьФормуВыбораПродавца(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт 	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда		
		ЭтаФорма[ЭтаФорма.ТекущийЭлемент.Имя] = РезультатОткрытияФормы;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Продавец1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораПродавца", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сотрудник" 		, Истина);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК",
			ПараметрыФормы, УникальныйИдентификатор,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры


&НаКлиенте
Процедура Продавец2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораПродавца", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сотрудник" 		, Истина);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК",
			ПараметрыФормы, УникальныйИдентификатор,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры


&НаКлиенте
Процедура Продавец3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
		СтандартнаяОбработка = ЛОЖЬ;
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВыбораПродавца", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Сотрудник" 		, Истина);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораВРМК",
			ПараметрыФормы, УникальныйИдентификатор,,,, ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

