Процедура ЗаполнитьОстаткиНоменклатурыБезУчетаХарактеристик(Объект, ИмяТабличнойЧасти, ДатаПоследнегоИнвента = '00010101') Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатуры.Номенклатура,
	|	ТаблицаНоменклатуры.Склад
	|ПОМЕСТИТЬ ТаблицаВЗапрос
	|ИЗ
	|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток - ТоварыНаСкладахОстатки.РезервОстаток КАК ОстатокБезРезерва
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			(Номенклатура,  Склад) В
	|				(ВЫБРАТЬ
	|					ТаблицаВЗапрос.Номенклатура,
	|					ТаблицаВЗапрос.Склад
	|				ИЗ
	|					ТаблицаВЗапрос КАК ТаблицаВЗапрос)) КАК ТоварыНаСкладахОстатки";
	
	ТаблицаНоменклатуры = Объект[ИмяТабличнойЧасти].Выгрузить();
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ТаблицаНоменклатуры);
	
	Результат = Запрос.Выполнить();
	ТаблицаОстатков = Результат.Выгрузить();
	
	СтруктураПоиска = Новый Структура;
	МассивОстатков = Новый Массив;
	
	Для каждого СтрокаТаблицыНоменклатуры Из Объект[ИмяТабличнойЧасти] Цикл
		Если не СтрокаТаблицыНоменклатуры.ХарактеристикиИспользуются тогда
	
			СтруктураПоиска.Вставить("Номенклатура"  , СтрокаТаблицыНоменклатуры.Номенклатура);
			СтруктураПоиска.Вставить("Склад"         , СтрокаТаблицыНоменклатуры.Склад);
			
			МассивСтрок = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
			
			Если МассивСтрок.Количество() > 0  Тогда
				СтрокаТаблицыНоменклатуры.Остаток = МассивСтрок[0].ОстатокБезРезерва;
				МассивСтрок[0].ОстатокБезРезерва = МассивСтрок[0].ОстатокБезРезерва - СтрокаТаблицыНоменклатуры.Количество;
			Иначе
				СтрокаТаблицыНоменклатуры.Остаток = 0;
			КонецЕсли;  		
		КонецЕсли;	 
					
		//Вик 2023-05-31
		Если ЗначениеЗаполнено(ДатаПоследнегоИнвента) тогда
			Запрос	=	Новый запрос("ВЫБРАТЬ
			      	 	             |	ПродажиОбороты.КоличествоОборот КАК КоличествоОборот
			      	 	             |ИЗ
			      	 	             |	РегистрНакопления.Продажи.Обороты(&ДатаНач, , , Номенклатура = &Номенклатура) КАК ПродажиОбороты");
			Запрос.УстановитьПараметр("ДатаНач", ДатаПоследнегоИнвента+1);
			Запрос.УстановитьПараметр("Номенклатура", СтрокаТаблицыНоменклатуры.Номенклатура); 
			Рез = Запрос.Выполнить().Выбрать();
			Если Рез.Следующий() тогда
				СтрокаТаблицыНоменклатуры.Продано = Рез.КоличествоОборот; 
			иначе
				СтрокаТаблицыНоменклатуры.Продано = 0; 
            КонецЕсли;
		КонецЕсли;
		//   

	КонецЦикла;
	
КонецПроцедуры

&Вместо("ЦенаПродажи")
Функция ТБКЦенаПродажи(Магазин, Дата, Номенклатура, Характеристика, Упаковка, ПриводитьКМинимальнойЦене)
	// Вставить содержимое метода.  
  
	УстановитьПривилегированныйРежим(Истина);
	Цена = 0;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		СтруктураРеквизитов = Новый Структура;
		СтруктураРеквизитов.Вставить("ТипНоменклатуры");
		СтруктураРеквизитов.Вставить("Номинал");
		СтруктураРеквизитов.Вставить("ЦеноваяГруппа");
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, СтруктураРеквизитов);
		Если РеквизитыНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда
			
			Цена = РеквизитыНоменклатуры.Номинал;
			Если Цена = Неопределено Тогда
				Цена = 0;
			Иначе
				Если ЗначениеЗаполнено(Упаковка) Тогда
					КоэффициентУпаковкиВходящий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Упаковка, "Коэффициент");
					Если ЗначениеЗаполнено(КоэффициентУпаковкиВходящий) Тогда
						Цена = Окр(Цена * КоэффициентУпаковкиВходящий, 2);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		
		Иначе
			Если ЗначениеЗаполнено(Магазин) Тогда
				РеквизитыМагазина = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Магазин, "ВидМинимальныхЦенПродажи, ИспользоватьПрименениеЦен, ПравилоЦенообразования, ФорматМагазина");
				ИспользоватьПрименениеЦен = (РеквизитыМагазина.ИспользоватьПрименениеЦен = Истина) И (ПолучитьФункциональнуюОпцию("ИспользоватьПрименениеЦен") = Истина);
				
				ЦенаВыборки = 0;
				УпаковкаЦены = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
				КоэффициентУпаковки = 1;
				
				Если ИспользоватьПрименениеЦен Тогда
				
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	Цены.Упаковка КАК Упаковка,
					|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0) КАК КоэффициентУпаковки,
					|	Цены.Цена КАК Цена,
					|	1 КАК Приоритет,
					|	Цены.Период КАК Период
					|ПОМЕСТИТЬ ТаблицаЦен
					|ИЗ
					|	РегистрСведений.ДействующиеЦеныНоменклатуры КАК Цены
					|ГДЕ
					|	Цены.ОбъектЦенообразования = &Магазин
					|	И Цены.Номенклатура = &Номенклатура
					|	И Цены.Характеристика = &Характеристика
					|	И Цены.Период <= &Дата
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Цены.Упаковка,
					|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0),
					|	Цены.Цена,
					|	2,
					|	Цены.Период
					|ИЗ
					|	РегистрСведений.ДействующиеЦеныНоменклатуры КАК Цены
					|ГДЕ
					|	Цены.ОбъектЦенообразования = &Магазин
					|	И Цены.Номенклатура = &Номенклатура
					|	И Цены.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
					|	И Цены.Номенклатура.ВидНоменклатуры.ИспользоватьЦенуНоменклатуры
					|	И Цены.Период <= &Дата
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	ТаблицаЦен.Упаковка КАК Упаковка,
					|	ТаблицаЦен.КоэффициентУпаковки КАК КоэффициентУпаковки,
					|	ТаблицаЦен.Цена КАК Цена
					|ИЗ
					|	ТаблицаЦен КАК ТаблицаЦен
					|
					|УПОРЯДОЧИТЬ ПО
					|	ТаблицаЦен.Приоритет,
					|	ТаблицаЦен.Период УБЫВ";  
					
					//Вик 2024-09-27     
					Если Строка(Магазин) = "ЛенинскийТест1.2" тогда
						Магазин	=	Справочники.Магазины.НайтиПоНаименованию("Ленинский2ПДВ");					
					КонецЕсли;
					//  
	
					Запрос.УстановитьПараметр("Дата", Дата);
					Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
					Запрос.УстановитьПараметр("Характеристика", Характеристика);
					Запрос.УстановитьПараметр("Магазин", Магазин);
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						Если ЗначениеЗаполнено(Выборка.Цена) Тогда
							Если ЗначениеЗаполнено(Выборка.Цена) Тогда
								ЦенаВыборки = Выборка.Цена;
							КонецЕсли;	
							Если ЗначениеЗаполнено(Выборка.Упаковка) Тогда
								УпаковкаЦены = Выборка.Упаковка;
							КонецЕсли;
							Если ЗначениеЗаполнено(Выборка.КоэффициентУпаковки) Тогда
								КоэффициентУпаковки = Выборка.КоэффициентУпаковки;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
				
					ИспользоватьАссортимент = ПолучитьФункциональнуюОпцию("УстанавливатьВидыЦенВАссортименте")
						И АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(Магазин);
					ВидЦен = Неопределено;
					
					Если ИспользоватьАссортимент Тогда
						
						Запрос = Новый Запрос;
						
						Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
						|	Ассортимент.ВидЦен КАК ВидЦен
						|
						|ИЗ
						|	РегистрСведений.Ассортимент КАК Ассортимент
						|ГДЕ
						|	Ассортимент.Номенклатура = &Номенклатура
						|	И Ассортимент.ОбъектПланирования = &ФорматМагазина
						|	И Ассортимент.Период <= &Дата
						|
						|УПОРЯДОЧИТЬ ПО
						|	Ассортимент.Период УБЫВ
						|";
						Запрос.УстановитьПараметр("ФорматМагазина", РеквизитыМагазина.ФорматМагазина);
						Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
						Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда
							Если ЗначениеЗаполнено(Выборка.ВидЦен) Тогда
								ВидЦен = Выборка.ВидЦен;
							КонецЕсли;
						КонецЕсли;
					Иначе
						ИспользоватьЦеновыеГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
						Если ИспользоватьЦеновыеГруппы Тогда
							ЦеноваяГруппа = РеквизитыНоменклатуры.ЦеноваяГруппа;
							Если ЗначениеЗаполнено(ЦеноваяГруппа) Тогда
								Запрос = Новый Запрос;
								Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
								|	ЦеновыеГруппы.ВидЦен КАК ВидЦен
								|ИЗ
								|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
								|ГДЕ
								|	ЦеновыеГруппы.Ссылка = &Ссылка
								|	И ЦеновыеГруппы.ЦеноваяГруппа = &ЦеноваяГруппа";
								Запрос.УстановитьПараметр("Ссылка", РеквизитыМагазина.ПравилоЦенообразования);
								Запрос.УстановитьПараметр("ЦеноваяГруппа", ЦеноваяГруппа);
								Выборка = Запрос.Выполнить().Выбрать();
								Если Выборка.Следующий() Тогда
									Если ЗначениеЗаполнено(Выборка.ВидЦен) Тогда
										ВидЦен = Выборка.ВидЦен;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						Если НЕ ЗначениеЗаполнено(ВидЦен) И ЗначениеЗаполнено(РеквизитыМагазина.ПравилоЦенообразования) Тогда
							ВидЦен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыМагазина.ПравилоЦенообразования, "ВидЦен");
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ВидЦен) Тогда
						
						Запрос = Новый Запрос;
						Запрос.Текст = 
						"ВЫБРАТЬ
						|	Цены.Упаковка КАК Упаковка,
						|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0) КАК КоэффициентУпаковки,
						|	Цены.Цена КАК Цена,
						|	1 КАК Приоритет,
						|	Цены.Период КАК Период
						|ПОМЕСТИТЬ ТаблицаЦен
						|ИЗ
						|	РегистрСведений.ЦеныНоменклатуры КАК Цены
						|ГДЕ
						|	Цены.ВидЦены = &ВидЦен
						|	И Цены.Номенклатура = &Номенклатура
						|	И Цены.Характеристика = &Характеристика
						|	И Цены.Период <= &Дата
						|
						|ОБЪЕДИНИТЬ ВСЕ
						|
						|ВЫБРАТЬ
						|	Цены.Упаковка,
						|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0),
						|	Цены.Цена,
						|	2,
						|	Цены.Период
						|ИЗ
						|	РегистрСведений.ЦеныНоменклатуры КАК Цены
						|ГДЕ
						|	Цены.ВидЦены = &ВидЦен
						|	И Цены.Номенклатура = &Номенклатура
						|	И Цены.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
						|	И Цены.Номенклатура.ВидНоменклатуры.ИспользоватьЦенуНоменклатуры
						|	И Цены.Период <= &Дата
						|;
						|
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
						|	ТаблицаЦен.Упаковка КАК Упаковка,
						|	ТаблицаЦен.КоэффициентУпаковки КАК КоэффициентУпаковки,
						|	ТаблицаЦен.Цена КАК Цена
						|ИЗ
						|	ТаблицаЦен КАК ТаблицаЦен
						|
						|УПОРЯДОЧИТЬ ПО
						|	ТаблицаЦен.Приоритет,
						|	ТаблицаЦен.Период УБЫВ";
						
						Запрос.УстановитьПараметр("Дата", Дата);
						Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
						Запрос.УстановитьПараметр("Характеристика", Характеристика);
						Запрос.УстановитьПараметр("ВидЦен", ВидЦен);		
							
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда
							Если ЗначениеЗаполнено(Выборка.Цена) Тогда
								ЦенаВыборки = Выборка.Цена;
							КонецЕсли;	
							Если ЗначениеЗаполнено(Выборка.Упаковка) Тогда
								УпаковкаЦены = Выборка.Упаковка;
							КонецЕсли;
							Если ЗначениеЗаполнено(Выборка.КоэффициентУпаковки) Тогда
								КоэффициентУпаковки = Выборка.КоэффициентУпаковки;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если ПриводитьКМинимальнойЦене И ЗначениеЗаполнено(РеквизитыМагазина.ВидМинимальныхЦенПродажи) Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	Цены.Упаковка КАК Упаковка,
					|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0) КАК КоэффициентУпаковки,
					|	Цены.Цена КАК Цена,
					|	1 КАК Приоритет,
					|	Цены.Период КАК Период
					|ПОМЕСТИТЬ ТаблицаЦен
					|ИЗ
					|	РегистрСведений.ЦеныНоменклатуры КАК Цены
					|ГДЕ
					|	Цены.ВидЦены = &ВидМинимальныхЦенПродажи
					|	И Цены.Номенклатура = &Номенклатура
					|	И Цены.Характеристика = &Характеристика
					|	И Цены.Период <= &Дата
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	Цены.Упаковка,
					|	ЕСТЬNULL(Цены.Упаковка.Коэффициент, 0),
					|	Цены.Цена,
					|	2,
					|	Цены.Период
					|ИЗ
					|	РегистрСведений.ЦеныНоменклатуры КАК Цены
					|ГДЕ
					|	Цены.ВидЦены = &ВидМинимальныхЦенПродажи
					|	И Цены.Номенклатура = &Номенклатура
					|	И Цены.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
					|	И Цены.Номенклатура.ВидНоменклатуры.ИспользоватьЦенуНоменклатуры
					|	И Цены.Период <= &Дата
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	ТаблицаЦен.Упаковка КАК Упаковка,
					|	ТаблицаЦен.КоэффициентУпаковки КАК КоэффициентУпаковки,
					|	ТаблицаЦен.Цена КАК Цена
					|ИЗ
					|	ТаблицаЦен КАК ТаблицаЦен
					|
					|УПОРЯДОЧИТЬ ПО
					|	ТаблицаЦен.Приоритет,
					|	ТаблицаЦен.Период УБЫВ";
					Запрос.УстановитьПараметр("ВидМинимальныхЦенПродажи", РеквизитыМагазина.ВидМинимальныхЦенПродажи);
					Запрос.УстановитьПараметр("Дата", Дата);
					Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
					Запрос.УстановитьПараметр("Характеристика", Характеристика);
					
					МинимальнаяЦена = 0;
					УпаковкаМинимальнойЦены = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
					КоэффициентМинимальнойЦены = 1;
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						Если ЗначениеЗаполнено(Выборка.Цена) Тогда
							МинимальнаяЦена = Выборка.Цена;
						КонецЕсли;	
						Если ЗначениеЗаполнено(Выборка.Упаковка) Тогда
							УпаковкаМинимальнойЦены = Выборка.Упаковка;
						КонецЕсли;
						Если ЗначениеЗаполнено(Выборка.КоэффициентУпаковки) Тогда
							КоэффициентМинимальнойЦены = Выборка.КоэффициентУпаковки;
						КонецЕсли;
					КонецЕсли;
					
					Если ЦенаВыборки > 0 И МинимальнаяЦена > 0 Тогда
						Если УпаковкаМинимальнойЦены = УпаковкаЦены Тогда
							Если ЦенаВыборки < МинимальнаяЦена Тогда
								ЦенаВыборки = МинимальнаяЦена;
								УпаковкаЦены = УпаковкаМинимальнойЦены;
								КоэффициентУпаковки = КоэффициентМинимальнойЦены;
							КонецЕсли;
						Иначе
							Если Окр(ЦенаВыборки / КоэффициентУпаковки, 2) < Окр(МинимальнаяЦена / КоэффициентМинимальнойЦены, 2) Тогда
								ЦенаВыборки = МинимальнаяЦена;
								УпаковкаЦены = УпаковкаМинимальнойЦены;
								КоэффициентУпаковки = КоэффициентМинимальнойЦены;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если УпаковкаЦены = Упаковка Тогда
					Цена = ЦенаВыборки;
				Иначе
					КоэффициентУпаковкиВходящий = ?(ЗначениеЗаполнено(Упаковка), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Упаковка, "Коэффициент"), 1);
					Если ЗначениеЗаполнено(КоэффициентУпаковкиВходящий) Тогда
						Цена = Окр(ЦенаВыборки * КоэффициентУпаковкиВходящий / КоэффициентУпаковки, 2);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	Возврат Цена;

КонецФункции
