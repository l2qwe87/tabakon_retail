Функция ПолучитьКоличествоБаллов(ID, Товары, Адрес_ВебСоединение) экспорт  
	Попытка
		Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
		Прокси	=	Массив[0];
	Исключение	
		Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User", "http://mx.tabakon.ru:1777/ut/ws/tbk?wsdl", 10); 
		
		Массив	=	новый Массив;
		Массив.Добавить(Прокси);
		Адрес_ВебСоединение	=	ПоместитьВоВременноеХранилище(Массив,Новый УникальныйИдентификатор);  
	КонецПопытки;	
	
	Если Прокси = Неопределено тогда 
		Сообщить("Ошибка поключения к УТ");
		Возврат 0; 
	КонецЕсли;
	
	Попытка
		КолБаллов_Ответ	= Прокси.get_kolballov(ID);
	Исключение
		Сообщить("Ошибка поключения к УТ");
		Возврат 0; 
	КонецПопытки;
	
	Если КолБаллов_Ответ = "" тогда
		Сообщить("Клиент не зарегистрирован!");
		Возврат 0; 
	КонецЕсли;
	
	Разделитель	=	Найти(КолБаллов_Ответ,";");	
	Поз2		=	СтрНайти(КолБаллов_Ответ,";",,,2);
	Поз3		=	СтрНайти(КолБаллов_Ответ,";",,,3);
	
	КолБаллов	=	Число(Лев(КолБаллов_Ответ,Разделитель-1));
	Имя			=	Сред(КолБаллов_Ответ,Разделитель+1,СтрНайти(КолБаллов_Ответ,";",,,2)-3);
	ID_Ответ	=	Сред(КолБаллов_Ответ,Поз2+1,Поз3-8);

	Телефон		=	Прав(КолБаллов_Ответ,12);
	
	//Доп проверка
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ЕстьNull(ТБК_ИсторияПокупокРозница.КоличествоСписанныхБаллов,0) КАК КоличествоСписанныхБаллов
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ТБК_ИсторияПокупокРозница КАК ТБК_ИсторияПокупокРозница
	      	 	             |ГДЕ
	      	 	             |	НЕ ТБК_ИсторияПокупокРозница.Отправлен
	      	 	             |	И ТБК_ИсторияПокупокРозница.IDКлиента = &IDКлиента");
	Запрос.УстановитьПараметр("IDКлиента",ID);
	Рез = запрос.Выполнить().Выгрузить();
	Если Рез.Количество() >0 тогда
		КолБаллов	=	КолБаллов - Рез[0].КоличествоСписанныхБаллов;	
	КонецЕсли;
	
	КоличествоБалловМожноСписать = 0;
	
	Если КолБаллов >0 тогда
		//Получаем условия
		ОтветJS				=	Прокси.get_ysloviyaprogrammi();		
		УсловияПрограммы	=	ОбщегоНазначения.jsonВСтруктура_Общая(ОтветJS);
		
		Для каждого Строка из УсловияПрограммы цикл  
			ВозможныйПроцентСписания	=	Число(Строка.ВозможныйПроцентСписания);
	        ГруппыНоменклатуры			=	Строка.ГруппыНоменклатуры;
		КонецЦикла;
		
		//Парсим и формируем массив групп исключений
		МассивНоменклатуры = Новый Массив;
		Пока Найти(ГруппыНоменклатуры,";") цикл
			КодГруппы	=	Сред(ГруппыНоменклатуры,1,11);
			
			Ном =  Справочники.Номенклатура.НайтиПоКоду(КодГруппы);
			Если не Ном.Пустая() тогда  
				Если МассивНоменклатуры.Найти(Ном) = Неопределено тогда
					МассивНоменклатуры.Добавить(Ном);
				КонецЕсли;
			КонецЕсли;
			
			ГруппыНоменклатуры = Сред(ГруппыНоменклатуры,13);
		КонецЦикла;


		//Проставляем
		Для каждого СТрокаТовар из Товары цикл
			//Проверяем в группе исклюений товар или нет
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	Номенклатура.Ссылка КАК Ссылка
			      	 	             |ИЗ
			      	 	             |	Справочник.Номенклатура КАК Номенклатура
			      	 	             |ГДЕ
			      	 	             |	Номенклатура.Ссылка В ИЕРАРХИИ(&Мас)
			      	 	             |	И Номенклатура.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Мас",МассивНоменклатуры);
			Запрос.УстановитьПараметр("Ссылка",СТрокаТовар.Номенклатура);			
			
			Если Запрос.Выполнить().Пустой() тогда //можно списать
				КоличествоБалловМожноСписать	=	КоличествоБалловМожноСписать + (СТрокаТовар.сумма/100)	 * ВозможныйПроцентСписания;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	КоличествоБалловМожноСписать = Мин(КоличествоБалловМожноСписать,КолБаллов);
	
	
	СтруктураВозврата	=	Новый Структура;
	СтруктураВозврата.Вставить("КоличествоНакопленныхБаллов",КолБаллов);
	СтруктураВозврата.Вставить("КоличествоБалловМожноСписать",КоличествоБалловМожноСписать);
	СтруктураВозврата.Вставить("Имя",Имя);
	СтруктураВозврата.Вставить("Телефон",Телефон); 
	СтруктураВозврата.Вставить("ID_Ответ",ID_Ответ); 
	
	
	Прокси	=	Неопределено;
	
	Возврат СтруктураВозврата;	
КонецФункции


Функция ОбновитьКоличествоБаллов(КолБаллов, Товары, Адрес_ВебСоединение) экспорт
	Попытка
		Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
		Прокси	=	Массив[0];
	Исключение	
		Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User", "http://mx.tabakon.ru:1777/ut/ws/tbk?wsdl", 10); 
		
		Массив	=	новый Массив;
		Массив.Добавить(Прокси);
		Адрес_ВебСоединение	=	ПоместитьВоВременноеХранилище(Массив,Новый УникальныйИдентификатор);  
	КонецПопытки;	
	
	Если Прокси = Неопределено тогда 
		Сообщить("Ошибка поключения к УТ");
		Возврат 0; 
	КонецЕсли;
	
	КоличествоБалловМожноСписать = 0;
	УжеСписано					 = 0;
	Если КолБаллов >0 тогда
		//Получаем условия
		Попытка
			ОтветJS				=	Прокси.get_ysloviyaprogrammi();	
		Исключение
			Сообщить("Ошибка поключения к УТ");
			Возврат 0; 
		КонецПопытки;
		УсловияПрограммы	=	ОбщегоНазначения.jsonВСтруктура_Общая(ОтветJS);
		
		Для каждого Строка из УсловияПрограммы цикл  
			ВозможныйПроцентСписания	=	Число(Строка.ВозможныйПроцентСписания);
	        ГруппыНоменклатуры			=	Строка.ГруппыНоменклатуры;
		КонецЦикла;
		
		//Парсим и формируем массив групп исключений
		МассивНоменклатуры = Новый Массив;
		Пока Найти(ГруппыНоменклатуры,";") цикл
			КодГруппы	=	Сред(ГруппыНоменклатуры,1,11);
			
			Ном =  Справочники.Номенклатура.НайтиПоКоду(КодГруппы);
			Если не Ном.Пустая() тогда  
				Если МассивНоменклатуры.Найти(Ном) = Неопределено тогда
					МассивНоменклатуры.Добавить(Ном);
				КонецЕсли;
			КонецЕсли;
			
			ГруппыНоменклатуры = Сред(ГруппыНоменклатуры,13);
		КонецЦикла;


		//Проставляем
		Для каждого СТрокаТовар из Товары цикл
			//Проверяем в группе исклюений товар или нет
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	Номенклатура.Ссылка КАК Ссылка
			      	 	             |ИЗ
			      	 	             |	Справочник.Номенклатура КАК Номенклатура
			      	 	             |ГДЕ
			      	 	             |	Номенклатура.Ссылка В ИЕРАРХИИ(&Мас)
			      	 	             |	И Номенклатура.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Мас",МассивНоменклатуры);
			Запрос.УстановитьПараметр("Ссылка",СТрокаТовар.Номенклатура);	
			
			Если Запрос.Выполнить().Пустой() тогда //можно списать
				КоличествоБалловМожноСписать	=	КоличествоБалловМожноСписать + (СТрокаТовар.сумма/100)	 * ВозможныйПроцентСписания;
			КонецЕсли;
			
			УжеСписано	=	УжеСписано +  СТрокаТовар.ТБК_КоличествоБаллов;
			
		КонецЦикла;
		
	КонецЕсли;
	
	
	
	КоличествоБалловМожноСписать = Мин(КоличествоБалловМожноСписать,КолБаллов);
	
	КоличествоБалловМожноСписать	=	КоличествоБалловМожноСписать - УжеСписано;
	
	
	Прокси	=	Неопределено;
	
	Возврат КоличествоБалловМожноСписать;		
КонецФункции

Функция СписатьБаллы(КолБаллов, Товары, Адрес_ВебСоединение) экспорт
	Попытка
		Массив = ПолучитьИзВременногоХранилища(Адрес_ВебСоединение);
		Прокси	=	Массив[0];
	Исключение	
		Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User", "http://mx.tabakon.ru:1777/ut/ws/tbk?wsdl", 10); 
		
		Массив	=	новый Массив;
		Массив.Добавить(Прокси);
		Адрес_ВебСоединение	=	ПоместитьВоВременноеХранилище(Массив,Новый УникальныйИдентификатор);  
	КонецПопытки;;
	
	Если Прокси = Неопределено тогда 
		Сообщить("Ошибка поключения к УТ");
		Возврат 0; 
	КонецЕсли;
	
	КоличествоБалловСписано = 0;
	Если КолБаллов >0 тогда
		//Получаем условия  
		Попытка
			ОтветJS				=	Прокси.get_ysloviyaprogrammi();		
		Исключение
			Сообщить("Ошибка поключения к УТ");
			Возврат 0; 
		КонецПопытки;
		УсловияПрограммы	=	ОбщегоНазначения.jsonВСтруктура_Общая(ОтветJS);
		
		Для каждого Строка из УсловияПрограммы цикл  
			ВозможныйПроцентСписания	=	Число(Строка.ВозможныйПроцентСписания);
	        ГруппыНоменклатуры			=	Строка.ГруппыНоменклатуры;
		КонецЦикла;
		
		//Парсим и формируем массив групп исключений
		МассивНоменклатуры = Новый Массив;
		Пока Найти(ГруппыНоменклатуры,";") цикл
			КодГруппы	=	Сред(ГруппыНоменклатуры,1,11);
			
			Ном =  Справочники.Номенклатура.НайтиПоКоду(КодГруппы);
			Если не Ном.Пустая() тогда  
				Если МассивНоменклатуры.Найти(Ном) = Неопределено тогда
					МассивНоменклатуры.Добавить(Ном);
				КонецЕсли;
			КонецЕсли;
			
			ГруппыНоменклатуры = Сред(ГруппыНоменклатуры,13);
		КонецЦикла;


		//Проставляем
		Для каждого СТрокаТовар из Товары цикл
			Если КолБаллов = 0 тогда Прервать; КонецЕсли;
			
			//Проверяем в группе исклюений товар или нет
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	Номенклатура.Ссылка КАК Ссылка
			      	 	             |ИЗ
			      	 	             |	Справочник.Номенклатура КАК Номенклатура
			      	 	             |ГДЕ
			      	 	             |	Номенклатура.Ссылка В ИЕРАРХИИ(&Мас)
			      	 	             |	И Номенклатура.Ссылка = &Ссылка");
			Запрос.УстановитьПараметр("Мас",МассивНоменклатуры);
			Запрос.УстановитьПараметр("Ссылка",СТрокаТовар.Номенклатура);	

			Если Запрос.Выполнить().Пустой() тогда //можно списать
				СТрокаТовар.СуммаРучнойСкидки		=	Мин((СТрокаТовар.сумма/100)	 * ВозможныйПроцентСписания, КолБаллов);
				СТрокаТовар.ТБК_КоличествоБаллов	=	СТрокаТовар.СуммаРучнойСкидки;
				СТрокаТовар.Сумма					=	СТрокаТовар.Сумма - СТрокаТовар.СуммаРучнойСкидки;  
				
				КолБаллов 				= КолБаллов - СТрокаТовар.СуммаРучнойСкидки;
				КоличествоБалловСписано	= КоличествоБалловСписано + СТрокаТовар.ТБК_КоличествоБаллов;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Прокси	=	Неопределено;
	
	Возврат КоличествоБалловСписано;		
КонецФункции