
//вхПараметры - структура
//	UserName - string
//  Password - string
Функция SetPassword(вхПараметры) ЭКСПОРТ
	ИмяПользователя = СокрЛП(вхПараметры.FullName);
	Пароль			= СокрЛП(вхПараметры.Password);

	Пользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	
	Если Пользователь <> Неопределено Тогда
		Пользователь.Пароль	=	Пароль;
		Пользователь.Записать();
		
		результат = Истина;
	иначе
		сообщить("Не найден пользователь с именем: "+ИмяПользователя);
		результ = Ложь;;
	КонецЕсли;
	
	Возврат результат;
КонецФункции


//вхПараметры - структура
//	UserName - string
//  Password - string
//  FullName - string - Фамилия Имя Отчество
//  Birthdate - string - 20000101
Функция CreateUser(вхПараметры) ЭКСПОРТ

	Попытка
		Результат = Справочники.ФизическиеЛица.СоздатьПользователя(вхПараметры);
	Исключение
		Сообщить(ОписаниеОшибки());
		Результат =  Ложь;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции


//вхПараметры - структура
// Configuration - string (Release, Alpha, Gama)
Функция SetExtConfiguration(вхПараметры) ЭКСПОРТ
	
	config = вхПараметры.Configuration;
	
	РегистрыСведений.ТБК_Константы.Установить_РежимРаботыРасширения(config);
КонецФункции


Функция Run_exRetailOle(вхПараметры) ЭКСПОРТ
	имяФайла = "C:\app\database\exRetailOle.cmd"; 
	
	файл_cmd = Новый Файл(имяФайла);
	WshShell=Новый COMОбъект("WScript.Shell");
	WshShell.Run(имяФайла);
	
КонецФункции

Функция Run_apply_cfe(вхПараметры) ЭКСПОРТ
	
	фв = Новый файл("c:\app\database\Tabakon.version.loaded.txt");
	Если фв.Существует() Тогда
		УдалитьФайлы("c:\app\database\Tabakon.version.loaded.txt");
	КонецЕсли;
	
	имяФайла = "C:\app\database\apply_cfe.cmd"; 
	
	файл_cmd = Новый Файл(имяФайла);
	WshShell=Новый COMОбъект("WScript.Shell");
	WshShell.Run(имяФайла);
КонецФункции

Функция WriteMessage(вхПараметры) ЭКСПОРТ
	Попытка
		НовыйЭл							=	Справочники.ТБКСообщенияУТРозница.СоздатьЭлемент();
		НовыйЭл.Дата					=	ТекущаяДата();
		НовыйЭл.Отправитель				=	"Офис";
		НовыйЭл.Сообщение				=	вхПараметры.Сообщение;
		НовыйЭл.ИдентификаторСообщения	=	вхПараметры.ИдентификаторСообщения;
		НовыйЭл.Отправлено				=	Истина;
		НовыйЭл.Тема					=	вхПараметры.Тема; 
		
		НовыйЭл.Записать();
		Возврат Истина;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;

КонецФункции


Функция WriteRequest(вхПараметры) ЭКСПОРТ
	Попытка
		НовыйЭл							=	Документы.ТБК_ЗаявкаОтМагазина.СоздатьДокумент();
		НовыйЭл.Дата					=	ТекущаяДата();
		НовыйЭл.Номер					=	вхПараметры.Номер;
		НовыйЭл.Магазин					=	ОбщегоНазначения.ПолучитьСкладИзООРП();
		НовыйЭл.ВидОперации				=	Перечисления.ТБК_ВидыОперацийЗаявокОтМагазина.ВозвратТовара;
		НовыйЭл.Статус					=	"Собирать";
		
		Если ЗначениеЗаполнено(вхПараметры.Проект) тогда
			НовыйЭл.Проект			=	Справочники.ТБКПроекты.НайтиПоНаименованию(вхПараметры.Проект);
			Если НовыйЭл.Проект.Пустая() тогда
				Спр					=	Справочники.ТБКПроекты.СоздатьЭлемент();
				Спр.Наименование	=	вхПараметры.Проект;
				Спр.Записать();
		        НовыйЭл.Проект		=	Спр.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
		НовыйЭл.Комментарий				=	вхПараметры.Комментарий; 
		НовыйЭл.ДатаСборки				=	вхПараметры.ДатаСборки;
		НовыйЭл.Сформирован				=	Истина;
		

		//товары
		Для i=1 по 10000 цикл
			Если вхПараметры.Свойство("НоменклатураКод"+Строка(i)) тогда
				Количество				=	"";
				НоменклатураКод			=	"";
				Характеристика			=	"";
				
				вхПараметры.Свойство("Количество"					+	Строка(i),	Количество);
				вхПараметры.Свойство("НоменклатураКод"				+	Строка(i),	НоменклатураКод);
				вхПараметры.Свойство("Характеристика"				+	Строка(i),	Характеристика); 
				
				НоменклатураСсылка		=	Справочники.Номенклатура.НайтиПоКоду(НоменклатураКод);	
				
				НужнаяХарактеристика	=	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
				Если ЗначениеЗаполнено(Характеристика) тогда
					Запрос	=	Новый Запрос("ВЫБРАТЬ
					      	 	             |	ХарактеристикиНоменклатуры.Ссылка
					      	 	             |ИЗ
					      	 	             |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
					      	 	             |ГДЕ
					      	 	             |	ХарактеристикиНоменклатуры.Владелец = &Владелец
					      	 	             |	И ХарактеристикиНоменклатуры.Наименование = &Наименование");
					Запрос.УстановитьПараметр("Владелец",НоменклатураСсылка);
					Запрос.УстановитьПараметр("Наименование",Характеристика);
					Рез = Запрос.Выполнить().Выгрузить();
					Если Рез.Количество() >0 тогда
						НужнаяХарактеристика			=	Рез[0].Ссылка;
					КонецЕсли; 	
				КонецЕсли;					
				
	       		НоваяСтрока	=	НовыйЭл.Товары.Добавить();
				НоваяСтрока.Номенклатура	=	НоменклатураСсылка;
				НоваяСтрока.Характеристика	=	НужнаяХарактеристика;
				НоваяСтрока.Количество		=	Число(Количество);	
			иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;   
		
		НовыйЭл.Записать(РежимЗаписиДокумента.Проведение);
		
		рег = РегистрыСведений.ТБК_ДанныеПоЗаявкамМагазинов.СоздатьНаборЗаписей();
		рег.Отбор.Документ.Установить(НовыйЭл.Ссылка);
		Рег.Прочитать();
		
		Если рег.Количество() <> 0 тогда	
			рег[0].Отправлен	=	Ложь;
			рег.Записать();
		КонецЕсли;		
		
		Возврат Истина;
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;

КонецФункции


