
//вхПараметры - структура
//	UserName - string
//  Password - string
Функция SetPassword(вхПараметры) ЭКСПОРТ
	ИмяПользователя = СокрЛП(вхПараметры.FullName);
	Пароль			= СокрЛП(вхПараметры.Password);

	Пользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	
	Если Пользователь <> Неопределено Тогда
		Пользователь.Пароль	=	Пароль;
		Пользователь.Записать();
		
		результат = Истина;
	иначе
		сообщить("Не найден пользователь с именем: "+ИмяПользователя);
		результ = Ложь;;
	КонецЕсли;
	
	Возврат результат;
КонецФункции



//вхПараметры - структура
//	UserName - string
//  Password - string
//  FullName - string - Фамилия Имя Отчество
//  Birthdate - string - 20000101
Функция CreateUser(вхПараметры) ЭКСПОРТ

	Попытка
		Результат = СоздатьПользователя(вхПараметры);
	Исключение
		Сообщить(ОписаниеОшибки());
		Результат =  Ложь;
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция СоздатьПользователя(вхПараметры)
	ИмяПользователя = СокрЛП(вхПараметры.FullName);
	ИмяФЛ			= СокрЛП(вхПараметры.UserName);
	Пароль			= СокрЛП(вхПараметры.Password);
	
	ПроверкаНаСуществующегоПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	
	Если ПроверкаНаСуществующегоПользователя = Неопределено Тогда		

		ОписаниеПользователяИБ            = Пользователи.НовоеОписаниеПользователяИБ();
		ПользовательИБСуществует          = Ложь;
		ДоступКИнформационнойБазеРазрешен = Ложь;
		
		// Заполнение начальных значений свойств пользователяИБ.
		ОписаниеПользователяИБ.ПоказыватьВСпискеВыбора   = Истина;
		ОписаниеПользователяИБ.АутентификацияСтандартная = Истина;	
		
		ОписаниеПользователяИБ.Вставить("Действие", "Записать");
		ОписаниеПользователяИБ.Вставить("Имя", ИмяПользователя);
		ОписаниеПользователяИБ.Вставить("Пароль", Пароль);

		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование 					= ИмяПользователя;

		НовыйПользователь.ДополнительныеСвойства.Вставить(
			"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
			
		НовыйПользователь.Записать();
		
		ГруппаДоступа = Справочники.ГруппыДоступа.НайтиПоНаименованию("ТБК_Кассир");
		Если ЗначениеЗаполнено(ГруппаДоступа) тогда
			ГруппаДоступа = ГруппаДоступа.ПолучитьОбъект();
			НоваяСтрока = ГруппаДоступа.Пользователи.Добавить();
			НоваяСтрока.Пользователь = НовыйПользователь.Ссылка;
			ГруппаДоступа.Записать();
		КонецЕсли;
		
		//Заполняем Настрйоки
		//ПользовательНастроек = Справочники.Пользователи.НайтиПоНаименованию("Михайлова Наталья Викторовна");
		ПользовательНастроек = ПолучитьПользователяБезАдминскихПрав();
		
		Если ЗначениеЗаполнено(ПользовательНастроек) тогда
			КопированиеВсехНастроек(ПользовательНастроек,НовыйПользователь.Ссылка);
		КонецЕсли;
		
		//Создаем ФизЛицо
		НовоеФЛ	=	Справочники.ФизическиеЛица.СоздатьЭлемент();
		НовоеФЛ.Наименование	=	ИмяФЛ;
		НовоеФЛ.Сотрудник		=	Истина;
		НовоеФЛ.Магазин			=	ОбщегоНазначения.ПолучитьМагазин();
		НовоеФЛ.Пол				=	Перечисления.ПолФизическогоЛица.Мужской;
		Попытка
			НовоеФЛ.ДатаРождения	=	Дата(СокрЛП(вхПараметры.Birthdate));
		Исключение
		КонецПопытки;
		
		НовоеФЛ.Записать();
		
		НовыйПользователь.Магазин 		 =  НовоеФЛ.Магазин;
		НовыйПользователь.Подразделение  =  НовоеФЛ.Магазин;
		НовыйПользователь.ФизЛицо 		 =  НовоеФЛ.Ссылка;
		НовыйПользователь.ФизическоеЛицо =  НовоеФЛ.Ссылка;
		НовыйПользователь.Записать();
		
		результ = истина;
	Иначе
		сообщить("Указанное ФИО Пользователя уже используется !!! ");
		результ = Ложь;;
	КонецЕсли;
	
	Возврат результ;

КонецФункции


Процедура КопированиеВсехНастроек(ПользовательСсылка,ПользовательПриемник)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Право КАК Право,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Значение КАК Значение
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	      	 	             |ГДЕ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь",ПользовательСсылка);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(ПользовательПриемник);
	Для каждого Строка из Рез цикл
		НоваяСтрока = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
		НоваяСтрока.Пользователь = ПользовательПриемник; 
	КонецЦикла;
	Набор.Записать();
КонецПроцедуры

Функция ПолучитьПользователяБезАдминскихПрав()
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя");
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 тогда
		Возврат Рез[0].Пользователь;
	КонецЕсли;
КонецФункции

