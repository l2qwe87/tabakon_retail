
&Вместо("ПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС")
Процедура ТБКПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС", СтруктураПараметровДействия) Тогда
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			
			Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "МаркируемаяПродукция") Тогда
				Возврат;
			КонецЕсли;
			
			Если ТипЗнч(СтруктураПараметровДействия) = Тип("Структура")
				И СтруктураПараметровДействия.Свойство("БезМаркировки") Тогда
				
				ЗначенияПоУмолчанию = Новый Структура;
				ЗначенияПоУмолчанию.Вставить("МаркируемаяПродукция", Ложь);
				ЗначенияПоУмолчанию.Вставить("РазрешенОборотНемаркированныхОстатков", Ложь);
				ЗначенияПоУмолчанию.Вставить("ДействуетКонтрольОборотаМарок", Ложь);
				ЗначенияПоУмолчанию.Вставить("НеобходимостьВводаАкцизнойМарки", Ложь);
				ЗначенияПоУмолчанию.Вставить("ВидПродукцииИС", ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПустаяСсылка"));
				
				ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЗначенияПоУмолчанию);
				
			Иначе
				
				ОперацияСДенежнымиСредствами = Ложь;
				
				Если СтруктураДействий.ПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС <> Неопределено
					И СтруктураДействий.ПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС.Свойство("ОперацияСДенежнымиСредствами") Тогда
					ОперацияСДенежнымиСредствами = СтруктураДействий.ПроверитьНеобходимостьВводаМаркируемойПродукцииГосИС.ОперацияСДенежнымиСредствами;
				КонецЕсли;
				
				ДанныеПродукции = ОбщегоНазначенияИС.СвойстваМаркируемойПродукции(ТекущаяСтрока.Номенклатура);
				
				Если НЕ ОперацияСДенежнымиСредствами Тогда
					ТекущаяСтрока.МаркируемаяПродукция           = ДанныеПродукции.МаркируемаяПродукция;
					ТекущаяСтрока.ВидПродукцииИС                 = ДанныеПродукции.ВидПродукции;
					Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НеобходимостьВводаАкцизнойМарки") Тогда
						ТекущаяСтрока.НеобходимостьВводаАкцизнойМарки = ДанныеПродукции.МаркируемаяПродукция;
					КонецЕсли;
				Иначе 
					ТекущаяСтрока.МаркируемаяПродукция            = Ложь;
					ТекущаяСтрока.ВидПродукцииИС                  = Перечисления.ВидыПродукцииИС.ПустаяСсылка();
					Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НеобходимостьВводаАкцизнойМарки") Тогда
						ТекущаяСтрока.НеобходимостьВводаАкцизнойМарки = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				ПроверкаИПодборПродукцииИСМП.ЗаполнитьПризнакиКонтроляОборотаМарокПоСтроке(ТекущаяСтрока,
					СтруктураПараметровДействия.ПараметрыСканирования, СтруктураПараметровДействия.ДатаПроверки);				
				
				//Вик 2022-06-15
				Если Строка(ТекущаяСтрока.Номенклатура.ВидНоменклатуры) = "Табак (х)" тогда
					ТекущаяСтрока.МаркируемаяПродукция            = Истина;	
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&Вместо("ЗаполнитьСтавкуНДСВСтрокеПоПараметрам")
Процедура ТБКЗаполнитьСтавкуНДСВСтрокеПоПараметрам(ТекущаяСтрока, СтруктураПараметровДействия, КэшированныеЗначения)
	
	СтавкаНДС 						= Неопределено;
	СтавкаНДСПоУмолчанию 			= Перечисления.СтавкиНДС.БезНДС;
	ОпределятьПризнакПлательщикаНДС = Истина;
	
	Если СтруктураПараметровДействия.Свойство("ВидНалогаВШапке") Тогда
		
		ВидНалогаВШапке = СтруктураПараметровДействия.ВидНалогаВШапке;
		
		Если ЗначениеЗаполнено(ВидНалогаВШапке) 
			И ВидНалогаВШапке <> Перечисления.ТипыСистемНалогообложенияККТ.ОСН
			И ВидНалогаВШапке <> Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
			И ВидНалогаВШапке <> Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход
			И НЕ (ВидНалогаВШапке = Перечисления.ТипыСистемНалогообложенияККТ.ЕСН
			И СтруктураПараметровДействия.Дата >= УчетНДС.ДатаПереходногоПериода()) Тогда
		
			СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			
		Иначе
			
			Организация = Неопределено;
			СтруктураПараметровДействия.Свойство("Организация", Организация);
			
			Склад = Неопределено;
			СтруктураПараметровДействия.Свойство("Склад", Склад);
			
			Магазин = Неопределено;
			Если НЕ СтруктураПараметровДействия.Свойство("Магазин", Магазин) Тогда
				Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Магазин");
			КонецЕсли;
			
			ПрименяетсяНДС = УчетНДС.ПрименяетсяНДС(СтруктураПараметровДействия.Дата,
												Организация,
												Магазин,
												Склад);
												
			
			
			Если ПрименяетсяНДС Тогда
				
				СтавкаНДС = УчетНДС.СкорректироватьСтавкуНДС(
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрока.Номенклатура,"СтавкаНДС"), 
					СтруктураПараметровДействия.Дата);
					
				Если НЕ (СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС0) Тогда
					
					СтавкаНДСУСН = Перечисления.СтавкиНДС.БезНДС;
					
					Если НЕ ЗначениеЗаполнено(ВидНалогаВШапке)
						ИЛИ ВидНалогаВШапке = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
						ИЛИ ВидНалогаВШапке = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход Тогда
						
						СистемаНалогообложенияОрганизации = РегистрыСведений.ПрименениеСистемНалогообложения.СистемаНалогообложенияОрганизации(Организация, СтруктураПараметровДействия.Дата);
						СтавкаНДСУСН = СистемаНалогообложенияОрганизации.СтавкаНДСУСН;
						Если НЕ ЗначениеЗаполнено(ВидНалогаВШапке) Тогда
							ВидНалогаВШапке = СистемаНалогообложенияОрганизации.СистемаНалогообложения;
						КонецЕсли;
					КонецЕсли;
					
					Если ВидНалогаВШапке = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
						ИЛИ ВидНалогаВШапке = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход Тогда
						
						Если СтавкаНДСУСН <> Перечисления.СтавкиНДС.НДС20 Тогда
							
							СтавкаНДС = СтавкаНДСУСН;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				
			КонецЕсли;
		
		КонецЕсли;
		
	Иначе
		
		ВидНалога = Неопределено;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ВидНалога") Тогда
			ВидНалога = ТекущаяСтрока.ВидНалога;
		ИначеЕсли СтруктураПараметровДействия.Свойство("ВидНалога") Тогда
			ВидНалога = СтруктураПараметровДействия.ВидНалога;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидНалога)
			И ВидНалога <> Перечисления.ТипыСистемНалогообложенияККТ.ОСН
			И ВидНалога <> Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
			И ВидНалога <> Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход
			И НЕ (ВидНалога = Перечисления.ТипыСистемНалогообложенияККТ.ЕСН
			И СтруктураПараметровДействия.Дата >= УчетНДС.ДатаПереходногоПериода()) Тогда
			
			ОпределятьПризнакПлательщикаНДС = Ложь;
			
		КонецЕсли;
		
		Если ОпределятьПризнакПлательщикаНДС Тогда
			
			Склад = Неопределено;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Склад") Тогда
				Склад = ТекущаяСтрока.Склад;
			Иначе
				СтруктураПараметровДействия.Свойство("Склад", Склад);
			КонецЕсли;
			
			Организация = Неопределено;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Организация") Тогда
				Организация = ТекущаяСтрока.Организация;
			Иначе
				СтруктураПараметровДействия.Свойство("Организация", Организация);
			КонецЕсли;
			
			Магазин = Неопределено;
			Если НЕ СтруктураПараметровДействия.Свойство("Магазин", Магазин) Тогда
				Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Магазин");
			КонецЕсли;
			
			РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущаяСтрока.Номенклатура,"ТоварнаяГруппа, СтавкаНДС");
			
			ПрименяетсяНДС = УчетНДС.ПрименяетсяНДС(
				СтруктураПараметровДействия.Дата,
				Организация,
				Магазин,
				Склад,
				РеквизитыНоменклатуры.ТоварнаяГруппа);
			
			Если ПрименяетсяНДС Тогда
				
				СтавкаНДС = УчетНДС.СкорректироватьСтавкуНДС(РеквизитыНоменклатуры.СтавкаНДС, СтруктураПараметровДействия.Дата);
				
				//Марк 2025-03-14
				//Если НЕ (СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС0) Тогда
				//КонецМарк	
					СтавкаНДСУСН = Перечисления.СтавкиНДС.БезНДС;
					
					Если НЕ ЗначениеЗаполнено(ВидНалога)
						ИЛИ ВидНалога = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
						ИЛИ ВидНалога = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход Тогда
						
						СистемаНалогообложенияОрганизации = РегистрыСведений.ПрименениеСистемНалогообложения.СистемаНалогообложенияОрганизации(Организация, СтруктураПараметровДействия.Дата);
						СтавкаНДСУСН = СистемаНалогообложенияОрганизации.СтавкаНДСУСН;
						Если НЕ ЗначениеЗаполнено(ВидНалога) Тогда
							ВидНалога = СистемаНалогообложенияОрганизации.СистемаНалогообложения;
						КонецЕсли;
					КонецЕсли;
					
					Если ВидНалога = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоход
						ИЛИ ВидНалога = Перечисления.ТипыСистемНалогообложенияККТ.УСНДоходРасход Тогда
						
						Если СтавкаНДСУСН <> Перечисления.СтавкиНДС.НДС20 Тогда
							
							СтавкаНДС = СтавкаНДСУСН;
							
						КонецЕсли;
						
					КонецЕсли;
					
				//КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
		СтавкаНДС = СтавкаНДСПоУмолчанию;
	КонецЕсли;
	
	ТекущаяСтрока.СтавкаНДС = СтавкаНДС;

	
КонецПроцедуры

&После("ЗаполнитьЦенуПродажиВСтрокеТЧСервер")
Процедура ТБКЗаполнитьЦенуПродажиВСтрокеТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	//Марк 2025-08-12 https://jira.tabkn.ru/browse/ROZ-2
	Попытка //Сделал попытку, не стал парится если нет характеристики
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Характеристика) Тогда
			
			Если СтрНайти(ТекущаяСтрока.Упаковка, "упак") Тогда
				Если НЕ ТекущаяСтрока.Упаковка.пустая() Тогда
					ТекущаяСтрока.Цена = ТекущаяСтрока.Упаковка.Коэффициент * СтрЗаменить(Строка(ТекущаяСтрока.Характеристика), Символы.НПП, "");	
				КонецЕсли;
			Иначе
				ТекущаяСтрока.Цена = Строка(ТекущаяСтрока.Характеристика);	
			КонецЕсли;	
			
		КонецЕсли;
	
	Исключение
	
	КонецПопытки;
	
	//КонецМарк
КонецПроцедуры
