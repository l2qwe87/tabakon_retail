Функция ПроверитьВозможностьРедактирования_Общая() экспорт
	Возврат РольДоступна("ПолныеПрава");
КонецФункции

Функция ПолучитьПрокси(Пароль="", Пользователь = "", Адрес = "", Таймаут = 60, НеВыводитьошибку = Ложь) Экспорт
	
	ТекстОшибки = "";
	ИмяСервиса = "tbk"; 
	ИмяСервисаСоап = "tbkSoap";
	
	
	Попытка                                 
		Определения = Новый WSОпределения(Адрес,Пользователь,Пароль, Таймаут);
	Исключение			
		Если не НеВыводитьошибку тогда
			Сообщить(ОписаниеОшибки());
		КонецЕсли;
		Возврат Неопределено; 
	КонецПопытки;
	
	URI =  "http://www.1c.ru/SaaS/1.0/WS";
	Прокси = Новый WSПрокси(Определения, URI, ИмяСервиса, ИмяСервисаСоап);
	Прокси.Пользователь = Пользователь;
	Прокси.Пароль = Пароль;
	Возврат Прокси;   	
КонецФункции

Функция ПроверитьЧекНаНаличиеСкидок(ЧекККМПродажаОснование) экспорт
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	КомментарииСтатистики.Наименование КАК Наименование
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.КомментарииСтатистики КАК КомментарииСтатистики
	      	 	             |ГДЕ
	      	 	             |	КомментарииСтатистики.Наименование Подобно &Наименование");
	Запрос.УстановитьПараметр("Наименование","%"+ЧекККМПродажаОснование.Номер+"%");
	
	Возврат Запрос.Выполнить().Пустой();
КонецФункции

Функция УдалитьЛидирующиеНули(НужнаяСтрока) Экспорт
	
	Если ТипЗнч(НужнаяСтрока) <> Тип("Строка") Тогда
		Возврат НужнаяСтрока;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НужнаяСтрока) Тогда
		Возврат НужнаяСтрока;
	КонецЕсли; 
	

	НомерПервойЦифры = 0;
	Для а = 1 По СтрДлина(НужнаяСтрока) Цикл
		НомерПервойЦифры = НомерПервойЦифры + 1;
		КодСимвола = КодСимвола(Сред(НужнаяСтрока, а, 1));
		Если КодСимвола <> 48 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	НужнаяСтрока = Сред(НужнаяСтрока, НомерПервойЦифры);

	Возврат НужнаяСтрока;  	
КонецФункции

Функция ЭтоМаркированнаяНоменклатураСервер(Номенклатура) экспорт
	возврат Найти(Номенклатура.ВидНоменклатуры.Наименование,"Табак (х)") или Номенклатура.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция;	
КонецФункции

Функция EmailValid(Адрес) Экспорт

    //Адрес = "test@me@gmail.narod.am";

    ЛатинскиеБуквы = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

    Цифры = "0123456789";

    //ищем крайний справа символ @ для правильного выделения локальной и доменной части

    ИндексСобаки = Найти(Адрес,"@");

    //1. строка адреса вообще не содержит разделителя

    Если ИндексСобаки = 0 Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    УрезаемаяСтрока = Сред(Адрес, ИндексСобаки+1);

    Пока Найти(УрезаемаяСтрока,"@") > 0 Цикл

        ИндексСобаки = ИндексСобаки + Найти(УрезаемаяСтрока,"@");

        УрезаемаяСтрока = Сред(УрезаемаяСтрока, ИндексСобаки+1);

    КонецЦикла;

    ДоменнаяЧасть = Сред(Адрес, ИндексСобаки+1);

    ЛокальнаяЧасть = Лев(Адрес, ИндексСобаки-1);

    //2. Проверяем длину локальной части

    Если СтрДлина(ЛокальнаяЧасть) < 1 ИЛИ СтрДлина(ЛокальнаяЧасть) > 64 Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //3. Проверяем длину доменной части

    Если СтрДлина(ДоменнаяЧасть) < 1 ИЛИ СтрДлина(ДоменнаяЧасть) > 255 Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //4. Проверяем что локальная части не начинается и не заканчивается на "."

    Если Лев(ЛокальнаяЧасть, 1) = "." ИЛИ Прав(ЛокальнаяЧасть, 1) = "." Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //5. Локальная части не содержит 2 или более "." подряд

    Если Найти(ЛокальнаяЧасть, "..") > 0 Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //Проверка доменной части

    //6. Доменная часть не начинается с точки

    Если Лев(ДоменнаяЧасть, 1) = "." Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //7. Доменная часть не содержит 2 или более "." подряд

    Если Найти(ДоменнаяЧасть, "..") > 0 Тогда

        Возврат ЛОЖЬ;

    КонецЕсли;

    //8. Проверка частей доменной части

    //каждая часть начинается с буквы и заканчивается буквой или цифрой

    //каждая часть длиной не более 63 символов

    ИдентификаторыДоменнойЧасти = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДоменнаяЧасть, ".");

    Для Каждого ИдентификаторДомена ИЗ ИдентификаторыДоменнойЧасти Цикл

        Если СтрДлина(ИдентификаторДомена) > 63 Тогда

            Возврат ЛОЖЬ;

        КонецЕсли;

        Если Найти(ЛатинскиеБуквы, Лев(ИдентификаторДомена,1)) = 0

            //для доменов, нарушающих RFC 1035 п.2.3.1, например @1c.ru :)

            И Найти(Цифры, Лев(ИдентификаторДомена,1)) = 0

            Тогда

            Возврат ЛОЖЬ;

        КонецЕсли;

        Если Найти(ЛатинскиеБуквы, Прав(ИдентификаторДомена,1)) = 0 И Найти(Цифры, Прав(ИдентификаторДомена,1)) = 0 Тогда

            Возврат ЛОЖЬ;

        КонецЕсли;

    КонецЦикла;



    //Все проверки пройдены - радуемся

    Возврат ИСТИНА;

КонецФункции

Функция ОткрытьНужнуюИнструкцию(НазваниеИнструкции) экспорт  		
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ТБК_Инструкции.СсылкаНаФайл КАК СсылкаНаФайл
	      	 	             |ИЗ
	      	 	             |	Справочник.ТБК_Инструкции КАК ТБК_Инструкции
	      	 	             |ГДЕ
	      	 	             |	ТБК_Инструкции.Наименование ПОДОБНО &Наименование");   
	Запрос.УстановитьПараметр("Наименование","%" + НазваниеИнструкции + "%"); 
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() тогда 
		ЗапуститьПриложение(Рез.СсылкаНаФайл);
	иначе
		Сообщить("Не найдена инструкция: " + НазваниеИнструкции);
	КонецЕсли; 	
КонецФункции 

Функция ПолучитьТекущегоПродавца() экспорт
	текущийПользователь = Пользователи.ТекущийПользователь();
	Возврат текущийПользователь.ФизическоеЛицо;
КонецФункции

Функция  ПолучитьЦветФонаКонпки() экспорт
	Возврат ЦветаСтиля.ЦветФонаКнопки;
КонецФункции

//Марк
Функция ПолучитьНоменклатураБК(Номенклатура) Экспорт 		
	Возврат Справочники.Номенклатура.НайтиПоНаименованию("" + СокрЛП(Номенклатура) + " БК");   	
КонецФункции // ()
//конецМарк