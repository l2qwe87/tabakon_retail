
&Вместо("ДанныеПоШтрихкодамEAN")
Функция ТБКДанныеПоШтрихкодамEAN(ШтрихкодыEAN)
	// Вставить содержимое метода.
	штрих0 = "";
	Если ШтрихкодыEAN.Количество() = 1 Тогда
		
		
		штрих0 = ШтрихкодыEAN[0]; 		
		Если СтрДлина(штрих0) = 8 тогда
			штрих1 = "00000"+штрих0;
		ИначеЕсли СтрДлина(штрих0) = 12 тогда
			штрих1 = "0"+штрих0;
		ИначеЕсли (СтрДлина(штрих0) = 13)И(Лев(штрих0,5)="00000") тогда
			штрих1 = Прав(штрих0,8);
		ИначеЕсли (СтрДлина(штрих0) = 13)И(Лев(штрих0,1)="0") тогда
			штрих1 = Прав(штрих0,12);
		КонецЕсли;

		               
		Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.Штрихкоды ГДЕ Штрихкод=&Штрихкод");	
		Запрос.УстановитьПараметр("Штрихкод",штрих0);
		выборкаШтрихкоды = Запрос.Выполнить().Выбрать();
		флНашли = Ложь;
		
		Если (НЕ выборкаШтрихкоды.Следующий()) ТОГДА
			Если (ЗначениеЗаполнено(штрих1)) Тогда
				Запрос.УстановитьПараметр("Штрихкод",штрих1);
				выборкаШтрихкоды = Запрос.Выполнить().Выбрать();
				Если выборкаШтрихкоды.Следующий() Тогда	
					ПроверитьШтрихКодыДляХарактеристик(штрих0,выборкаШтрихкоды.Владелец,выборкаШтрихкоды, истина);
					флНашли = Истина;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ПроверитьШтрихКодыДляХарактеристик(штрих0,выборкаШтрихкоды.Владелец,выборкаШтрихкоды);
			флНашли = Истина;
		КонецЕсли;
		
		//Поиск в дублирующем регистре ТБК_Штрихкоды. Все тоже самое но по другому регистру +
		//запись в регистр штрихкоды если нашли
		Если не флНашли тогда
			Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.ТБК_Штрихкоды ГДЕ Штрихкод В(&Штрихкод0, &Штрихкод1)");	
			Запрос.УстановитьПараметр("Штрихкод0",штрих0);
			Запрос.УстановитьПараметр("Штрихкод1",штрих1);
			выборкаШтрихкоды = Запрос.Выполнить().Выбрать();
		
			Если выборкаШтрихкоды.Следующий() ТОГДА
				ПроверитьШтрихКодыДляХарактеристик(штрих0,выборкаШтрихкоды.Владелец,выборкаШтрихкоды,Истина);
			КонецЕсли; 
		КонецЕсли;
		//		
	КонецЕсли; 	
	
	Результат = ПродолжитьВызов(ШтрихкодыEAN);
	Если Результат.Количество() > 1 Тогда
		Если Результат[0].Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать Тогда
			Результат[0].Характеристика = неопределено;
			Пока Результат.Количество() > 1 Цикл
				Результат.Удалить(1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции


Процедура ПроверитьШтрихКодыДляХарактеристик(штрихкод, номенклатура, прототип, необходимоСоздатьЗапись = ложь);
	
	Если НЕ номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
		Если необходимоСоздатьЗапись Тогда
			запись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств( запись,прототип);
			запись.Штрихкод = штрихкод;
			запись.Записать();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	               |	Штрихкоды.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	               |		ПО (Штрихкоды.Характеристика = ХарактеристикиНоменклатуры.Ссылка)
	               |			И (Штрихкоды.Штрихкод = &Штрихкод)
	               |			И (Штрихкоды.Владелец = &номенклатура)
	               |ГДЕ
	               |	ХарактеристикиНоменклатуры.Владелец = &номенклатура
	               |	И Штрихкоды.Штрихкод ЕСТЬ NULL";

	Запрос.УстановитьПараметр("штрихкод",штрихкод);
	Запрос.УстановитьПараметр("номенклатура",номенклатура);
	
	рез = Запрос.Выполнить().Выбрать();
	Пока рез.Следующий() Цикл
		запись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств( запись,прототип);
		запись.Штрихкод = штрихкод;
		запись.Характеристика =  рез.Характеристика;
		запись.Записать();
	КонецЦикла;
	
	РегистрыСведений.Штрихкоды.ЧисткаШтрихкодов(номенклатура);
КонецПроцедуры

//&Вместо("ВидПродукцииИСПоШтрихкодуНоменклатуры")
//Функция ТБКВидПродукцииИСПоШтрихкодуНоменклатуры(Штрихкод)
//	// Вставить содержимое метода.
//	Результат = ПродолжитьВызов(Штрихкод);
//	Если Результат = Перечисления.ВидыПродукцииИС.Табачная Тогда
//		Результат = неопределено;
//	КонецЕсли;
//	Возврат Результат;
//КонецФункции

&Вместо("РезультатОбработкиДанныеПоКодуМаркировкиНеНайдены")
Функция ТБКРезультатОбработкиДанныеПоКодуМаркировкиНеНайдены(Форма, ДанныеПоШтрихкодам, ШтрихкодИКоличество, ПараметрыСканирования)
	// Вставить содержимое метода.
	
	Если (ТекущаяДата() >= ИнтеграцияМОТПВызовСервера.ДатаОбязательнойМаркировкиТабачнойПродукции()) Тогда
		
		РезультатОбработки = ПродолжитьВызов(Форма, ДанныеПоШтрихкодам, ШтрихкодИКоличество, ПараметрыСканирования);
		
	Иначе
		
		РезультатОбработки = ИнициализироватьРезультатОбработкиШтрихкода();
		РезультатОбработки.ИсходныеДанные = ШтрихкодИКоличество;
		ДанныеШтрихкода = ДанныеПоШтрихкодам.НеобработанныеШтрихкоды.Получить(ШтрихкодИКоличество.Штрихкод);
		РезультатОбработки.ТребуетсяОбработкаШтрихкода = Истина;
		РезультатОбработки.ОбработкаШтрихкодаБезМарки = истина;
		//РезультатОбработки.ОткрытьФормуВводаКодаМаркировки = истина;
		
	КонецЕсли;	
	
	Возврат РезультатОбработки;
КонецФункции

&Вместо("ОпределитьИнформациюПоGTINКодовМаркировки")
Процедура ТБКОпределитьИнформациюПоGTINКодовМаркировки(ДанныеПоШтрихкодам, ПараметрыСканирования)
	// Вставить содержимое метода.
	ПродолжитьВызов(ДанныеПоШтрихкодам, ПараметрыСканирования);
	
	мКэшПроверка = новый Массив;
	Для Каждого СтрокаДанных Из ДанныеПоШтрихкодам.ДанныеКодовМаркировок Цикл
		ШтрихкодEAN = EANИзКодаМаркировки(СтрокаДанных.КодМаркировки);
		Если мКэшПроверка.Найти(ШтрихкодEAN) = неопределено Тогда
			мКэшПроверка.Добавить(ШтрихкодEAN);
			
			МРЦПачки = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиТабачнойПачки(СтрокаДанных.КодМаркировки);
			Если МРЦПачки = Неопределено Тогда
				МРЦБлока = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиБлока(СтрокаДанных.КодМаркировки);
				Если МРЦБлока <> Неопределено Тогда
					мрц = МРЦБлока/10;
				КонецЕсли
			Иначе
				мрц = МРЦПачки;
			Конецесли;
			
			
			мУдалить = новый Массив;
			Для Каждого стр из ДанныеПоШтрихкодам.ИнформацияПоШтрихкодамEAN Цикл
				Если стр.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
					Если стр.ШтрихкодEAN=ШтрихкодEAN И Строка(стр.Характеристика)<>Строка(мрц) Тогда
						мУдалить.Добавить(стр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого стр из мУдалить Цикл
				ДанныеПоШтрихкодам.ИнформацияПоШтрихкодамEAN.Удалить(стр);	
			КонецЦикла;
			
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&Вместо("ДанныеПоШтрихкодам")
Функция ТБКДанныеПоШтрихкодам(Штрихкоды, ПараметрыСканирования, КэшированныеЗначения)
	// Вставить содержимое метода.
	Результат = ПродолжитьВызов(Штрихкоды, ПараметрыСканирования, КэшированныеЗначения);
	Для каждого стрМарки из Результат.ДанныеКодовМаркировок Цикл
		стрДанные = Результат.ИнформацияПоШтрихкодамEAN.Найти(стрМарки.EAN);
		Если стрДанные <> неопределено Тогда
			стрМарки.Номенклатура = стрДанные.Номенклатура;
			стрМарки.Характеристика = стрДанные.Характеристика;
		КонецЕсли;
		
	КонецЦикла;
	Возврат Результат;
КонецФункции
