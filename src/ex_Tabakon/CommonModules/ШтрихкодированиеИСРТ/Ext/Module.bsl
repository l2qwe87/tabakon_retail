
Процедура ТБКЗаполнитьДанныеПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN, ПарамтерыПоискаРМК, МРЦ = Неопределено) экспорт
	
	ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Номенклатура,
			|	ПРЕДСТАВЛЕНИЕ(Номенклатура.Ссылка) КАК ПредставлениеНоменклатуры,
			|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
			|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
			|	ШтрихкодыНоменклатуры.Штрихкод КАК ШтрихкодEAN,
			|	&ОпределениеВидаПродукции КАК ВидПродукции,
			|	&ОпределениеПризнакаМаркируемаяПродукция КАК МаркируемаяПродукция,
			|	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка,
			|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Коэффициент, 1) КАК Количество,
			|	&УсловиеОсобенностьУчета КАК ПродукцияИС
			|ИЗ
			|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			|		ПО ШтрихкодыНоменклатуры.Владелец = Номенклатура.Ссылка
			|ГДЕ
			|	ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)";

	
	ИнтеграцияИСРТ.ОпределитьВидПродукцииТекстаЗапроса(ТекстЗапроса, "Номенклатура");
	ИнтеграцияИСРТ.ОпределитьОсобенностиУчетаТекстаЗапроса(ТекстЗапроса, "Номенклатура",, Истина);
	ОпределениеМаркируемаяПродукция = ИнтеграцияИСРТ.ОпределениеПризнакаМаркируемаяПродукцияТекстаЗапроса("Номенклатура");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОпределениеПризнакаМаркируемаяПродукция", ОпределениеМаркируемаяПродукция);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	//Вик 2024-07-02
	Если МРЦ <> Неопределено тогда
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка КАК Номенклатура,
			|	ПРЕДСТАВЛЕНИЕ(Номенклатура.Ссылка) КАК ПредставлениеНоменклатуры,
			|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
			|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
			|	ШтрихкодыНоменклатуры.Штрихкод КАК ШтрихкодEAN,
			|	&ОпределениеВидаПродукции КАК ВидПродукции,
			|	&ОпределениеПризнакаМаркируемаяПродукция КАК МаркируемаяПродукция,
			|	ШтрихкодыНоменклатуры.Упаковка КАК Упаковка,
			|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Упаковка.Коэффициент, 1) КАК Количество,
			|	&УсловиеОсобенностьУчета КАК ПродукцияИС
			|ИЗ
			|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
			|		ПО ШтрихкодыНоменклатуры.Владелец = Номенклатура.Ссылка
			|ГДЕ
			|	ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)
			|	И ШтрихкодыНоменклатуры.Характеристика.Наименование = &Наименование";
		
		ИнтеграцияИСРТ.ОпределитьВидПродукцииТекстаЗапроса(ТекстЗапроса, "Номенклатура");
		ИнтеграцияИСРТ.ОпределитьОсобенностиУчетаТекстаЗапроса(ТекстЗапроса, "Номенклатура",, Истина);
		ОпределениеМаркируемаяПродукция = ИнтеграцияИСРТ.ОпределениеПризнакаМаркируемаяПродукцияТекстаЗапроса("Номенклатура");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОпределениеПризнакаМаркируемаяПродукция", ОпределениеМаркируемаяПродукция);
	
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Наименование", МРЦ);		
	КонецЕсли;   
	
	Запрос.УстановитьПараметр("Штрихкоды", ДанныеПоШтрихкодамEAN.ВыгрузитьКолонку("ШтрихкодEAN"));	
	
	флВозможноЭтоБлок	=	Ложь;
	Если Запрос.Выполнить().Пустой() тогда // дополнительно для блока
		флВозможноЭтоБлок = Истина;
		Запрос.Текст	=	СтрЗаменить(Запрос.Текст, "И ШтрихкодыНоменклатуры.Характеристика.Наименование = &Наименование", "");
	КонецЕсли;
	
	
	ДанныеПоШтрихкодам = Запрос.Выполнить().Выгрузить();   
	
	Если флВозможноЭтоБлок тогда
		Для каждого Строка Из ДанныеПоШтрихкодам цикл
			Запрос	=	Новый Запрос("ВЫБРАТЬ
			      	 	             |	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
			      	 	             |ИЗ
			      	 	             |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			      	 	             |ГДЕ
			      	 	             |	ХарактеристикиНоменклатуры.Наименование = &Наименование
			      	 	             |	И ХарактеристикиНоменклатуры.Владелец = &Владелец");
			Запрос.УстановитьПараметр("Наименование", МРЦ);	
			Запрос.УстановитьПараметр("Владелец", Строка.Номенклатура);	
			Рез = Запрос.Выполнить().Выбрать();
			Если Рез.Следующий() тогда
				Строка.Характеристика	=	рез.Ссылка;
			КонецЕсли;

		КонецЦикла;
	КонецЕсли;
	//
	
	
	ТребуетсяОбработкаШтрихкодаНовымСтрокам = Истина;
	// Заполним таблицу.
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("ШтрихкодEAN");
	ДанныеПоШтрихкодамРезультат = ДанныеПоШтрихкодамEAN.СкопироватьКолонки(); 
	Для Каждого СтрокаТаблицы Из ДанныеПоШтрихкодамEAN Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, СтрокаТаблицы);
		
		// Определим, требуется ли обработка штрихкода средствами РТ.
		НайденаПродукцияИС = Ложь;
		
		СтрокиШтрихкодов = ДанныеПоШтрихкодам.НайтиСтроки(ПараметрыПоиска);
		Для Каждого СтрокаШтрихкод Из СтрокиШтрихкодов Цикл
			Если СтрокаШтрихкод.ПродукцияИС И СтрокаШтрихкод.МаркируемаяПродукция Тогда
				НайденаПродукцияИС = Истина;
				ТребуетсяОбработкаШтрихкодаНовымСтрокам = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ТребуетсяОбработкаШтрихкода = НЕ НайденаПродукцияИС;
		
		// Добавим найденные штрихкоды в результирующую таблицу.
		Для Каждого СтрокаШтрихкод Из СтрокиШтрихкодов Цикл
			СтрокаРезультат = ДанныеПоШтрихкодамРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаШтрихкод);
			СтрокаРезультат.ТребуетсяОбработкаШтрихкода = ТребуетсяОбработкаШтрихкода;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ДанныеПоШтрихкодамEAN Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыПоиска, СтрокаТаблицы);
		СтрокиШтрихкодов = ДанныеПоШтрихкодам.НайтиСтроки(ПараметрыПоиска);
		
		// Добавим ненайденные штрихкоды, если сканирование выполняется не в форме проверки и подбора.
		Если СтрокиШтрихкодов.Количество() = 0 Тогда
			// Не нашли штрихкод.
			СтрокаРезультат = ДанныеПоШтрихкодамРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, СтрокаТаблицы);
			СтрокаРезультат.ТребуетсяОбработкаШтрихкода = ТребуетсяОбработкаШтрихкодаНовымСтрокам;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ПарамтерыПоискаРМК = Неопределено Тогда
		
		Штрихкод = ПарамтерыПоискаРМК.ШтрихкодОригинальный;
		ЭтоШтрихкодНоменклатуры = Ложь;
		Для Каждого СтрокаДанных Из ДанныеПоШтрихкодамРезультат Цикл
			Если Штрихкод = СтрокаДанных.ШтрихкодEAN Тогда
				ЭтоШтрихкодНоменклатуры = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтоШтрихкодНоменклатуры Тогда
			ДанныеПоШтрихкодамРезультат.Очистить();
		КонецЕсли;
		
		Если ПарамтерыПоискаРМК.Свойство("ДанныеРучногоСопоставления") Тогда
			ДанныеРучногоСопоставления = ПарамтерыПоискаРМК.ДанныеРучногоСопоставления;
			ДанныеПоШтрихкодамРезультат.Очистить();
			
			НоваяСтрока = ДанныеПоШтрихкодамРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеРучногоСопоставления, , "Упаковка");
			Если ТипЗнч(ДанныеРучногоСопоставления.Упаковка) = Тип("СправочникСсылка.УпаковкиНоменклатуры") Тогда
				НоваяСтрока.Упаковка = ДанныеРучногоСопоставления.Упаковка;
			КонецЕсли;
			НоваяСтрока.ШтрихкодEAN = ДанныеРучногоСопоставления.Штрихкод;
			НоваяСтрока.ВидПродукции = ИнтеграцияИСРТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(НоваяСтрока.Номенклатура.ОсобенностьУчета);
			НоваяСтрока.Количество = 1;
			НоваяСтрока.МаркируемаяПродукция = Истина;
			НоваяСтрока.ПредставлениеНоменклатуры = НоваяСтрока.Номенклатура;
		КонецЕсли;
		
		НайденаНоменклатура = Ложь;
		Для Каждого СтрокаРезультата Из ДанныеПоШтрихкодамРезультат Цикл
			Если ЗначениеЗаполнено(СтрокаРезультата.Номенклатура) Тогда
				НайденаНоменклатура = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если НайденаНоменклатура Тогда
			ПарамтерыПоискаРМК.ФильтрПоискаПоШтрихкоду.Вставить("ЗаданнаяТаблицаНоменклатуры", ДанныеПоШтрихкодамРезультат);
		КонецЕсли;
		ДанныеШтрихкодаРМК = Новый Структура;
		РаботаСоШтрихкодамиПереопределяемый.ЗаполнитьДанныеПоискаПоШтрихкоду(Штрихкод, ПарамтерыПоискаРМК, ДанныеШтрихкодаРМК);
		Если НайденаНоменклатура Тогда
			ПарамтерыПоискаРМК.ФильтрПоискаПоШтрихкоду.Удалить("ЗаданнаяТаблицаНоменклатуры");
		КонецЕсли;
		ДанныеШтрихкодаРМК.Вставить("ПараметрыДляОбработкиШтрихкода", ПарамтерыПоискаРМК.ПараметрыДляОбработкиШтрихкода);
		
		Если Не НайденаНоменклатура И Не ЭтоШтрихкодНоменклатуры И ДанныеПоШтрихкодамРезультат.Количество() > 0 Тогда
			Если ДанныеШтрихкодаРМК.ЗначенияПоиска.Количество() > 0 Тогда
				Для Каждого ЗначениеПоиска Из ДанныеШтрихкодаРМК.ЗначенияПоиска Цикл
					Если ЗначениеПоиска.ТипОбъекта = Тип("СправочникСсылка.ШтрихкодыУпаковокТоваров")
						И ЗначениеЗаполнено(ЗначениеПоиска.Владелец.Номенклатура) Тогда
						СтрокаДанных = ДанныеПоШтрихкодамРезультат[0];
						СтрокаДанных.ВидПродукции              =
							ИнтеграцияИСРТКлиентСервер.ОсобенностьУчетаПоВидуПродукции(ЗначениеПоиска.Номенклатура.ОсобенностьУчета);
						СтрокаДанных.МаркируемаяПродукция      = Истина;
						СтрокаДанных.Номенклатура              = ЗначениеПоиска.Номенклатура;
						СтрокаДанных.ПредставлениеНоменклатуры = ЗначениеПоиска.Номенклатура;
						НайденаНоменклатура = Истина;
						ДанныеПоШтрихкодамРезультат.ЗаполнитьЗначения(Ложь, "ТребуетсяОбработкаШтрихкода");
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ДанныеПоШтрихкодамРезультат.Количество() = 0 Тогда
			ШтрихкодПоискаДляСопоставления = ?(ЭтоШтрихкодНоменклатуры, Штрихкод, ДанныеШтрихкодаРМК.ПараметрыШтрихкода.ШтрихкодПоиска);
			
			НоваяСтрока = ДанныеПоШтрихкодамРезультат.Добавить();
			НоваяСтрока.ТребуетсяОбработкаШтрихкода = Истина;
			НоваяСтрока.ШтрихкодEAN = ШтрихкодПоискаДляСопоставления;
			НоваяСтрока.ДанныеШтрихкода = ДанныеШтрихкодаРМК;
		Иначе
			Для Каждого СтрокаТовара Из ДанныеПоШтрихкодамРезультат Цикл
				Если Не НайденаНоменклатура Тогда
					СтрокаТовара.ТребуетсяОбработкаШтрихкода = Истина;
				КонецЕсли;
				СтрокаТовара.ДанныеШтрихкода = ДанныеШтрихкодаРМК;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ИменаКолонок = Новый Массив;
	Для Каждого Колонка Из ДанныеПоШтрихкодамРезультат.Колонки Цикл
		ИменаКолонок.Добавить(Колонка.Имя);
	КонецЦикла;
	ДанныеПоШтрихкодамРезультат.Свернуть(СтрСоединить(ИменаКолонок, ","));
	
	ДанныеПоШтрихкодамEAN = ДанныеПоШтрихкодамРезультат;

КонецПроцедуры

//&Вместо("ЗаполнитьДанныеПоШтрихкодамEAN")
//Процедура ТБКЗаполнитьДанныеПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN)

//	ШтрихкодыEAN = ДанныеПоШтрихкодамEAN.ВыгрузитьКолонку("ШтрихкодEAN");
//	МассивКодовSKU = Новый Массив;
//	СоответствиеВесовыхШтрихкодов = Новый Соответствие;
//	Для Каждого ШтрихкодEAN Из ШтрихкодыEAN Цикл 
//		ПрефиксВнутреннегоШтрихкодаВесовогоТовара = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПрефиксВнутреннегоШтрихкодаВесовогоТовара");
//		ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара");
//		ДлинаКодаВесовогоТовара = СтрДлина(Формат(ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ВерхняяГраницаДиапазонаSKUВесовогоТовара"), "ЧГ = 0"));

//		ПрефиксКода = Лев(ШтрихкодEAN, 2);
//		ПрефиксВесовой = "2" + ПрефиксВнутреннегоШтрихкодаВесовогоТовара;
//		ПрефиксШтучный = "2" + ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара;
//		ЭтоВесовой = ПрефиксКода = ПрефиксВесовой И СтрДлина(ШтрихкодEAN) < 20; // EAN всегда короче, иначе это марка
//		ЭтоШтучный = ПрефиксКода = ПрефиксШтучный;

//		//вик 2023-04-28
//		ЭтоВесовой = ложь;//появились штучные штрихкоды с префиксом весового
//		//
//		
//		Если ДлинаКодаВесовогоТовара < 5 Тогда
//			ДлинаКодаВесовогоТовара = 5;
//		КонецЕсли;

//		КодТовара = ШтрихкодEAN;
//		Если ЭтоВесовой ИЛИ ЭтоШтучный Тогда
//			КодТовара = Число(Сред(ШтрихкодEAN, 3,  ДлинаКодаВесовогоТовара));
//			МассивКодовSKU.Добавить(КодТовара);
//		КонецЕсли;

//		СоответствиеВесовыхШтрихкодов.Вставить(КодТовара, ШтрихкодEAN);
//	КонецЦикла;

//	ТекстЗапроса = 
//	"ВЫБРАТЬ DISTINCT
//	|	0 КАК Порядок,
//	|	ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура) КАК Номенклатура,
//	|	ПРЕДСТАВЛЕНИЕ(ШтрихкодыНоменклатуры.Владелец) КАК ПредставлениеНоменклатуры,
//	
//	//|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
//	|	Характеристики.Ссылка КАК Характеристика,
//	
//	|	Значение(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
//	|	ШтрихкодыНоменклатуры.Штрихкод КАК ШтрихкодEAN,
//	|	ВЫБОР
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).АлкогольнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Алкогольная)
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ТабачнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Табачная)
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ОбувнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувная)
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПустаяСсылка)
//	|	КОНЕЦ КАК ВидПродукции,
//	|	ЕСТЬNULL(ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
//	|		ИЛИ ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ТабачнаяПродукция
//	|		ИЛИ ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ОбувнаяПродукция КАК МаркируемаяПродукция
//	|ИЗ
//	|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
//	|		ПО (ВидыНоменклатуры.Ссылка = ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ВидНоменклатуры)
//	|			И (ВидыНоменклатуры.ОсобенностьУчета В (ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция), ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция), ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувная)))
//	|	LEFT JOIN Справочник.ХарактеристикиНоменклатуры Характеристики ПО Характеристики.Владелец = ШтрихкодыНоменклатуры.Владелец И ШтрихкодыНоменклатуры.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики
//	|ГДЕ
//	|	НЕ ШтрихкодыНоменклатуры.Владелец.ПометкаУдаления
//	|	И ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ DISTINCT
//	|	1,
//	|	ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура),
//	|	ПРЕДСТАВЛЕНИЕ(ШтрихкодыНоменклатуры.Владелец),
//	
//	//|	ШтрихкодыНоменклатуры.Характеристика,
//	|	Характеристики.Ссылка КАК Характеристика,
//	
//	|	Значение(Справочник.СерииНоменклатуры.ПустаяСсылка),
//	|	ШтрихкодыНоменклатуры.Штрихкод,
//	|	ВЫБОР
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).АлкогольнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Алкогольная)
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ТабачнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Табачная)
//	|		КОГДА ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ОбувнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувная)
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПустаяСсылка)
//	|	КОНЕЦ,
//	|	ЕСТЬNULL(ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
//	|		ИЛИ ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ТабачнаяПродукция
//	|		ИЛИ ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ОбувнаяПродукция
//	|ИЗ
//	|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
//	|		ПО (ВидыНоменклатуры.Ссылка = ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.Номенклатура).ВидНоменклатуры)
//	|			И (НЕ ВидыНоменклатуры.ОсобенностьУчета В (ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция), ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция), ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувная)))
//	|	LEFT JOIN Справочник.ХарактеристикиНоменклатуры Характеристики ПО Характеристики.Владелец = ШтрихкодыНоменклатуры.Владелец И ШтрихкодыНоменклатуры.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики
//	|ГДЕ
//	|	НЕ ШтрихкодыНоменклатуры.Владелец.ПометкаУдаления
//	|	И ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ
//	|	2,
//	|	КодыТоваровSKU.Номенклатура,
//	|	ПРЕДСТАВЛЕНИЕ(КодыТоваровSKU.Номенклатура),
//	|	КодыТоваровSKU.Характеристика,
//	|	Значение(Справочник.СерииНоменклатуры.ПустаяСсылка),
//	|	КодыТоваровSKU.SKU,
//	|	ВЫБОР
//	|		КОГДА СпрНоменклатура.АлкогольнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Алкогольная)
//	|		КОГДА СпрНоменклатура.ТабачнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Табачная)
//	|		КОГДА СпрНоменклатура.ОбувнаяПродукция
//	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Обувная)
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПустаяСсылка)
//	|	КОНЕЦ,
//	|	ЕСТЬNULL(СпрНоменклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
//	|		ИЛИ СпрНоменклатура.ТабачнаяПродукция
//	|		ИЛИ СпрНоменклатура.ОбувнаяПродукция
//	|ИЗ
//	|	РегистрСведений.КодыТоваровSKU КАК КодыТоваровSKU
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
//	|		ПО КодыТоваровSKU.Номенклатура = СпрНоменклатура.Ссылка
//	|ГДЕ
//	|	КодыТоваровSKU.SKU В(&МассивКодовSKU)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ
//	|	3,
//	|	ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.ИнформационныеКарты),
//	|	ПРЕДСТАВЛЕНИЕ(ШтрихкодыНоменклатуры.Владелец),
//	|	ШтрихкодыНоменклатуры.Характеристика,
//	|	Значение(Справочник.СерииНоменклатуры.ПустаяСсылка),
//	|	ШтрихкодыНоменклатуры.Штрихкод,
//	|	ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПустаяСсылка),
//	|	ЛОЖЬ
//	|ИЗ
//	|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
//	|ГДЕ
//	|	НЕ ШтрихкодыНоменклатуры.Владелец.ПометкаУдаления
//	|	И ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)
//	|	И ТИПЗНАЧЕНИЯ(ШтрихкодыНоменклатуры.Владелец) = ТИП(Справочник.ИнформационныеКарты)
//	|
//	|ОБЪЕДИНИТЬ ВСЕ
//	|
//	|ВЫБРАТЬ
//	|	4,
//	|	ВЫРАЗИТЬ(ШтрихкодыНоменклатуры.Владелец КАК Справочник.СерийныеНомера),
//	|	ПРЕДСТАВЛЕНИЕ(ШтрихкодыНоменклатуры.Владелец),
//	|	ШтрихкодыНоменклатуры.Характеристика,
//	|	Значение(Справочник.СерииНоменклатуры.ПустаяСсылка),
//	|	ШтрихкодыНоменклатуры.Штрихкод,
//	|	ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.ПустаяСсылка),
//	|	ЛОЖЬ
//	|ИЗ
//	|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
//	|ГДЕ
//	|	НЕ ШтрихкодыНоменклатуры.Владелец.ПометкаУдаления
//	|	И ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)
//	|	И ТИПЗНАЧЕНИЯ(ШтрихкодыНоменклатуры.Владелец) = ТИП(Справочник.СерийныеНомера)
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Порядок";

//	Запрос = Новый Запрос(ТекстЗапроса);

//	Запрос.УстановитьПараметр("Штрихкоды",      ШтрихкодыEAN);
//	Запрос.УстановитьПараметр("МассивКодовSKU", МассивКодовSKU);

//	ДанныеПоШтрихкодам = Запрос.Выполнить().Выгрузить();
//	Для Каждого ДанныеПоШтрихкоду Из ДанныеПоШтрихкодам Цикл 
//		ДанныеПоШтрихкоду.ШтрихкодEAN = СоответствиеВесовыхШтрихкодов.Получить(ДанныеПоШтрихкоду.ШтрихкодEAN);
//	КонецЦикла;

//	ДанныеПоШтрихкодамEAN = ДанныеПоШтрихкодам;

//КонецПроцедуры
