
&Вместо("СформироватьXMLПакетДляФискализацияЧека")
Процедура ТБКСформироватьXMLПакетДляФискализацияЧека(ОбщиеПараметры, ПараметрыФискализации, ВключатьПерсональныеДанные = Ложь, 
													ПерсональныеДанные = Неопределено, ТипПерсональныхДанных = Неопределено)
		
	// ++ Локализация
	ПозицииЧека  = ОбщиеПараметры.ПозицииЧека;
	ТаблицаОплат = ОбщиеПараметры.ТаблицаОплат;
	Электронно   = ОбщиеПараметры.Электронно;

	ТипРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодРасчетаДенежнымиСредствами(ОбщиеПараметры.ТипРасчета);
	СистемаНалогообложения = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодСистемыНалогообложенияККТ(ОбщиеПараметры.СистемаНалогообложения);
	
	// Таблица оплат
	СуммаЧека = 0;
	СуммаНаличные       = 0;
	СуммаЭлектронно     = 0;
	СуммаПредоплата     = 0;
	СуммаПостоплата     = 0;
	СуммаПредоставление = 0;

	Если ТаблицаОплат <> Неопределено Тогда
		Для ИндексОплаты = 0 По ТаблицаОплат.Количество() - 1 Цикл
			Если ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Электронно Тогда
				СуммаЭлектронно = СуммаЭлектронно + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Предоплата Тогда
				СуммаПредоплата = СуммаПредоплата + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.Постоплата Тогда
				СуммаПостоплата = СуммаПостоплата + ТаблицаОплат[ИндексОплаты].Сумма;
			ИначеЕсли ТаблицаОплат[ИндексОплаты].ТипОплаты = Перечисления.ТипыОплатыККТ.ВстречноеПредоставление Тогда
				СуммаПредоставление = СуммаПредоставление + ТаблицаОплат[ИндексОплаты].Сумма;
			Иначе
				СуммаНаличные = СуммаНаличные + ТаблицаОплат[ИндексОплаты].Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ОплатаНеНаличными = СуммаЭлектронно + СуммаПостоплата + СуммаПредоплата + СуммаПредоставление;
	
	// Выводим в печатную форму чека дополнительную информацию по СПБ и НСПК
	Если ОбщиеПараметры.Свойство("ДетализацияОплаты") И ОбщиеПараметры.ДетализацияОплаты.Количество() > 0 И НЕ ПараметрыФискализации.ДетализацияОплатыДобавлено Тогда
		
		ПараметрыФискализации.ДетализацияОплатыДобавлено = Истина;
		
		СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека();
		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		
		ТекстСтроки = НСтр("ru='ДЕТАЛИЗАЦИЯ ОПЛАТЫ'");
		СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(ТекстСтроки);
		СтрокаЧека.Выравнивание = "Центр";
		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		
		ФорматЧисла = "ЧРД=.;ЧЦ=12;ЧДЦ=2;ЧН=0.00;ЧГ=0";
		Для Каждого ДетализацияОплаты Из ОбщиеПараметры.ДетализацияОплаты Цикл
			ТекстСтроки = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ВыстроитьПоля(ДетализацияОплаты.НаименованиеТипаОплаты,
				Формат(ДетализацияОплаты.Сумма, ФорматЧисла), ПараметрыФискализации.ШиринаСтроки);
			СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(ТекстСтроки);
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		КонецЦикла       
	КонецЕсли;          
	
	// QR-код по СПБ и НСПК	
	Если ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств Тогда
		Если ОбщиеПараметры.Свойство("QRКод") И Не ПустаяСтрока(ОбщиеПараметры.QRКод.ЗначениеКода) И НЕ ПараметрыФискализации.QRКодДобавлено Тогда
			
			ПараметрыФискализации.QRКодДобавлено = Истина;
			
			СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека();
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		
			СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыШтрихкодВСтрокеЧека("QR", ОбщиеПараметры.QRКод.ЗначениеКода);
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		
			СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека();
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
		
			Если НЕ ПустаяСтрока(ОбщиеПараметры.ТипПлатежнойСистемы) Тогда
				СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(ОбщиеПараметры.ТипПлатежнойСистемы);
				СтрокаЧека.Выравнивание = "Центр";
				ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);
			КонецЕсли;
			Если НЕ ПустаяСтрока(ОбщиеПараметры.QRКод.ТекстПользователя) Тогда
				СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(ОбщиеПараметры.QRКод.ТекстПользователя);
				СтрокаЧека.Выравнивание = "Центр";
				ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека); 
			КонецЕсли;
			
			СтрокаЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека();
			ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаЧека);    
			
		КонецЕсли;
	КонецЕсли;   
	
	// Пакетная печать чека. Подготовка пакета.
	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку("UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("CheckPackage");
	
	Если ПараметрыФискализации.РевизияИнтерфейса >= 3000 Тогда  // Версия стандарта 3.0 (ОФД 1.1)
		ЗаписьXML.ЗаписатьНачалоЭлемента("Parameters");
		ЗаписьXML.ЗаписатьАтрибут("CashierName",  XMLСтрока(ОбщиеПараметры.Кассир));
		Если Не ПустаяСтрока(ОбщиеПараметры.КассирИНН) Тогда 
			ЗаписьXML.ЗаписатьАтрибут("CashierINN", XMLСтрока(ОбщиеПараметры.КассирИНН));
		КонецЕсли;
		ЗаписьXML.ЗаписатьАтрибут("OperationType", XMLСтрока(ТипРасчета));
		ЗаписьXML.ЗаписатьАтрибут("TaxationSystem" , XMLСтрока(СистемаНалогообложения));
		
		Если Не ПустаяСтрока(ОбщиеПараметры.ОтправительEmail) И Электронно Тогда // Отправитель Email указывается только для Электронно.
			ЗаписьXML.ЗаписатьАтрибут("SenderEmail", XMLСтрока(ОбщиеПараметры.ОтправительEmail));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("АдресРасчетов") И НЕ ПустаяСтрока(ОбщиеПараметры.АдресРасчетов) Тогда   
			ЗаписьXML.ЗаписатьАтрибут("SaleAddress", XMLСтрока(ОбщиеПараметры.АдресРасчетов));
		КонецЕсли;
		Если ОбщиеПараметры.Свойство("МестоРасчетов") И НЕ ПустаяСтрока(ОбщиеПараметры.МестоРасчетов) Тогда  
			ЗаписьXML.ЗаписатьАтрибут("SaleLocation", XMLСтрока(ОбщиеПараметры.МестоРасчетов));
		КонецЕсли;
		
		Если ПараметрыФискализации.РевизияИнтерфейса >= 4000 Тогда      
			Если ОбщиеПараметры.Свойство("СворачиватьОдинаковыеСтрокПриПечати") Тогда  
				ЗаписьXML.ЗаписатьАтрибут("GroupingPositionsWhenPrinting", XMLСтрока(ОбщиеПараметры.СворачиватьОдинаковыеСтрокПриПечати));
			КонецЕсли;
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ПокупательEmail") Тогда
			ЗаписьXML.ЗаписатьАтрибут("CustomerEmail", XMLСтрока(?(ОбщиеПараметры.Свойство("ПокупательEmail"), ОбщиеПараметры.ПокупательEmail, "")));
		КонецЕсли;
		// SMS отправляет средствами 1C
		Если ОбщиеПараметры.Свойство("ПокупательНомер") Тогда
			ПокупательНомер = ?(ОбщиеПараметры.Свойство("ПокупательНомер"), ОбщиеПараметры.ПокупательНомер, "");    
			ПокупательНомер = МенеджерОборудованияКлиентСервер.АбонентскийНомерФорматФФД(ПокупательНомер);
			ЗаписьXML.ЗаписатьАтрибут("CustomerPhone", XMLСтрока(ПокупательНомер));
		КонецЕсли;
		
		Если ПараметрыФискализации.РевизияИнтерфейса < 3004 Тогда
			
			Получатель = ОбщиеПараметры.Получатель;
			Если ПустаяСтрока(Получатель) Тогда
				Получатель = ОбщиеПараметры.СведенияОПокупателе.Покупатель;
			КонецЕсли;
			ПолучательИНН = ОбщиеПараметры.ПолучательИНН;
			Если ПустаяСтрока(ПолучательИНН) Тогда
				ПолучательИНН = ОбщиеПараметры.СведенияОПокупателе.ПокупательИНН;
			КонецЕсли;
			Если ПерсональныеДанные <> Неопределено Тогда
				Если ТипПерсональныхДанных = Перечисления.ТипыПерсональныхДанныхККТ.ИНН Тогда
					ПолучательИНН = ПерсональныеДанные.ИНН;
				ИначеЕсли Не ПустаяСтрока(ПерсональныеДанные.ДанныеДокумента) Тогда      
					Получатель = СтрШаблон("<%1> <%2>", Получатель, ПерсональныеДанные.ДанныеДокумента); 
				КонецЕсли;
			КонецЕсли;
			Если Не ПустаяСтрока(Получатель) Тогда
				ЗаписьXML.ЗаписатьАтрибут("CustomerInfo", XMLСтрока(Получатель));
			КонецЕсли;
			Если Не ПустаяСтрока(ПолучательИНН) Тогда
				ЗаписьXML.ЗаписатьАтрибут("CustomerINN", XMLСтрока(ПолучательИНН));
			КонецЕсли;
			
		Иначе
			Если ОбщиеПараметры.Свойство("НомерАвтомата") И НЕ ПустаяСтрока(ОбщиеПараметры.НомерАвтомата) Тогда
				ЗаписьXML.ЗаписатьАтрибут("AutomatNumber", XMLСтрока(ОбщиеПараметры.НомерАвтомата));
			КонецЕсли;
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ПризнакАгента") И НЕ ПустаяСтрока(ОбщиеПараметры.ПризнакАгента) Тогда
			ПризнакАгента = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.КодПризнакаАгента(ОбщиеПараметры.ПризнакАгента);
			ЗаписьXML.ЗаписатьАтрибут("AgentType", XMLСтрока(ПризнакАгента));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ДополнительныйРеквизит") И НЕ ПустаяСтрока(ОбщиеПараметры.ДополнительныйРеквизит) Тогда  
			ЗаписьXML.ЗаписатьАтрибут("AdditionalAttribute", XMLСтрока(ОбщиеПараметры.ДополнительныйРеквизит));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ДанныеКоррекции") Тогда
			ЗаписатьДанныеКоррекции(ЗаписьXML, ОбщиеПараметры.ДанныеКоррекции);
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ДополнительныйРеквизитПользователя") Тогда
			ЗаписатьДополнительныйРеквизитПользователя(ЗаписьXML, ОбщиеПараметры.ДополнительныйРеквизитПользователя);
		КонецЕсли;
		
		ЗаписатьДанныеАгента(ЗаписьXML, ОбщиеПараметры.ДанныеАгента, ПараметрыФискализации.РевизияИнтерфейса);
		ЗаписатьДанныеПоставщика(ЗаписьXML, ОбщиеПараметры.ДанныеПоставщика, ПараметрыФискализации.РевизияИнтерфейса);
		
		Если ПараметрыФискализации.РевизияИнтерфейса >= 3004 Тогда
			ЗаписатьСведенияОПокупателе(ЗаписьXML, ОбщиеПараметры, ПерсональныеДанные, ТипПерсональныхДанных);
			ЗаписатьОперационныйРеквизит(ЗаписьXML, ОбщиеПараметры.ОперационныйРеквизит);
			ЗаписатьОтраслевойРеквизит(ЗаписьXML, ОбщиеПараметры.ОтраслевойРеквизит);
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		Если ОбщиеПараметры.Свойство("ФорматФД") Тогда
			ФорматФД = ОбщиеПараметры.ФорматФД;
		Иначе
			ФорматФД = "1.2";
		КонецЕсли;
		
		// Табличная часть
		Если ОбщиеПараметры.ПозицииЧека <> Неопределено Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("Positions");
			Для ИндексМассива = 0 По ОбщиеПараметры.ПозицииЧека.Количество() - 1 Цикл
				ТекущаяПозиция = ОбщиеПараметры.ПозицииЧека[ИндексМассива]; // см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека
				
				Если ТекущаяПозиция.Свойство("ФискальнаяСтрока") Тогда // Фискальная строка
					
					Если ТекущаяПозиция.ЦенаСоСкидками = 0 И ТекущаяПозиция.Сумма > 0 И ТекущаяПозиция.Количество > 0 Тогда
						ЦенаСоСкидками = Окр(ТекущаяПозиция.Сумма / ТекущаяПозиция.Количество, 2); 
					Иначе
						ЦенаСоСкидками = ТекущаяПозиция.ЦенаСоСкидками; 
					КонецЕсли;
					ЗаписьXML.ЗаписатьНачалоЭлемента("FiscalString");
					ЗаписьXML.ЗаписатьАтрибут("Name"              , XMLСтрока(ТекущаяПозиция.Наименование)); // Наименование товара.
					ЗаписьXML.ЗаписатьАтрибут("Quantity"          , XMLСтрока(ТекущаяПозиция.Количество)); // Количество товара.
					ЗаписьXML.ЗаписатьАтрибут("PriceWithDiscount" , XMLСтрока(ЦенаСоСкидками)); // Цена единицы товара с учетом скидок/наценок.
					ЗаписьXML.ЗаписатьАтрибут("AmountWithDiscount", XMLСтрока(ТекущаяПозиция.Сумма)); // Конечная сумма по позиции чека с учетом всех скидок/наценок.
					ЗаписьXML.ЗаписатьАтрибут("DiscountAmount"    , XMLСтрока(ТекущаяПозиция.СуммаСкидок)); // Сумма скидок и наценок.
					ЗаписьXML.ЗаписатьАтрибут("Department"        , XMLСтрока(ТекущаяПозиция.НомерСекции)); // Отдел, по которому ведется продажа
					
					//Марк 2025-02-13
					//Если НЕ ПустаяСтрока(ТекущаяПозиция.СтавкаНДС) Тогда 
					//	Если ТекущаяПозиция.СтавкаНДС = 118 Тогда
					//		ЗначениеСтавкаНДС = "18/118";
					//	ИначеЕсли ТекущаяПозиция.СтавкаНДС = 110 Тогда
					//		ЗначениеСтавкаНДС = "10/110";
					//	ИначеЕсли ТекущаяПозиция.СтавкаНДС = 120 Тогда
					//		ЗначениеСтавкаНДС = "20/120";
					//	Иначе
					//		ЗначениеСтавкаНДС = ТекущаяПозиция.СтавкаНДС;
					//	КонецЕсли;
					//Иначе
					//	ЗначениеСтавкаНДС = "none";
					//КонецЕсли;
					ЗначениеСтавкаНДС = ПредставлениеСтавкиНДС(ТекущаяПозиция.СтавкаНДС, ПараметрыФискализации.РевизияИнтерфейса);					
					
					ЗаписьXML.ЗаписатьАтрибут("VATRate", XMLСтрока(ЗначениеСтавкаНДС)); // Ставка НДС
					//Если ТекущаяПозиция.Свойство("СуммаНДС") Тогда 
					Если ТекущаяПозиция.Свойство("СуммаНДС") И НЕ ПустаяСтрока(ТекущаяПозиция.СуммаНДС) И ЗначениеСтавкаНДС <> "none" Тогда
						ЗаписьXML.ЗаписатьАтрибут("VATAmount", XMLСтрока(ТекущаяПозиция.СуммаНДС));
					КонецЕсли;
					//КонецМарк
					
					Если ТекущаяПозиция.Свойство("ПризнакСпособаРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакСпособаРасчета) Тогда
						ПризнакСпособаРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодПризнакаСпособаРасчета(ТекущаяПозиция.ПризнакСпособаРасчета);
						ЗаписьXML.ЗаписатьАтрибут("PaymentMethod", XMLСтрока(ПризнакСпособаРасчета));
					КонецЕсли;
					
					ПризнакПредметаРасчета = Неопределено;
					Если ТекущаяПозиция.Свойство("ПризнакПредметаРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакПредметаРасчета) Тогда
						ПризнакПредметаРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодПризнакаПредметаРасчета(ТекущаяПозиция.ПризнакПредметаРасчета);
						Если ПризнакПредметаРасчета <> Неопределено Тогда
							ЗаписьXML.ЗаписатьАтрибут("CalculationSubject", XMLСтрока(ПризнакПредметаРасчета));
						КонецЕсли;
					КонецЕсли;
				
					Если ТекущаяПозиция.Свойство("ПризнакАгентаПоПредметуРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакАгентаПоПредметуРасчета) Тогда
						ПризнакАгентаПоПредметуРасчета = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.КодПризнакаАгента(ТекущаяПозиция.ПризнакАгентаПоПредметуРасчета);
						ЗаписьXML.ЗаписатьАтрибут("CalculationAgent", XMLСтрока(ПризнакАгентаПоПредметуРасчета));
					КонецЕсли;  
					
					Если ТекущаяПозиция.Свойство("КодСтраныПроисхожденияТовара") И НЕ ПустаяСтрока(ТекущаяПозиция.КодСтраныПроисхожденияТовара) Тогда
						ЗаписьXML.ЗаписатьАтрибут("CountryOfOrigin", XMLСтрока(ТекущаяПозиция.КодСтраныПроисхожденияТовара));
					КонецЕсли;
					
					Если ТекущаяПозиция.Свойство("НомерТаможеннойДекларации") И НЕ ПустаяСтрока(ТекущаяПозиция.НомерТаможеннойДекларации) Тогда
						ЗаписьXML.ЗаписатьАтрибут("CustomsDeclaration", XMLСтрока(ТекущаяПозиция.НомерТаможеннойДекларации));
					КонецЕсли;
					
					Если ТекущаяПозиция.Свойство("СуммаАкциза") И ТекущаяПозиция.СуммаАкциза <> Неопределено Тогда
						Если Число(ТекущаяПозиция.СуммаАкциза) > 0 Тогда
							ЗаписьXML.ЗаписатьАтрибут("ExciseAmount", XMLСтрока(ТекущаяПозиция.СуммаАкциза));
						ИначеЕсли ПризнакПредметаРасчета <> Неопределено Тогда       
							Если ПризнакПредметаРасчета = 2 Или ПризнакПредметаРасчета = 30 Или ПризнакПредметаРасчета = 31 Тогда      
								ЗаписьXML.ЗаписатьАтрибут("ExciseAmount", XMLСтрока(ТекущаяПозиция.СуммаАкциза));
							КонецЕсли;     
						КонецЕсли;
					КонецЕсли;
					
					Если ТекущаяПозиция.Свойство("ДополнительныйРеквизит") Тогда // Тэг 1191
						
						ДополнительныйРеквизит = "";
						Если НЕ ПустаяСтрока(ТекущаяПозиция.ДополнительныйРеквизит) Тогда
							ДополнительныйРеквизит = ТекущаяПозиция.ДополнительныйРеквизит;
						ИначеЕсли ВедетсяОбъемноСортовойУчет() И ТекущаяПозиция.ОбъемноСортовойУчет И ПараметрыФискализации.РевизияИнтерфейса < 3004 Тогда  
							// Передача сведений об объемно сортовой товара при оптовой продаже через ККТ
							ДополнительныйРеквизит = "crpt=mrk"; 
						ИначеЕсли ТекущаяПозиция.Свойство("ДробноеКоличество") И ПараметрыФискализации.РевизияИнтерфейса < 3004 Тогда
							// Дробное количество, рекомендации ЦРПТ "ВЫВОД ТОВАРА ИЗ ОБОРОТА ПРИ РЕАЛИЗАЦИИ КОНЕЧНЫМ ПОТРЕБИТЕЛЯМ (ЧАСТИЧНАЯ ПРОДАЖА)"
							// для 1.05 и 1.1 - пишем в 1191, Формирование и  передача фискального  документа в ГИС МТ 
							Если Не ПустаяСтрока(ТекущаяПозиция.ДробноеКоличество.Числитель) И Не ПустаяСтрока(ТекущаяПозиция.ДробноеКоличество.Знаменатель) Тогда
								Числитель = Число(ТекущаяПозиция.ДробноеКоличество.Числитель);
								Знаменатель = Число(ТекущаяПозиция.ДробноеКоличество.Знаменатель);
								ДополнительныйРеквизит = "mrk"; // Префикс «mrk», если  после «mrk» указание  дробной  части  отсутствует, упаковка считается выведенной из оборота полностью.
								Если Числитель <> Знаменатель Тогда
									ДополнительныйРеквизит = ДополнительныйРеквизит + Строка(Числитель) + "/" + Строка(Знаменатель) + "&"; 
								КонецЕсли;
							КонецЕсли;        
						КонецЕсли;
						Если Не ПустаяСтрока(ДополнительныйРеквизит) Тогда 
							ЗаписьXML.ЗаписатьАтрибут("AdditionalAttribute", XMLСтрока(ДополнительныйРеквизит));  // Тэг 1191
						КонецЕсли;
					КонецЕсли;
					
					Если ПараметрыФискализации.РевизияИнтерфейса >= 3004 Тогда
						
						Если Не ПустаяСтрока(ТекущаяПозиция.КонтрольнаяМарка) Тогда
							ЗаписьXML.ЗаписатьАтрибут("MarkingCode", XMLСтрока(ТекущаяПозиция.КонтрольнаяМарка));
						КонецЕсли;
						
						Если ФорматФД = "1.2" Тогда
							ДробноеКоличествоУказано = Ложь;
							ДробноеКоличество = ТекущаяПозиция.ДробноеКоличество;
							Если Не ПустаяСтрока(ДробноеКоличество.Числитель) И Не ПустаяСтрока(ДробноеКоличество.Знаменатель) Тогда
								Если Число(ДробноеКоличество.Числитель) > 0 И Число(ДробноеКоличество.Знаменатель) > 0 Тогда 
									ДробноеКоличествоУказано = Истина;
								КонецЕсли;
							КонецЕсли;
							
							Если ДробноеКоличествоУказано Тогда            
								МераКоличестваПредметаРасчета = 0;
								ЗаписьXML.ЗаписатьАтрибут("MeasureOfQuantity", XMLСтрока(МераКоличестваПредметаРасчета));  
								ЗаписьXML.ЗаписатьНачалоЭлемента("FractionalQuantity");
								ЗаписьXML.ЗаписатьАтрибут("Numerator", XMLСтрока(ДробноеКоличество.Числитель));
								ЗаписьXML.ЗаписатьАтрибут("Denominator", XMLСтрока(ДробноеКоличество.Знаменатель));
								ЗаписьXML.ЗаписатьКонецЭлемента();  
							Иначе
								Если ВедетсяОбъемноСортовойУчет() И ТекущаяПозиция.ОбъемноСортовойУчет И Не ПустаяСтрока(ТекущаяПозиция.КоличествоВесовогоТовара) Тогда
									МераКоличестваПредметаРасчета = 11; // Килограмм
								Иначе
								МераКоличестваПредметаРасчета = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.МераКоличестваПредметаРасчетаПоКодуЕдиницыИзмерения(ТекущаяПозиция.КодЕдиницыИзмерения);
								МераКоличестваПредметаРасчета = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.КодМерыКоличестваПредметаРасчетаККТ(МераКоличестваПредметаРасчета);
								КонецЕсли;
								ЗаписьXML.ЗаписатьАтрибут("MeasureOfQuantity", XMLСтрока(МераКоличестваПредметаРасчета));
							КонецЕсли;    
						КонецЕсли;    
					Иначе
						Если ТекущаяПозиция.Свойство("ЕдиницаИзмерения") И ТекущаяПозиция.ЕдиницаИзмерения <> Неопределено Тогда
							ЗаписьXML.ЗаписатьАтрибут("MeasurementUnit", XMLСтрока(Лев(ТекущаяПозиция.ЕдиницаИзмерения, 16)));
						КонецЕсли;   
					КонецЕсли;             
					
					Если Не ПустаяСтрока(ТекущаяПозиция.ЗапросПроверкиКода.ИдентификаторЗапроса)
						И Не ПустаяСтрока(ТекущаяПозиция.ЗапросПроверкиКода.ВременнаяМетка) Тогда
						ЗаполнитьДанныеЗапросПроверкиКода(ТекущаяПозиция);
					ИначеЕсли ВедетсяОбъемноСортовойУчет() И ТекущаяПозиция.ОбъемноСортовойУчет Тогда    
						ЗаполнитьОтраслевойРеквизитОбъемноСортовойУчет(ТекущаяПозиция);
					КонецЕсли;
					Если ОбщегоНазначенияБПО.ИспользуетсяМаркировка() Тогда
						МодульМенеджерОборудованияМаркировка = ОбщегоНазначенияБПО.ОбщийМодуль("МенеджерОборудованияМаркировка");
						МодульМенеджерОборудованияМаркировка.ЗаписатьДанныеКодаТоварнойНоменклатуры(ЗаписьXML, ТекущаяПозиция, ПараметрыФискализации);
					КонецЕсли;
					ЗаписатьДанныеАгента(ЗаписьXML, ТекущаяПозиция.ДанныеАгента, ПараметрыФискализации.РевизияИнтерфейса);
					ЗаписатьДанныеПоставщика(ЗаписьXML, ТекущаяПозиция.ДанныеПоставщика, ПараметрыФискализации.РевизияИнтерфейса);
					Если ПараметрыФискализации.РевизияИнтерфейса >= 3004 Тогда
						ЗаписатьОтраслевойРеквизит(ЗаписьXML, ТекущаяПозиция.ОтраслевойРеквизит);
					КонецЕсли;
					ЗаписьXML.ЗаписатьКонецЭлемента();
					СуммаЧека = СуммаЧека + ТекущаяПозиция.Сумма;
			
				ИначеЕсли ТекущаяПозиция.Свойство("ТекстоваяСтрока") Тогда // Текстовая строка
					Если ТекущаяПозиция.Свойство("ПереносСтроки") И ТекущаяПозиция.ПереносСтроки Тогда 
						ТекстовыеСтроки = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПостроитьПолеПереносом(ТекущаяПозиция.Текст, ПараметрыФискализации.ШиринаСтроки);
					Иначе
						ТекстовыеСтроки = ТекущаяПозиция.Текст;
					КонецЕсли;
					Выравнивание = ?(ТекущаяПозиция.Свойство("Выравнивание"),  ТекущаяПозиция.Выравнивание, "Лево"); 
					Для НомерСтроки = 1 По СтрЧислоСтрок(ТекстовыеСтроки) Цикл
						ВыделеннаяСтрока = СтрПолучитьСтроку(ТекстовыеСтроки, НомерСтроки);
						ВыделеннаяСтрока = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ВыровнятьПоле(ВыделеннаяСтрока, ПараметрыФискализации.ШиринаСтроки, Выравнивание); 
						ЗаписьXML.ЗаписатьНачалоЭлемента("TextString");
						ЗаписьXML.ЗаписатьАтрибут("Text", XMLСтрока(ВыделеннаяСтрока));
						ЗаписьXML.ЗаписатьКонецЭлемента();  
					КонецЦикла;
					
				ИначеЕсли ТекущаяПозиция.Свойство("ШтрихКод") Тогда // Штрихкод
					ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
					ЗаписьXML.ЗаписатьАтрибут("Type" , XMLСтрока(ТекущаяПозиция.ТипШтрихкода));
					// Значение штрихкода. Штрихкод кодируется текстом в кодировке Base64.
					Если ПараметрыФискализации.РевизияИнтерфейса >= 3003 Тогда
						ШтрихКодBase64 = МенеджерОборудованияКлиентСервер.ШтрихкодВBase64(ТекущаяПозиция.ШтрихКод);
						Если ТекущаяПозиция.Свойство("ШтрихКодBase64")
							И НЕ ПустаяСтрока(ТекущаяПозиция.ШтрихКодBase64) Тогда
							ШтрихКодBase64 = ТекущаяПозиция.ШтрихКодBase64;
						КонецЕсли;
						ЗаписьXML.ЗаписатьАтрибут("ValueBase64", XMLСтрока(ШтрихКодBase64));
					Иначе
					ЗаписьXML.ЗаписатьАтрибут("Value", XMLСтрока(ТекущаяПозиция.ШтрихКод));
					КонецЕсли;
					ЗаписьXML.ЗаписатьКонецЭлемента();
				КонецЕсли;
			КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
		// Таблица оплат
		Если ТаблицаОплат <> Неопределено Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("Payments");
				ЗаписьXML.ЗаписатьАтрибут("Cash", XMLСтрока(СуммаНаличные));
				ЗаписьXML.ЗаписатьАтрибут("ElectronicPayment", XMLСтрока(СуммаЭлектронно));
				ЗаписьXML.ЗаписатьАтрибут("PrePayment", XMLСтрока(СуммаПредоплата));
				ЗаписьXML.ЗаписатьАтрибут("PostPayment", XMLСтрока(СуммаПостоплата));
				ЗаписьXML.ЗаписатьАтрибут("Barter", XMLСтрока(СуммаПредоставление));
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
	ИначеЕсли ПараметрыФискализации.РевизияИнтерфейса > 2001 Тогда  // Версия стандарта 2.2 и выше
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Parameters");
		ЗаписьXML.ЗаписатьАтрибут("PaymentType" , XMLСтрока(ТипРасчета));
		ЗаписьXML.ЗаписатьАтрибут("TaxVariant"  , XMLСтрока(СистемаНалогообложения));
		ЗаписьXML.ЗаписатьАтрибут("CashierName" , XMLСтрока(ОбщиеПараметры.Кассир));
		ЗаписьXML.ЗаписатьАтрибут("CashierVATIN", ?(ОбщиеПараметры.Свойство("КассирИНН"), XMLСтрока(ОбщиеПараметры.КассирИНН), ""));
		Если Не ПустаяСтрока(ОбщиеПараметры.ОтправительEmail) И Электронно Тогда // Отправитель Email указывается только для Электронно.
			ЗаписьXML.ЗаписатьАтрибут("SenderEmail", XMLСтрока(ОбщиеПараметры.ОтправительEmail));
		КонецЕсли;
		// Email отправляет средствами 1C
		Если ОбщиеПараметры.Свойство("Отправляет1СEmail") И НЕ ОбщиеПараметры.Отправляет1СEmail Тогда
			ЗаписьXML.ЗаписатьАтрибут("CustomerEmail", XMLСтрока(?(ОбщиеПараметры.Свойство("ПокупательEmail"), ОбщиеПараметры.ПокупательEmail, "")));
		КонецЕсли;
		// SMS отправляет средствами 1C
		Если ОбщиеПараметры.Свойство("Отправляет1СSMS") И НЕ ОбщиеПараметры.Отправляет1СSMS Тогда
			ПокупательНомер = ?(ОбщиеПараметры.Свойство("ПокупательНомер"), ОбщиеПараметры.ПокупательНомер, "");
			Если Не ПустаяСтрока(ПокупательНомер) И Лев(ПокупательНомер, 1) <> "+" Тогда
				ПокупательНомер = "+" + ПокупательНомер;
			КонецЕсли;
			ЗаписьXML.ЗаписатьАтрибут("CustomerPhone", XMLСтрока(ПокупательНомер));
		КонецЕсли;
			
		Если ОбщиеПараметры.Свойство("ПризнакАгента") И НЕ ПустаяСтрока(ОбщиеПараметры.ПризнакАгента) Тогда  // Атрибут с ФФД 1.05 
			ПризнакАгента = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.КодПризнакаАгента(ОбщиеПараметры.ПризнакАгента);
			ЗаписьXML.ЗаписатьАтрибут("AgentSign", XMLСтрока(ПризнакАгента));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("АдресРасчетов") И НЕ ПустаяСтрока(ОбщиеПараметры.АдресРасчетов) Тогда   
			ЗаписьXML.ЗаписатьАтрибут("AddressSettle", XMLСтрока(ОбщиеПараметры.АдресРасчетов));
		КонецЕсли;
		Если ОбщиеПараметры.Свойство("МестоРасчетов") И НЕ ПустаяСтрока(ОбщиеПараметры.МестоРасчетов) Тогда  
			ЗаписьXML.ЗаписатьАтрибут("PlaceSettle", XMLСтрока(ОбщиеПараметры.МестоРасчетов));
		КонецЕсли;
		
		Получатель = ОбщиеПараметры.Получатель;
		Если ПустаяСтрока(Получатель) Тогда
			Получатель = ОбщиеПараметры.СведенияОПокупателе.Покупатель;
		КонецЕсли;
		ПолучательИНН = ОбщиеПараметры.ПолучательИНН;
		Если ПустаяСтрока(ПолучательИНН) Тогда
			ПолучательИНН = ОбщиеПараметры.СведенияОПокупателе.ПокупательИНН;
		КонецЕсли;
		
		Если Не ПустаяСтрока(Получатель) Тогда
			ЗаписьXML.ЗаписатьАтрибут("CustomerInfo", XMLСтрока(Получатель));
		КонецЕсли;
		Если Не ПустаяСтрока(ПолучательИНН) Тогда
			ЗаписьXML.ЗаписатьАтрибут("CustomerINN", XMLСтрока(ПолучательИНН));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ДополнительныйРеквизит") И НЕ ПустаяСтрока(ОбщиеПараметры.ДополнительныйРеквизит) Тогда  
			ЗаписьXML.ЗаписатьАтрибут("AdditionalAttribute", XMLСтрока(ОбщиеПараметры.ДополнительныйРеквизит));
		КонецЕсли;
		
		Если ОбщиеПараметры.Свойство("ДополнительныйРеквизитПользователя") Тогда
			ЗаписатьДополнительныйРеквизитПользователя(ЗаписьXML, ОбщиеПараметры.ДополнительныйРеквизитПользователя);
		КонецЕсли;
		
		ЗаписатьДанныеАгента(ЗаписьXML, ОбщиеПараметры.ДанныеАгента);
		ЗаписатьДанныеПоставщика(ЗаписьXML, ОбщиеПараметры.ДанныеПоставщика);
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
		// Табличная часть
		Если ОбщиеПараметры.ПозицииЧека <> Неопределено Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("Positions");
			Для ИндексМассива = 0 По ОбщиеПараметры.ПозицииЧека.Количество() - 1 Цикл
				ТекущаяПозиция = ОбщиеПараметры.ПозицииЧека[ИндексМассива]; //см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека
				
				Если ТекущаяПозиция.Свойство("ФискальнаяСтрока") Тогда
						Если ТекущаяПозиция.ЦенаСоСкидками = 0 И ТекущаяПозиция.Сумма > 0 И ТекущаяПозиция.Количество > 0 Тогда
							ЦенаСоСкидками = Окр(ТекущаяПозиция.Сумма / ТекущаяПозиция.Количество, 2); 
						Иначе
							ЦенаСоСкидками = ТекущаяПозиция.ЦенаСоСкидками; 
						КонецЕсли;
						ЗаписьXML.ЗаписатьНачалоЭлемента("FiscalString");
						ЗаписьXML.ЗаписатьАтрибут("Name"             , XMLСтрока(ТекущаяПозиция.Наименование));
						ЗаписьXML.ЗаписатьАтрибут("Quantity"         , XMLСтрока(ТекущаяПозиция.Количество));
						ЗаписьXML.ЗаписатьАтрибут("PriceWithDiscount", XMLСтрока(ЦенаСоСкидками));
						ЗаписьXML.ЗаписатьАтрибут("SumWithDiscount"  , XMLСтрока(ТекущаяПозиция.Сумма));
						ЗаписьXML.ЗаписатьАтрибут("DiscountSum"      , XMLСтрока(ТекущаяПозиция.СуммаСкидок));
						ЗаписьXML.ЗаписатьАтрибут("Department"       , XMLСтрока(ТекущаяПозиция.НомерСекции));
						
						Если НЕ ПустаяСтрока(ТекущаяПозиция.СтавкаНДС) Тогда 
							Если ТекущаяПозиция.СтавкаНДС = 118 Тогда
								ЗначениеСтавкаНДС = "18/118";
							ИначеЕсли ТекущаяПозиция.СтавкаНДС = 110 Тогда
								ЗначениеСтавкаНДС = "10/110";
							ИначеЕсли ТекущаяПозиция.СтавкаНДС = 120 Тогда
								ЗначениеСтавкаНДС = "20/120";
							Иначе
								ЗначениеСтавкаНДС = ТекущаяПозиция.СтавкаНДС;
							КонецЕсли;
						Иначе
							ЗначениеСтавкаНДС = "none";
						КонецЕсли;
						ЗаписьXML.ЗаписатьАтрибут("Tax", XMLСтрока(ЗначениеСтавкаНДС));
						
						Если ТекущаяПозиция.Свойство("ПризнакСпособаРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакСпособаРасчета) Тогда
							ПризнакСпособаРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодПризнакаСпособаРасчета(ТекущаяПозиция.ПризнакСпособаРасчета);
							ЗаписьXML.ЗаписатьАтрибут("SignMethodCalculation", XMLСтрока(ПризнакСпособаРасчета));
						КонецЕсли;
						Если ТекущаяПозиция.Свойство("ПризнакПредметаРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакПредметаРасчета) Тогда
							ПризнакПредметаРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодПризнакаПредметаРасчета(ТекущаяПозиция.ПризнакПредметаРасчета);
							Если ПризнакПредметаРасчета <> Неопределено Тогда
							ЗаписьXML.ЗаписатьАтрибут("SignCalculationObject", XMLСтрока(ПризнакПредметаРасчета));
						КонецЕсли;
						КонецЕсли;
						
						Если ТекущаяПозиция.Свойство("СуммаНДС") И НЕ ПустаяСтрока(ТекущаяПозиция.СуммаНДС) Тогда
						ЗаписьXML.ЗаписатьАтрибут("TaxSum", XMLСтрока(ТекущаяПозиция.СуммаНДС));
						КонецЕсли;
						
						Если ТекущаяПозиция.Свойство("ПризнакАгентаПоПредметуРасчета") И НЕ ПустаяСтрока(ТекущаяПозиция.ПризнакАгентаПоПредметуРасчета) Тогда
							ПризнакАгентаПоПредметуРасчета = ОборудованиеЧекопечатающиеУстройстваРФКлиентСервер.КодПризнакаАгента(ТекущаяПозиция.ПризнакАгентаПоПредметуРасчета);
							ЗаписьXML.ЗаписатьАтрибут("SignSubjectCalculationAgent", XMLСтрока(ПризнакАгентаПоПредметуРасчета));
						КонецЕсли;
						
						Если ТекущаяПозиция.Свойство("ЕдиницаИзмерения") И ТекущаяПозиция.ЕдиницаИзмерения <> Неопределено Тогда
							ЗаписьXML.ЗаписатьАтрибут("MeasurementUnit", XMLСтрока(Лев(ТекущаяПозиция.ЕдиницаИзмерения, 16)));
						КонецЕсли;
						
						Если ТекущаяПозиция.Свойство("КодСтраныПроисхожденияТовара") И НЕ ПустаяСтрока(ТекущаяПозиция.КодСтраныПроисхожденияТовара) Тогда
							ЗаписьXML.ЗаписатьАтрибут("CountryOfOrigin", XMLСтрока(ТекущаяПозиция.КодСтраныПроисхожденияТовара));
						КонецЕсли;
						Если ТекущаяПозиция.Свойство("НомерТаможеннойДекларации") И НЕ ПустаяСтрока(ТекущаяПозиция.НомерТаможеннойДекларации) Тогда
							ЗаписьXML.ЗаписатьАтрибут("CustomsDeclaration", XMLСтрока(ТекущаяПозиция.НомерТаможеннойДекларации));
						КонецЕсли;
						Если ТекущаяПозиция.Свойство("СуммаАкциза") И ТекущаяПозиция.СуммаАкциза <> Неопределено Тогда
							ЗаписьXML.ЗаписатьАтрибут("ExciseAmount", XMLСтрока(XMLСтрока(ТекущаяПозиция.СуммаАкциза)));
						КонецЕсли;
						
						Если ТекущаяПозиция.Свойство("ДополнительныйРеквизит") И НЕ ПустаяСтрока(ТекущаяПозиция.ДополнительныйРеквизит) Тогда
							ЗаписьXML.ЗаписатьАтрибут("AdditionalAttribute", XMLСтрока(XMLСтрока(ТекущаяПозиция.ДополнительныйРеквизит)));
						КонецЕсли;
						
						ЗаписатьДанныеАгента(ЗаписьXML, ТекущаяПозиция.ДанныеАгента);
						ЗаписатьДанныеПоставщика(ЗаписьXML, ТекущаяПозиция.ДанныеПоставщика);
						Если ОбщегоНазначенияБПО.ИспользуетсяМаркировка() Тогда
							МодульМенеджерОборудованияМаркировка = ОбщегоНазначенияБПО.ОбщийМодуль("МенеджерОборудованияМаркировка");
							МодульМенеджерОборудованияМаркировка.ЗаписатьДанныеКодаТоварнойНоменклатуры(ЗаписьXML, ТекущаяПозиция, ПараметрыФискализации);
						КонецЕсли;
						
						ЗаписьXML.ЗаписатьКонецЭлемента();
						СуммаЧека = СуммаЧека + ТекущаяПозиция.Сумма;
						
					ИначеЕсли ТекущаяПозиция.Свойство("ТекстоваяСтрока") Тогда
						
						Если ТекущаяПозиция.Свойство("ПереносСтроки") И ТекущаяПозиция.ПереносСтроки Тогда 
							ТекстовыеСтроки = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПостроитьПолеПереносом(ТекущаяПозиция.Текст, ПараметрыФискализации.ШиринаСтроки);
						Иначе
							ТекстовыеСтроки = ТекущаяПозиция.Текст;
						КонецЕсли;
						Выравнивание = ?(ТекущаяПозиция.Свойство("Выравнивание"),  ТекущаяПозиция.Выравнивание, "Лево"); 
						Для НомерСтроки = 1 По СтрЧислоСтрок(ТекстовыеСтроки) Цикл
							ВыделеннаяСтрока = СтрПолучитьСтроку(ТекстовыеСтроки, НомерСтроки);
							ВыделеннаяСтрока = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ВыровнятьПоле(ВыделеннаяСтрока, ПараметрыФискализации.ШиринаСтроки, Выравнивание); 
							ЗаписьXML.ЗаписатьНачалоЭлемента("TextString");
							ЗаписьXML.ЗаписатьАтрибут("Text", XMLСтрока(ВыделеннаяСтрока));
							ЗаписьXML.ЗаписатьКонецЭлемента();  
						КонецЦикла;
						
					ИначеЕсли ТекущаяПозиция.Свойство("ШтрихКод") Тогда
						ЗаписьXML.ЗаписатьНачалоЭлемента("Barcode");
						ЗаписьXML.ЗаписатьАтрибут("BarcodeType", XMLСтрока(ТекущаяПозиция.ТипШтрихкода));
						ЗаписьXML.ЗаписатьАтрибут("Barcode", XMLСтрока(ТекущаяПозиция.ШтрихКод));
						ЗаписьXML.ЗаписатьКонецЭлемента();
					КонецЕсли;
			КонецЦикла;
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
		// Таблица оплат
		Если ТаблицаОплат <> Неопределено Тогда
			ЗаписьXML.ЗаписатьНачалоЭлемента("Payments");
			ЗаписьXML.ЗаписатьАтрибут("Cash"             , XMLСтрока(СуммаНаличные));
			ЗаписьXML.ЗаписатьАтрибут("ElectronicPayment", XMLСтрока(СуммаЭлектронно));
			ЗаписьXML.ЗаписатьАтрибут("Credit"           , XMLСтрока(СуммаПостоплата));
			ЗаписьXML.ЗаписатьАтрибут("AdvancePayment"   , XMLСтрока(СуммаПредоплата));
			ЗаписьXML.ЗаписатьАтрибут("CashProvision"    , XMLСтрока(СуммаПредоставление));
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ДанныеЧекаXML = ЗаписьXML.Закрыть();
	
	Если ВключатьПерсональныеДанные Тогда
		ПараметрыФискализации.ДанныеЧекаXMLПерсональныеДанные = ДанныеЧекаXML;
	Иначе
		ПараметрыФискализации.ДанныеЧекаXML = ДанныеЧекаXML;
		ПараметрыФискализации.ТипРасчета = ОбщиеПараметры.ТипРасчета;
		ПараметрыФискализации.СуммаЧека = СуммаЧека;
		ПараметрыФискализации.ОплатаНаличные    = ?(СуммаНаличные + ОплатаНеНаличными > СуммаЧека, СуммаЧека - ОплатаНеНаличными, СуммаНаличные); 
		ПараметрыФискализации.ОплатаЭлектронно  = СуммаЭлектронно;
		ПараметрыФискализации.ОплатаПостоплата  = СуммаПостоплата;
		ПараметрыФискализации.ОплатаПредоплата  = СуммаПредоплата;
		ПараметрыФискализации.ОплатаВстречноеПредоставление = СуммаПредоставление;
	КонецЕсли;
	// -- Локализация

	
КонецПроцедуры  


Функция ПредставлениеСтавкиНДС(СтавкаНДС, РевизияИнтерфейса) 
	
	Если НЕ ПустаяСтрока(СтавкаНДС) Тогда  
		//  В случае не готовности ККТ для поддержки новых ставок можно продолжать пробивать чеки без НДС 
		Если РевизияИнтерфейса < 4004 Тогда   
			Если СтавкаНДС = 7 Или СтавкаНДС = 5 Или СтавкаНДС = 105 Или СтавкаНДС = 107 Тогда
				ЗначениеСтавкаНДС = "none";
				Возврат ЗначениеСтавкаНДС;   
			КонецЕсли;
		КонецЕсли;
		// Ревизия интерфейса 4004 и вышы 
		Если СтавкаНДС > 100 Тогда
			ЗначениеСтавкаНДС = СтрШаблон("%1/%2", СтавкаНДС - 100, СтавкаНДС);
		Иначе
			ЗначениеСтавкаНДС = СтавкаНДС;
		КонецЕсли;
	Иначе
		ЗначениеСтавкаНДС = "none";
	КонецЕсли;
	
	Возврат ЗначениеСтавкаНДС;
	
КонецФункции  
