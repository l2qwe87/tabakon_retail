&НаКлиенте
&Вместо("ВнешнееСобытие")
Процедура ТБКВнешнееСобытиеВместо(Источник, Событие, Данные)
	Если ВводДоступен() Тогда
		Если ОбщегоНазначенияВызовСервера.ПроверитьВозможностьРедактирования_Общая()  тогда
			Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод") И НЕ ЕстьПереданныеЧекиЕГАИС Тогда
				ДанныеСоСканераСтруктура = СобытияФормИСКлиент.ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(
					ЭтотОбъект, 
					Источник, 
					Событие, 
					Данные);
					
				Если ДанныеСоСканераСтруктура = Неопределено Тогда
					Возврат;
				КонецЕсли;
				ОбработатьКодМаркировки(ДанныеСоСканераСтруктура);
			Иначе
				ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТБКПринятьТоварыПослеНаСервере(Ссылка,НоваяПереоценка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	ПриходныйОрдерНаТовары.Проведен
	      	 	             |	И ПриходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже принят!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
		//Доп Контроль. 
	Если Найти(Ссылка.Комментарий,"Ордер №") <> 0 тогда
		Сообщить("Товар уже принят!!",СтатусСообщения.Важное);	
		Возврат;	
	КонецЕсли;
	//КонецДопКонтроль

	
	НачатьТранзакцию();
	
	Попытка
		//Перепроводим перемещение. Бывает что не все товары попадают в регистр товары к получению..
		Попытка
			Об = Ссылка.ПолучитьОбъект();
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
		//Ордер
		НовыйДокументПОНТ = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументПОНТ.Заполнить(Ссылка);
		
		//Доп контроль количества
		Если НовыйДокументПОНТ.Товары.Количество() = 0 тогда
			Сообщить("Нет товаров к поступлению! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		Если НовыйДокументПОНТ.Товары.Итог("Количество") <> Ссылка.Товары.Итог("Количество") тогда
			Сообщить("Различаются количества товаров! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		НовыйДокументПОНТ.Дата = ТекущаяДата();
		НовыйДокументПОНТ.ДокументОснование = Ссылка;
		
		//Доп контроль цены
		Для каждого Строка из Ссылка.Товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.Номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			Строки =   НовыйДокументПОНТ.Товары.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 тогда
				Сообщить("Не найден товар! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
				Возврат; 
			иначеЕсли Строки[0].Цена <> Строка.Цена тогда
				Строки[0].Цена  = Строка.Цена;
				Строки[0].Сумма = Строки[0].Цена * Строки[0].Количество;
			КонецЕсли;			
		КонецЦикла;
		
		НовыйДокументПОНТ.Записать(РежимЗаписиДокумента.Проведение);
		
		//Цены
		ДокументОбъектПрименениеЦен                       = Документы.ПрименениеЦенНоменклатуры.СоздатьДокумент();
		ДокументОбъектПрименениеЦен.Дата                  = ТекущаяДата();
		ДокументОбъектПрименениеЦен.ОбъектЦенообразования = Ссылка.МагазинПолучатель;
		ДокументОбъектПрименениеЦен.Ответственный         = Пользователи.АвторизованныйПользователь();
		для каждого Строка из Ссылка.товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			
			Если ДокументОбъектПрименениеЦен.Товары.НайтиСтроки(Отбор).Количество() > 0 тогда Продолжить; КонецЕсли;
			
			НоваяСтрока =   ДокументОбъектПрименениеЦен.Товары.Добавить();
			НоваяСтрока.Номенклатура 	 = Строка.Номенклатура;
			НоваяСтрока.Характеристика 	 = Строка.Характеристика;
			НоваяСтрока.Цена			 = Строка.Цена; 		
		КонецЦикла;
		ДокументОбъектПрименениеЦен.Комментарий	=	"Перемещение № "+Ссылка.Номер;
		
		ДокументОбъектПрименениеЦен.Записать(РежимЗаписиДокумента.Проведение); 		

		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = ОбъектПеремещение.Комментарий + " Товар принят "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументПОНТ.Номер+". Переоценка № "+ДокументОбъектПрименениеЦен.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
		
		НоваяПереоценка = ДокументОбъектПрименениеЦен.Ссылка;
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;

	
КонецПроцедуры

&НаКлиенте
Процедура ТБКПринятьТоварыПосле(Команда)
	НоваяПереоценка = Неопределено;
	флЭтоНеучтенка = ПроверитьНеучтенку(объект.Ссылка);
	Если не флЭтоНеучтенка тогда
		ТБКПринятьТоварыПослеНаСервере(объект.Ссылка,НоваяПереоценка);
	иначе
		Сообщить("Нельзя принимать от склада Неучтенки!");
	КонецЕсли;
	
	//Пока нет принтеров для печати ценников открывать переоценку не надо
	//Если НоваяПереоценка <> Неопределено тогда
	//	ПараметрыОткрытия = Новый Структура("Ключ",НоваяПереоценка);
	//	ОткрытьФорму("Документ.ПрименениеЦенНоменклатуры.Форма.ФормаДокумента",ПараметрыОткрытия); 
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	Если не ОбщегоНазначенияВызовСервера.ПроверитьВозможностьРедактирования_Общая()  тогда
		Элементы.Товары.ТолькоПросмотр 					= Истина;
		Элементы.Организация.ТолькоПросмотр 			= Истина;
		Элементы.ОрганизацияПолучатель.ТолькоПросмотр 	= Истина; 
		Элементы.СкладОтправитель.ТолькоПросмотр		= Истина;
		Элементы.СкладПолучатель.ТолькоПросмотр			= Истина;
		Элементы.МагазинОтправитель.ТолькоПросмотр 		= Истина;
		Элементы.МагазинПолучатель.ТолькоПросмотр 		= Истина;
		Элементы.Номер.ТолькоПросмотр 					= Истина;
		Элементы.Дата.ТолькоПросмотр 					= Истина;
		Элементы.Ответственный.ТолькоПросмотр			= Истина;
		Элементы.ТоварыОткрытьПодбор.Доступность 					= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоРозничнымЦенам.Доступность 	= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоВидуЦен.Доступность 			= Ложь;
	КонецЕсли;

КонецПроцедуры


&НаСервереБезКонтекста
Процедура ТБКОтгрузитьТоварыПослеНаСервере(Ссылка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	РасходныйОрдерНаТовары.Проведен
	      	 	             |	И РасходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже отгружен!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
	//Доп Контроль. 
	Если Найти(Ссылка.Комментарий,"Ордер №") <> 0 тогда
		Сообщить("Товар уже отгружен!!",СтатусСообщения.Важное);	
		Возврат;	
	КонецЕсли;
	//КонецДопКонтроль

	
	НачатьТранзакцию();
	
	Попытка
		//Перепроводим перемещение. Бывает что не все товары попадают в регистр товары к получению..
		Попытка
			Об = Ссылка.ПолучитьОбъект();
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
		//Ордер
		НовыйДокументРОНТ = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументРОНТ.Заполнить(Ссылка);
		
		//Доп контроль количества
		Если НовыйДокументРОНТ.Товары.Количество() = 0 тогда
			Сообщить("Нет товаров к отгрузке! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		Если НовыйДокументРОНТ.Товары.Итог("Количество") <> Ссылка.Товары.Итог("Количество") тогда
			Сообщить("Различаются количества товаров! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
	
		//Доп контроль цены
		Для каждого Строка из Ссылка.Товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.Номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			Строки =   НовыйДокументРОНТ.Товары.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 тогда
				Сообщить("Не найден товар! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
				Возврат; 
			иначеЕсли Строки[0].Цена <> Строка.Цена тогда
				Строки[0].Цена  = Строка.Цена;
				Строки[0].Сумма = Строки[0].Цена * Строки[0].Количество;
			КонецЕсли;			
		КонецЦикла;

		
		НовыйДокументРОНТ.Дата = ТекущаяДата();
		НовыйДокументРОНТ.ДокументОснование = Ссылка;
		НовыйДокументРОНТ.Записать(РежимЗаписиДокумента.Проведение);
	
		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = ОбъектПеремещение.Комментарий +" Товар отгружен "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументРОНТ.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТБКОтгрузитьтоварыПосле(Команда)
	флЭтоНеучтенка = ПроверитьНеучтенку(объект.Ссылка);
	Если не флЭтоНеучтенка тогда 
		ТБКОтгрузитьТоварыПослеНаСервере(объект.Ссылка);
	иначе
		Сообщить("Нельзя отгружать со склада Неучтенки!");
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПроверитьНеучтенку(Ссылка)
	Если Ссылка.МагазинОтправитель.Наименование = "Неучтенка" или Ссылка.МагазинПолучатель.Наименование = "Неучтенка" тогда
		Возврат истина;	
	иначе
		Возврат ложь;
	КонецЕсли;
КонецФункции;