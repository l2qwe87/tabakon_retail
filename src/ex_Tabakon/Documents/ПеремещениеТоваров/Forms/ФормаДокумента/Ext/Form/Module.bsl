
&НаСервереБезКонтекста
Процедура ТБКПринятьТоварыПослеНаСервере(Ссылка,НоваяПереоценка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	ПриходныйОрдерНаТовары.Проведен
	      	 	             |	И ПриходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже принят!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		//Ордер
		НовыйДокументПОНТ = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументПОНТ.Заполнить(Ссылка);
		
		Если НовыйДокументПОНТ.Товары.Количество() = 0 тогда
			Возврат;
		КонецЕсли;	
		
		НовыйДокументПОНТ.Дата = ТекущаяДата();
		НовыйДокументПОНТ.ДокументОснование = Ссылка;
		НовыйДокументПОНТ.Записать(РежимЗаписиДокумента.Проведение);
		
		//Цены
		ДокументОбъектПрименениеЦен                       = Документы.ПрименениеЦенНоменклатуры.СоздатьДокумент();
		ДокументОбъектПрименениеЦен.Дата                  = ТекущаяДата();
		ДокументОбъектПрименениеЦен.ОбъектЦенообразования = Ссылка.МагазинПолучатель;
		ДокументОбъектПрименениеЦен.Ответственный         = Пользователи.АвторизованныйПользователь();
		для каждого Строка из Ссылка.товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			
			Если ДокументОбъектПрименениеЦен.Товары.НайтиСтроки(Отбор).Количество() > 0 тогда Продолжить; КонецЕсли;
			
			НоваяСтрока =   ДокументОбъектПрименениеЦен.Товары.Добавить();
			НоваяСтрока.Номенклатура 	 = Строка.Номенклатура;
			НоваяСтрока.Характеристика 	 = Строка.Характеристика;
			НоваяСтрока.Цена			 = Строка.Цена; 		
		КонецЦикла;
		ДокументОбъектПрименениеЦен.Комментарий	=	"Перемещение № "+Ссылка.Номер;
		
		ДокументОбъектПрименениеЦен.Записать(РежимЗаписиДокумента.Проведение); 		

		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = "Товар принят "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументПОНТ.Номер+". Переоценка № "+ДокументОбъектПрименениеЦен.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
		
		НоваяПереоценка = ДокументОбъектПрименениеЦен.Ссылка;
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;

	
КонецПроцедуры

&НаКлиенте
Процедура ТБКПринятьТоварыПосле(Команда)
	НоваяПереоценка = Неопределено;
	ТБКПринятьТоварыПослеНаСервере(объект.Ссылка,НоваяПереоценка);
	
	//Пока нет принтеров для печати ценников открывать переоценку не надо
	//Если НоваяПереоценка <> Неопределено тогда
	//	ПараметрыОткрытия = Новый Структура("Ключ",НоваяПереоценка);
	//	ОткрытьФорму("Документ.ПрименениеЦенНоменклатуры.Форма.ФормаДокумента",ПараметрыОткрытия); 
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	Если не ПроверитьВозможностьРедактирования()  тогда   
		Элементы.Товары.ТолькоПросмотр 					= Истина;
		Элементы.Организация.ТолькоПросмотр 			= Истина;
		Элементы.ОрганизацияПолучатель.ТолькоПросмотр 	= Истина; 
		Элементы.СкладОтправитель.ТолькоПросмотр		= Истина;
		Элементы.СкладПолучатель.ТолькоПросмотр			= Истина;
		Элементы.МагазинОтправитель.ТолькоПросмотр 		= Истина;
		Элементы.МагазинПолучатель.ТолькоПросмотр 		= Истина;
		Элементы.Номер.ТолькоПросмотр 					= Истина;
		Элементы.Дата.ТолькоПросмотр 					= Истина;
		Элементы.Ответственный.ТолькоПросмотр			= Истина;
		Элементы.ТоварыОткрытьПодбор.Доступность 					= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоРозничнымЦенам.Доступность 	= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоВидуЦен.Доступность 			= Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВозможностьРедактирования()
	Возврат Найти(нрег(Пользователи.АвторизованныйПользователь().Наименование),"админ");	
КонецФункции

&НаСервереБезКонтекста
Процедура ТБКОтгузитьТоварыПослеНаСервере(Ссылка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	РасходныйОрдерНаТовары.Проведен
	      	 	             |	И РасходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже отгружен!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		//Ордер
		НовыйДокументРОНТ = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументРОНТ.Заполнить(Ссылка);
		
		Если НовыйДокументРОНТ.Товары.Количество() = 0 тогда
			Возврат;
		КонецЕсли;	
		
		НовыйДокументРОНТ.Дата = ТекущаяДата();
		НовыйДокументРОНТ.ДокументОснование = Ссылка;
		НовыйДокументРОНТ.Записать(РежимЗаписиДокумента.Проведение);
	
		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = "Товар отгружен "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументРОНТ.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТБКОтгузитьтоварыПосле(Команда)
	ТБКОтгузитьТоварыПослеНаСервере(объект.Ссылка);
КонецПроцедуры
