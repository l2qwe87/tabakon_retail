Перем НастройкиОбщие;

&НаКлиенте
&Вместо("ВнешнееСобытие")
Процедура ТБКВнешнееСобытиеВместо(Источник, Событие, Данные)
	//Если ВводДоступен() Тогда
		//Если ОбщегоНазначенияВызовСервера.ПроверитьВозможностьРедактирования_Общая()  тогда
			Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод") И НЕ ЕстьПереданныеЧекиЕГАИС Тогда
				ДанныеСоСканераСтруктура = СобытияФормИСКлиент.ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(
					ЭтотОбъект, 
					Источник, 
					Событие, 
					Данные);
					
				Если ДанныеСоСканераСтруктура = Неопределено Тогда
					Возврат;
				КонецЕсли;
				//ОбработатьКодМаркировки(ДанныеСоСканераСтруктура);   
				ДобавитьКоличествоФакт(ДанныеСоСканераСтруктура);
				
			Иначе
				ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
			КонецЕсли;
		//КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТБКПринятьТоварыПослеНаСервере(Ссылка,НоваяПереоценка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	ПриходныйОрдерНаТовары.Проведен
	      	 	             |	И ПриходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже принят!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
		//Доп Контроль. 
	Если Найти(Ссылка.Комментарий,"Ордер №") <> 0 тогда
		Сообщить("Товар уже принят!!",СтатусСообщения.Важное);	
		Возврат;	
	КонецЕсли;
	
	Для каждого Строка из Ссылка.Товары цикл
		Если Не ЗначениеЗаполнено(Строка.Номенклатура) тогда
			Сообщить("В перемещении есть пустые строки! Приемка не возможна!");	
			Возврат;	
		КонецЕсли;
		
		Если Найти(Строка(Строка.Номенклатура),"Объект не найден") тогда
			Сообщить("В перемещении есть пустые строки!! Приемка не возможна!");	
			Возврат;	
		КонецЕсли;
	КонецЦикла;
	//КонецДопКонтроль

	
	НачатьТранзакцию();
	
	Попытка
		//Перепроводим перемещение. Бывает что не все товары попадают в регистр товары к получению..
		Попытка
			ЗаписатьДанныеПоПеремещению(Объект.Ссылка,Новый ХранилищеЗначения(Объект.Товары.Выгрузить()));	
			Об = Ссылка.ПолучитьОбъект();
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
		//Ордер
		НовыйДокументПОНТ = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументПОНТ.Заполнить(Ссылка);
		
		//Доп контроль количества
		Если НовыйДокументПОНТ.Товары.Количество() = 0 тогда
			Сообщить("Нет товаров к поступлению! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		Если НовыйДокументПОНТ.Товары.Итог("Количество") <> Ссылка.Товары.Итог("Количество") тогда
			Сообщить("Различаются количества товаров! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		НовыйДокументПОНТ.Дата = ТекущаяДата();
		НовыйДокументПОНТ.ДокументОснование = Ссылка;
		
		//Доп контроль цены
		Для каждого Строка из Ссылка.Товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.Номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			Строки =   НовыйДокументПОНТ.Товары.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 тогда
				Сообщить("Не найден товар! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
				Возврат; 
			иначеЕсли Строки[0].Цена <> Строка.Цена тогда
				Строки[0].Цена  = Строка.Цена;
				Строки[0].Сумма = Строки[0].Цена * Строки[0].Количество;
			КонецЕсли;			
		КонецЦикла;
		
		НовыйДокументПОНТ.Записать(РежимЗаписиДокумента.Проведение);
		
		//Цены
		ДокументОбъектПрименениеЦен                       = Документы.ПрименениеЦенНоменклатуры.СоздатьДокумент();
		ДокументОбъектПрименениеЦен.Дата                  = ТекущаяДата();
		ДокументОбъектПрименениеЦен.ОбъектЦенообразования = Ссылка.МагазинПолучатель;
		ДокументОбъектПрименениеЦен.Ответственный         = Пользователи.АвторизованныйПользователь();
		для каждого Строка из Ссылка.товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			
			Если ДокументОбъектПрименениеЦен.Товары.НайтиСтроки(Отбор).Количество() > 0 тогда Продолжить; КонецЕсли;
			
			НоваяСтрока =   ДокументОбъектПрименениеЦен.Товары.Добавить();
			НоваяСтрока.Номенклатура 	 = Строка.Номенклатура;
			НоваяСтрока.Характеристика 	 = Строка.Характеристика;
			//НоваяСтрока.Цена			 = Строка.Цена; 
			Если Строка.Упаковка.Коэффициент <> 0 тогда
				НоваяСтрока.Цена			 = Строка.Цена / Строка.Упаковка.Коэффициент;
			иначе
				НоваяСтрока.Цена			 = Строка.Цена;
			КонецЕсли;
		КонецЦикла;
		ДокументОбъектПрименениеЦен.Комментарий	=	"Перемещение № "+Ссылка.Номер;
		
		ДокументОбъектПрименениеЦен.Записать(РежимЗаписиДокумента.Проведение); 		

		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = ОбъектПеремещение.Комментарий + " Товар принят "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументПОНТ.Номер+". Переоценка № "+ДокументОбъектПрименениеЦен.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
		
		НоваяПереоценка = ДокументОбъектПрименениеЦен.Ссылка;
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;

	
КонецПроцедуры

&НаКлиенте
Процедура ТБКПринятьТоварыПосле(Команда)
	Если не Объект.Проведен тогда
		Сообщить("Нельзя принимать не проведенные документы!");
		Возврат;
	КонецЕсли;
	
	НоваяПереоценка = Неопределено;
	флЭтоНеучтенка = ПроверитьНеучтенку(объект.Ссылка);
	Если не флЭтоНеучтенка тогда
		ТБКПринятьТоварыПослеНаСервере(объект.Ссылка,НоваяПереоценка);
	иначе
		Сообщить("Нельзя принимать от склада Неучтенки!");
	КонецЕсли;
	
	//Пока нет принтеров для печати ценников открывать переоценку не надо
	//Если НоваяПереоценка <> Неопределено тогда
	//	ПараметрыОткрытия = Новый Структура("Ключ",НоваяПереоценка);
	//	ОткрытьФорму("Документ.ПрименениеЦенНоменклатуры.Форма.ФормаДокумента",ПараметрыОткрытия); 
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	Если не ОбщегоНазначенияВызовСервера.ПроверитьВозможностьРедактирования_Общая()  тогда
		НужныйМагазин	 = ТБКПолучитьМагазинНаСервере();
		Если Объект.МагазинПолучатель <> НужныйМагазин тогда
			ЭтаФорма.ТолькоПросмотр	=	Истина;
		иначе
			ЭтаФорма.ТолькоПросмотр	=	ложь;
		КонецЕсли;
			
		//Элементы.Товары.ТолькоПросмотр 					= Истина;
		Элементы.Организация.ТолькоПросмотр 			= Истина;
		Элементы.ОрганизацияПолучатель.ТолькоПросмотр 	= Истина; 
		Элементы.СкладОтправитель.ТолькоПросмотр		= Истина;
		Элементы.СкладПолучатель.ТолькоПросмотр			= Истина;
		Элементы.МагазинОтправитель.ТолькоПросмотр 		= Истина;
		Элементы.МагазинПолучатель.ТолькоПросмотр 		= Истина;
		Элементы.Номер.ТолькоПросмотр 					= Истина;
		Элементы.Дата.ТолькоПросмотр 					= Истина;
		Элементы.Ответственный.ТолькоПросмотр			= Истина;
		Элементы.ТоварыОткрытьПодбор.Доступность 					= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоРозничнымЦенам.Доступность 	= Ложь;
		Элементы.ТоварыЗаполнитьЦеныПоВидуЦен.Доступность 			= Ложь; 
		
		Для каждого ЭлементФормы из  ЭтаФорма.Элементы Цикл
			Если Найти(ЭлементФормы.Имя,"Факт") или ЭлементФормы.Имя = "Товары" или Найти(ЭлементФормы.Имя,"Групп")
								или Найти(ЭлементФормы.Имя,"Стран") или Найти(ЭлементФормы.Имя,"Принять")  тогда

				Продолжить;
			КонецЕсли;
			
			Если Найти(ЭлементФормы.Имя,"Товары") тогда
				Попытка
					ЭлементФормы.ТолькоПросмотр = Истина;
				Исключение
					Попытка
						ЭлементФормы.Доступность = Ложь;
					Исключение
					КонецПопытки;
				КонецПопытки;
			КонецЕсли;              
		КонецЦикла;  
		
	КонецЕсли;

	ВсегоШтук = Объект.Товары.Итог("КоличествоУпаковок");  
	
	ВосстановитьТовары();
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ТБКПолучитьМагазинНаСервере()
	НужныйМагазин	=	ОбщегоНазначения.ПолучитьМагазинИзООРП();
	Если не ЗначениеЗаполнено(НужныйМагазин) тогда
		НужныйМагазин	=		ЗначениеНастроекПовтИсп.МагазинПоУмолчанию();	
	КонецЕсли;
	
	Возврат НужныйМагазин;	
КонецФункции



&НаСервереБезКонтекста
Процедура ТБКОтгрузитьТоварыПослеНаСервере(Ссылка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	      	 	             |ГДЕ
	      	 	             |	РасходныйОрдерНаТовары.Проведен
	      	 	             |	И РасходныйОрдерНаТовары.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Если не Запрос.Выполнить().Пустой() тогда
		Сообщить("Товар уже отгружен!",СтатусСообщения.Важное);	
		Возврат;
	КонецЕсли;
	
	//Доп Контроль. 
	Если Найти(Ссылка.Комментарий,"Ордер №") <> 0 тогда
		Сообщить("Товар уже отгружен!!",СтатусСообщения.Важное);	
		Возврат;	
	КонецЕсли;
	//КонецДопКонтроль

	
	НачатьТранзакцию();
	
	Попытка
		//Перепроводим перемещение. Бывает что не все товары попадают в регистр товары к получению..
		Попытка
			Об = Ссылка.ПолучитьОбъект();
			Об.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;
		
		//Ордер
		НовыйДокументРОНТ = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
		НовыйДокументРОНТ.Заполнить(Ссылка);
		
		//Доп контроль количества
		Если НовыйДокументРОНТ.Товары.Количество() = 0 тогда
			Сообщить("Нет товаров к отгрузке! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
		
		Если НовыйДокументРОНТ.Товары.Итог("Количество") <> Ссылка.Товары.Итог("Количество") тогда
			Сообщить("Различаются количества товаров! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
			Возврат;
		КонецЕсли;
	
		//Доп контроль цены
		Для каждого Строка из Ссылка.Товары цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Номенклатура",Строка.Номенклатура);
			Отбор.Вставить("Характеристика",Строка.Характеристика);
			Строки =   НовыйДокументРОНТ.Товары.НайтиСтроки(Отбор);
			Если Строки.Количество() = 0 тогда
				Сообщить("Не найден товар! Возможно нужно перепровести перемещение.",СтатусСообщения.Важное);	
				Возврат; 
			иначеЕсли Строки[0].Цена <> Строка.Цена тогда
				Строки[0].Цена  = Строка.Цена;
				Строки[0].Сумма = Строки[0].Цена * Строки[0].Количество;
			КонецЕсли;			
		КонецЦикла;

		
		НовыйДокументРОНТ.Дата = ТекущаяДата();
		НовыйДокументРОНТ.ДокументОснование = Ссылка;
		НовыйДокументРОНТ.Записать(РежимЗаписиДокумента.Проведение);
	
		ОбъектПеремещение = Ссылка.ПолучитьОбъект();
		ОбъектПеремещение.Комментарий = ОбъектПеремещение.Комментарий +" Товар отгружен "+Пользователи.ТекущийПользователь()+". Ордер № "+НовыйДокументРОНТ.Номер;
		ОбъектПеремещение.Записать();
		
		ЗафиксироватьТранзакцию();
		
		ОбщегоНазначения.СообщитьПользователю("Выполнено успешно!",,,, );
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТБКОтгрузитьтоварыПосле(Команда)
	//флЭтоНеучтенка = ПроверитьНеучтенку(объект.Ссылка);
	//Если не флЭтоНеучтенка тогда 
	//	ТБКОтгрузитьТоварыПослеНаСервере(объект.Ссылка);
	//иначе
	//	Сообщить("Нельзя отгружать со склада Неучтенки!");
	//КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПроверитьНеучтенку(Ссылка)
	Если Ссылка.МагазинОтправитель.Наименование = "Неучтенка" или Ссылка.МагазинПолучатель.Наименование = "Неучтенка" тогда
		Возврат истина;	
	иначе
		Возврат ложь;
	КонецЕсли;
КонецФункции


&НаСервере
Процедура  ДобавитьКоличествоФакт(ДанныеСоСканераСтруктура) 
	СканированныйШК	=	ДанныеСоСканераСтруктура.Штрихкод;
	Если СтрДлина(СканированныйШК) >28 тогда //это маркировка 
		СканированныйШК_Копия	=	СканированныйШК;
		ШтрихкодEAN = ШтрихкодированиеИС.ТБКEANИзКодаМаркировки(СканированныйШК_Копия);   
		Если не ЗначениеЗаполнено(ШтрихкодEAN) тогда
			ШтрихкодEAN	=	ПолучитьЕАН(СканированныйШК_Копия);
		КонецЕсли;
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",ШтрихкодEAN); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+ШтрихкодEAN);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+ШтрихкодEAN);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+ШтрихкодEAN);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли;
		
		НужнаяНоменклатура			=	Рез[0].Владелец; 
		Упаковка					=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		НужнаяХар	=	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(); 
		
		МРЦ	=	Неопределено;
		Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики тогда			
			
			МРЦПачки = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиТабачнойПачки(СканированныйШК);
			Если МРЦПачки = Неопределено Тогда
				МРЦБлока = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиБлока(СканированныйШК);
				Если МРЦБлока <> Неопределено Тогда
					мрц = МРЦБлока/10;
				КонецЕсли
			Иначе
				мрц = МРЦПачки;
			Конецесли; 
			
			Если МРЦ	=	Неопределено тогда
				СканированныйШК_Копия	=	СканированныйШК; 
				МРЦ	=	Сред(СканированныйШК_Копия,Найти(СканированныйШК_Копия,"8005")+4,3);
		//		Если лев(СканированныйШК_Копия,3) = "010" тогда
		//			СканированныйШК_Копия = Сред(СокрЛП(СканированныйШК_Копия),4);
		//		КонецЕсли;
		//
		//		//Если Найти(СканированныйШК_Копия,Символ(29)) тогда
		//			МРЦ	=	Число(Сред(СканированныйШК_Копия,27,3));  
		//		//КонецЕсли;
			КонецЕсли;
			
			ОтборНаим	=	Новый Структура("Наименование",Строка(мрц));
			Спр	=	Справочники.ХарактеристикиНоменклатуры.Выбрать(,НужнаяНоменклатура,ОтборНаим);
			Если Спр.Следующий() тогда
				НужнаяХар	=	Спр.Ссылка;
			КонецЕсли;			
		КонецЕсли; 
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);
		Отбор.Вставить("Характеристика",НужнаяХар);
			
		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			Сообщить("Строка не найдена. Штрихкод: "+ШтрихкодEAN);
			Возврат ;
		иначе   
			НужнаяСтрока	=	Неопределено;
			Для каждого СтрокаТ из Строки цикл
				Если не ЗначениеЗаполнено(Упаковка) тогда
					Если Найти(Строка(СтрокаТ.Упаковка),"шт") тогда
						НужнаяСтрока	=	СтрокаТ;
						Прервать;
					КонецЕсли;	
				иначе
					Если Найти(Строка(СтрокаТ.Упаковка),"упак") тогда 
						Кол	=	1;
					КонецЕсли;

					
					Если не Найти(Строка(СтрокаТ.Упаковка),"шт") тогда
						НужнаяСтрока	=	СтрокаТ;
						Прервать;
					КонецЕсли;					

				КонецЕсли;	
			КонецЦикла;
			
			Если НужнаяСтрока = Неопределено тогда   
            	НужнаяСтрока	=	Строки[0];		
			КонецЕсли;
			
			
			НужнаяСтрока.КоличествоФакт	=	НужнаяСтрока.КоличествоФакт + Кол;
		КонецЕсли;
		
		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	иначе   
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",СканированныйШК); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+ШтрихкодEAN);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+ШтрихкодEAN);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+ШтрихкодEAN);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли; 
		НужнаяНоменклатура	=	Рез[0].Владелец; 
		Упаковка			=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);
		
		//Если ЗначениеЗаполнено(Упаковка) тогда 
		//	Отбор.Вставить("Упаковка",Упаковка); 
		//КонецЕсли;

		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			Сообщить("Строка не найдена. Штрихкод: "+СканированныйШК);
			Возврат ;
		иначе         
			НужнаяСтрока	=	Неопределено;
			Для каждого СтрокаТ из Строки цикл
				Если не ЗначениеЗаполнено(Упаковка) тогда
					Если Найти(Строка(СтрокаТ.Упаковка),"шт") тогда
						НужнаяСтрока	=	СтрокаТ;   
						Прервать;
					КонецЕсли;	
				иначе 
					Если Найти(Строка(СтрокаТ.Упаковка),"упак") тогда 
						Кол	=	1;
					КонецЕсли;
					
					Если не Найти(Строка(СтрокаТ.Упаковка),"шт") тогда
						НужнаяСтрока	=	СтрокаТ;
						Прервать;
					КонецЕсли; 			
 				
					
				КонецЕсли;	
			КонецЦикла;
			
			Если НужнаяСтрока = Неопределено тогда   
            	НужнаяСтрока	=	Строки[0];		
			КонецЕсли;

			НужнаяСтрока.КоличествоФакт	=	НужнаяСтрока.КоличествоФакт + Кол;
		КонецЕсли;
		
		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЕАН(ШК)
	Если лев(ШК,3) = "010" тогда
		ШК = Сред(СокрЛП(ШК),4);
	КонецЕсли;
	
	Если лев(ШК,5) = "00000" тогда
		флЭтоЕан8	=	Истина;
	иначе
		флЭтоЕан8	=	ложь;
	КонецЕсли;
	
	ШК  = ОбщегоНазначенияВызовСервера.УдалитьЛидирующиеНули(ШК);
	
	ШК	= лев(ШК,13);
	
	Если флЭтоЕан8 тогда
		ШК	= лев(ШК,8);
	иначе
		Попытка
			ФФФ	=	Число(ШК);
		Исключение
			ШК = Лев("0" + ШК, 13);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ШК;
КонецФункции

&НаСервере
Процедура ТБКПередЗаписьюНаСервереПеред(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если не отказ тогда
		ЗаписатьДанныеПоПеремещению(Объект.Ссылка,Новый ХранилищеЗначения(Объект.Товары.Выгрузить()));	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТБКПослеЗаписиНаСервереПеред(ТекущийОбъект, ПараметрыЗаписи) 
	ВосстановитьТовары();
КонецПроцедуры

&НаСервере
Процедура ВосстановитьТовары()
	Рег = РегистрыСведений.СохраненныеДанныеПомощникаПриемкиОтгрузки.СоздатьНаборЗаписей();
	Рег.Отбор.ДокументРаспоряжение.Установить(Объект.Ссылка);  
	рег.Прочитать();
	
	Для каждого Строка из рег цикл
		ТЗ	=	Строка.ТоварыПеремещение.Получить();  
		Для каждого СтрокаТЗ из ТЗ цикл
			Объект.Товары[СтрокаТЗ.НомерСтроки-1].КоличествоФАкт =  СтрокаТЗ.КоличествоФакт;
		КонецЦикла;
		
		//Объект.Товары.Загрузить(ТЗ);
	КонецЦикла;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьДанныеПоПеремещению(Ссылка,ХранЗнач)
	Рег = РегистрыСведений.СохраненныеДанныеПомощникаПриемкиОтгрузки.СоздатьНаборЗаписей();
	Рег.Отбор.ДокументРаспоряжение.Установить(Ссылка); 
	
	НоваяСтрока	=	Рег.Добавить();
	НоваяСтрока.ДокументРаспоряжение	=	Ссылка;
	НоваяСтрока.ТоварыПеремещение		=	ХранЗнач;
	
	Рег.Записать();	
	
КонецПроцедуры
