
&После("ПриЗаписи")
Процедура ТБКПриЗаписи(Отказ)
	
	//Марк 2025-01-25
	//исправление <Объект не найден> +++
	//текПользователь = Пользователи.ТекущийПользователь();
	//Если Строка(текПользователь) <> "ИТ" Тогда
	//	Возврат;
	//КонецЕсли;
	//Сообщить("Прошел");
	//
	//ФлагМожноСоздатьПриходник = Истина;
	//МассивНеНайденныхСсылок = Новый Массив;
	//мСоответствиеИдентификаторовТипов = Неопределено;
	//
	//Для каждого Строка Из Товары Цикл 
	//	
	//	Если НЕ Строка.Номенклатура.Пустая() И Найти(Строка(Строка.Номенклатура), "<Объект не найден>") Тогда
	//		Если Строка.Номенклатура.ПолучитьОбъект() = Неопределено Тогда
	//			МассивНеНайденныхСсылок.Добавить(ОбщегоНазначения.РасшифровкаПредставленияБитойСсылки(Строка(Строка.Номенклатура), мСоответствиеИдентификаторовТипов));	
	//		КонецЕсли;
	//	КонецЕсли;  
	//	
	//	Если НЕ Строка.Характеристика.Пустая() И Найти(Строка(Строка.Характеристика), "<Объект не найден>") Тогда
	//		Если Строка.Характеристика.ПолучитьОбъект() = Неопределено Тогда
	//			МассивНеНайденныхСсылок.Добавить(ОбщегоНазначения.РасшифровкаПредставленияБитойСсылки(Строка(Строка.Характеристика), мСоответствиеИдентификаторовТипов));		
	//		КонецЕсли;	
	//	КонецЕсли;
	//	
	//	Если НЕ Строка.Упаковка.Пустая() И Найти(Строка(Строка.Упаковка), "<Объект не найден>") Тогда
	//		Если Строка.Упаковка.ПолучитьОбъект() = Неопределено Тогда
	//			МассивНеНайденныхСсылок.Добавить(ОбщегоНазначения.РасшифровкаПредставленияБитойСсылки(Строка(Строка.Упаковка), мСоответствиеИдентификаторовТипов));	
	//		КонецЕсли;
	//	КонецЕсли; 
	//	
	//КонецЦикла;
	//
	//
	//Если МассивНеНайденныхСсылок.Количество() > 0 Тогда
	//	
	//	ФлагМожноСоздатьПриходник = Ложь;
	//	эл = Новый Структура;
	//	эл.Вставить("Array_GUID", МассивНеНайденныхСсылок);
	//	эл.Вставить("Dokument_GUID", Строка(Ссылка.УникальныйИдентификатор())); 
	//	
	//	Прокси = ОбщегоНазначенияВызовСервера.ПолучитьПрокси("123456", "WS_User_tbk", "http://mx.tbkon.ru:1777/ut/ws/tbk?wsdl");
	//	
	//	Если Прокси <> Неопределено Тогда 
	//		
	//		Попытка
	//			JS = ОбщегоНазначения.СтруктураВjson_Общая(эл);
	//			Сообщить(JS);
	//			Ответ = Прокси.RregistrationLinks(JS);
	//			Сообщить(ответ);
	//		Исключение
	//			
	//		КонецПопытки;	
	//		
	//	КонецЕсли;
	//
	//КонецЕсли;
	//исправление <Объект не найден> ---
	
	//КонецМарк
	
КонецПроцедуры  

Процедура ЗаписатьДанныеПоПеремещению(Ссылка,ХранЗнач)
	Рег = РегистрыСведений.СохраненныеДанныеПомощникаПриемкиОтгрузки.СоздатьНаборЗаписей();
	Рег.Отбор.ДокументРаспоряжение.Установить(Ссылка); 
	
	НоваяСтрока	=	Рег.Добавить();
	НоваяСтрока.ДокументРаспоряжение	=	Ссылка;
	НоваяСтрока.ТоварыПеремещение		=	ХранЗнач;
	
	Рег.Записать();	
	
КонецПроцедуры

