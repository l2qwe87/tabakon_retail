&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	Если Параметры.Ключ.Пустая() тогда
		Объект.Статус						=	"";
		Объект.Сформирован					= 	Ложь;
		Объект.Комментарий					=	"";
		Объект.Магазин	=	ТБКПолучитьМагазинНаСервере(); 
		Объект.Продавец	=	ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца(); 
		Объект.Отправлен	= Ложь;
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование	=Истина;	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");

	
	Если Объект.Сформирован тогда 
		Элементы.ТоварыНоменклатура.ТолькоПросмотр			=	Истина;
		Элементы.ТоварыХарактеристика.ТолькоПросмотр		=	Истина;
		Элементы.ТоварыТипЦенника.ТолькоПросмотр			=	Истина;
		Элементы.ТоварыЦена.ТолькоПросмотр					=	Истина;

		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;
		Элементы.Группа3.Доступность		=	Ложь;
		Элементы.Магазин.Доступность		=	Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ТБКПолучитьМагазинНаСервере()
	НужныйМагазин	=	ОбщегоНазначения.ПолучитьМагазинИзООРП();
	Если не ЗначениеЗаполнено(НужныйМагазин) тогда
		//НужныйМагазин	=		ЗначениеНастроекПовтИсп.СкладПродажиПоУмолчанию();
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Магазины.Ссылка КАК Ссылка
		      	 	             |ИЗ
		      	 	             |	Справочник.Магазины КАК Магазины
		      	 	             |ГДЕ
		      	 	             |	НЕ Магазины.СкладУправляющейСистемы");
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()>0 тогда
			Возврат рез[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НужныйМагазин;	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если не ЗначениеЗаполнено(Объект.Магазин) тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Укажите Магазин";
		СП.Поле="Магазин";
		СП.ПутьКДанным = "Объект";
		СП.Сообщить();
		отказ = истина;
	КонецЕсли;
	
	Для каждого СТрока из объект.Товары цикл
		ПК	=	ПолучитьПолныйКод(Строка.Номенклатура);
		Если найти(ПК,"Ю2-00020770") тогда Продолжить; КонецЕсли;//бланки
		
		Если найти(ПК,"Ю2-00001805") тогда //материалы
			Сообщить("Нельзя добавлять материалы! Строка: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;

		Если не ЗначениеЗаполнено(Строка.ТипЦенника) тогда
			Отказ = Истина;
			Сообщить("Не заполнен тип ценника в строке: "+Строка.НомерСтроки);
		КонецЕсли;
		
	КонецЦикла; 
	

	Если не отказ и не Объект.Сформирован тогда
		Сообщить("Не забудьте проставить галочку Сформирован!");		
	КонецЕсли; 
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьПолныйКод(Номенклатура);
	Возврат Номенклатура.ПолныйКод();
КонецФункции
	
&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод")  Тогда
		ДанныеСоСканераСтруктура = СобытияФормИСКлиент.ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(
			ЭтотОбъект, 
			Источник, 
			Событие, 
			Данные);
			
		Если ДанныеСоСканераСтруктура = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ДобавитьКоличество(ДанныеСоСканераСтруктура);		
	Иначе
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура  ДобавитьКоличество(ДанныеСоСканераСтруктура) 
	Если Объект.Сформирован тогда
		Сообщить("Нельзя добавлять товары в сформированный документ!");
		Возврат
	КонецЕсли;
	
	СканированныйШК	=	ДанныеСоСканераСтруктура.Штрихкод;
	Если СтрДлина(СканированныйШК) > 29 тогда
		Сообщить("Запрещено сканировать блоки");
		Возврат;
	КонецЕсли;  
			
	Если СтрДлина(СканированныйШК) >28 тогда //это маркировка 
		СканированныйШК_Копия	=	СканированныйШК;
		ШтрихкодEAN = ШтрихкодированиеИС.ТБКEANИзКодаМаркировки(СканированныйШК_Копия);   
		Если не ЗначениеЗаполнено(ШтрихкодEAN) тогда
			ШтрихкодEAN	=	ПолучитьЕАН(СканированныйШК_Копия);
		КонецЕсли;
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",ШтрихкодEAN); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+ШтрихкодEAN);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+ШтрихкодEAN);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+ШтрихкодEAN);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли;
		
		НужнаяНоменклатура			=	Рез[0].Владелец; 
		Упаковка					=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		НужнаяХар	=	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(); 
		
		МРЦ	=	Неопределено;
		Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики тогда			
			
			МРЦПачки = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиТабачнойПачки(СканированныйШК);
			Если МРЦПачки = Неопределено Тогда
				МРЦБлока = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиБлока(СканированныйШК);
				Если МРЦБлока <> Неопределено Тогда
					мрц = МРЦБлока/10;
				КонецЕсли
			Иначе
				мрц = МРЦПачки;
			Конецесли; 
			
			Если МРЦ	=	Неопределено тогда
				СканированныйШК_Копия	=	СканированныйШК; 
				МРЦ	=	Сред(СканированныйШК_Копия,Найти(СканированныйШК_Копия,"8005")+4,3);
			КонецЕсли;
			
			ОтборНаим	=	Новый Структура("Наименование",Строка(мрц));
			Спр	=	Справочники.ХарактеристикиНоменклатуры.Выбрать(,НужнаяНоменклатура,ОтборНаим);
			Если Спр.Следующий() тогда
				НужнаяХар	=	Спр.Ссылка;
			КонецЕсли;			
		КонецЕсли; 
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);
		Отбор.Вставить("Характеристика",НужнаяХар);
			
		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			НужнаяСтрока = Объект.Товары.Добавить();
			НужнаяСтрока.Номенклатура	=	НужнаяНоменклатура;
			НужнаяСтрока.Характеристика	=	НужнаяХар;
			//НужнаяСтрока.Количество		=	1;
			//НужнаяСтрока.КоличествоФакт	=	1;

		иначе   
           	НужнаяСтрока	=	Строки[0];
			//НужнаяСтрока.Количество	=	НужнаяСтрока.Количество + Кол;
			//НужнаяСтрока.КоличествоФакт = НужнаяСтрока.Количество;
		КонецЕсли;
					

		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	иначе   
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",СканированныйШК); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+СканированныйШК);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+СканированныйШК);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+СканированныйШК);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли; 
		НужнаяНоменклатура	=	Рез[0].Владелец; 
		Упаковка			=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);

		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			НужнаяСтрока = Объект.Товары.Добавить();
			НужнаяСтрока.Номенклатура	=	НужнаяНоменклатура;
			//НужнаяСтрока.Количество		=	1;
			//НужнаяСтрока.КоличествоФакт	=	1;
		иначе         
		    НужнаяСтрока	=	Строки[0];	
			//НужнаяСтрока.Количество		=	НужнаяСтрока.Количество + Кол;
			//НужнаяСтрока.КоличествоФакт	=	НужнаяСтрока.Количество;
		КонецЕсли;
		
	
		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьЕАН(ШК)
	Если лев(ШК,3) = "010" тогда
		ШК = Сред(СокрЛП(ШК),4);
	КонецЕсли;
	
	Если лев(ШК,5) = "00000" тогда
		флЭтоЕан8	=	Истина;
	иначе
		флЭтоЕан8	=	ложь;
	КонецЕсли;
	
	ШК  = ОбщегоНазначенияВызовСервера.УдалитьЛидирующиеНули(ШК);
	
	ШК	= лев(ШК,13);
	
	Если флЭтоЕан8 тогда
		ШК	= лев(ШК,8);
	иначе
		Попытка
			ФФФ	=	Число(ШК);
		Исключение
			ШК = Лев("0" + ШК, 13);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ШК;
КонецФункции

&НаКлиенте
Процедура СформированПриИзменении(Элемент)
	ТекстВопроса = НСтр("ru='Документ Сформирован полностью?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ПроставитьСформирован", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);  
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьСформирован(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Сформирован		=	Истина;
		Элементы.Товары.Доступность			=	Ложь;
		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;
		Записать();
	иначе
		Объект.Сформирован		=	Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для каждого Строка из Объект.Товары цикл
		Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) тогда
			Сообщить("Не заполнена номенклатура в строке: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;
		
		Если Найти(Строка.Номенклатура.ПолныйКод(),"00048218445")  и не ЗначениеЗаполнено(Строка.Характеристика) тогда // сигареты
			Сообщить("Не заполнена характеристика в строке: "+Строка.НомерСтроки);
			ОТказ = Истина;	
		КонецЕсли;
		
		//Если Строка.Количество	=	0 тогда
		//	Сообщить("Не заполнено количество в строке: "+Строка.НомерСтроки);
		//	ОТказ = Истина;
		//КонецЕсли;  
		//
		//Если найти(Строка.Номенклатура.Наименование," БК") тогда
		//	Сообщить("Нельзя добавлять БК. Строка: "+Строка.НомерСтроки);
		//	ОТказ = Истина;
		//КонецЕсли;
		
		Если Строка.Номенклатура.ПометкаУдаления тогда
			Сообщить("Нельзя добавлять позиции помеченные на удаление. Строка: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПроверитьРазмерГруппы(Номенклатура)
	Если НЕ Номенклатура.этоГруппа тогда
		возврат истина;
	КонецЕсли;
	
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Номенклатура.Ссылка) КАК КОЛИЧЕСТВО
	      	 	             |ИЗ
	      	 	             |	Справочник.Номенклатура КАК Номенклатура
	      	 	             |ГДЕ
	      	 	             |	Номенклатура.Ссылка В ИЕРАРХИИ(&Ссылка)
	      	 	             |	И НЕ Номенклатура.ЭтоГруппа
	      	 	             |	И НЕ Номенклатура.ПометкаУдаления");
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если рез.Следующий() тогда
		Кол = Рез.КОЛИЧЕСТВО;
		Если Кол > 1000 тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элементы.товары.ТекущиеДанные.Номенклатура) тогда
		ВсеХорошо	=	ПроверитьРазмерГруппы(Элементы.товары.ТекущиеДанные.Номенклатура);
		Если не ВсеХорошо тогда
			Сообщить("Нельзя выбирать группы, содержищие более 1000 элементов");
			Элементы.товары.ТекущиеДанные.Номенклатура	=	Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
