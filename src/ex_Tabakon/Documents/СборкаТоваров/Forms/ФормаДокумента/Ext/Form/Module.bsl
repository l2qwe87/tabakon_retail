
&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
КонецПроцедуры

&НаКлиенте
Процедура ТБКПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
	Если  Объект.Номенклатура		=	ПолучитьНомПроизв() тогда
		Если не ЗначениеЗаполнено(Объект.Цена) тогда
			Сообщить("Не заполнена цена!");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНомПроизв()
	Возврат Справочники.Номенклатура.НайтиПоНаименованию("Произвольный букет")	
КонецФункции

&НаСервере
Процедура ТБКПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	Если Параметры.Ключ.Пустая() Тогда
		Объект.Номенклатура		=	ПолучитьНомПроизв();
		Объект.КоличествоУпаковок	=	1;   
		Объект.Количество			=	1;
		Объект.НомерБукета			=	0;
	иначе
		Элементы.ВидОперации.ТолькоПросмотр	=Истина;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ТБКПолучитьРозничныеЦеныПослеНаСервере()
	Для каждого Строка из Объект.Товары Цикл
		Запрос	=	Новый Запрос("ВЫБРАТЬ
		      	 	             |	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
		      	 	             |			,
		      	 	             |			Номенклатура = &Номенклатура
		      	 	             |				И Характеристика = &Характеристика) КАК ДействующиеЦеныНоменклатурыСрезПоследних");
		Запрос.УстановитьПараметр("Номенклатура",Строка.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика",Строка.Характеристика);

		Рез = Запрос.Выполнить().Выгрузить();
		Если рез.Количество() >0 тогда		
			Строка.Цена		=	 рез[0].Цена;
			Если Строка.КоличествоУпаковок >0 тогда
				Строка.Сумма	=	 рез[0].Цена * Строка.КоличествоУпаковок;
			иначе
				Строка.Сумма	=	 рез[0].Цена * Строка.Количество;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ТБКПолучитьРозничныеЦеныПосле(Команда)
	ТБКПолучитьРозничныеЦеныПослеНаСервере();
КонецПроцедуры

