
&НаКлиенте
Процедура ТБКОплатаНалПосле(Команда)
	НовыйДокументРКО = СоздатьРКОНаОснованииВозврата(Объект.Ссылка);
	
	Если НовыйДокументРКО <> Неопределено тогда
		Форма = ПолучитьФорму("Документ.РасходныйКассовыйОрдер.Форма.ФормаДокумента", Новый Структура("Ключ", НовыйДокументРКО));
		
		Форма.ВызватьНапечататьЧек();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция  СоздатьРКОНаОснованииВозврата(Ссылка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	РасходныйКассовыйОрдер.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	      	 	             |ГДЕ
	      	 	             |	РасходныйКассовыйОрдер.Проведен
	      	 	             |	И РасходныйКассовыйОрдер.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() >0 тогда
		ТекстСообщения = "По данному возврату уже существует РКО: "+Рез[0].Ссылка;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	
	СтатьяВозврата	=	Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Возврат оплаты покупателю");
	
	НовыйДокументРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
	НовыйДокументРКО.Заполнить(Ссылка);
	
	НовыйДокументРКО.Дата	=	ТекущаяДата(); 
	НовыйДокументРКО.УстановитьНовыйНомер();
	
	Для каждого Строка из НовыйДокументРКО.РасшифровкаПлатежа цикл
		Строка.СтатьяДвиженияДенежныхСредств	=	СтатьяВозврата;
	КонецЦикла; 
	
	Попытка
		НовыйДокументРКО.Записать(РежимЗаписиДокумента.Проведение); 
	Исключение
		ТекстСообщения = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено; 
	КонецПопытки; 
	
	Возврат НовыйДокументРКО.Ссылка;	
КонецФункции

&НаСервереБезКонтекста
Функция  СоздатьОплатаКартойНаОснованииВозврата(Ссылка,ЧекККМ)
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ОплатаОтПокупателяПлатежнойКартой.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ОплатаОтПокупателяПлатежнойКартой
	      	 	             |ГДЕ
	      	 	             |	ОплатаОтПокупателяПлатежнойКартой.Проведен
	      	 	             |	И ОплатаОтПокупателяПлатежнойКартой.ДокументОснование = &ДокументОснование");
	Запрос.УстановитьПараметр("ДокументОснование",Ссылка);
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() >0 тогда
		ТекстСообщения = "По данному возврату уже существует документ: "+Рез[0].Ссылка;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
	
	СтатьяВозврата	=	Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Возврат оплаты покупателю");
	
	НовыйДокументОплатаКартой = Документы.ОплатаОтПокупателяПлатежнойКартой.СоздатьДокумент();
	НовыйДокументОплатаКартой.Заполнить(Ссылка);
	
	НовыйДокументОплатаКартой.Дата	=	ТекущаяДата(); 
	НовыйДокументОплатаКартой.УстановитьНовыйНомер();
	НовыйДокументОплатаКартой.ДокументОснование = Ссылка;
	
	Для каждого Строка из НовыйДокументОплатаКартой.РасшифровкаПлатежа цикл
		Строка.СтатьяДвиженияДенежныхСредств	=	СтатьяВозврата;
	КонецЦикла;
	
	Для каждого СтрокаОплата из ЧекККМ.Оплата цикл
		НовыйДокументОплатаКартой.ВидОплаты				=	СтрокаОплата.ВидОплаты;
		НовыйДокументОплатаКартой.ЭквайринговыйТерминал	=	СтрокаОплата.ЭквайринговыйТерминал;
		НовыйДокументОплатаКартой.Эквайрер				=	СтрокаОплата.ЭквайринговыйТерминал.Эквайрер;
		Прервать;				
	КонецЦикла; 
	
	
	Попытка
		НовыйДокументОплатаКартой.Записать(РежимЗаписиДокумента.Проведение); 
	Исключение
		ТекстСообщения = ОписаниеОшибки();
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено; 
	КонецПопытки; 
	
	Возврат НовыйДокументОплатаКартой.Ссылка;	
КонецФункции

&НаКлиенте
Процедура ТБКОплатаКартаПосле(Команда)
	Если Объект.Товары.Количество() >0 тогда
		ЧекККМ = Объект.Товары[0].ЧекККМ;
		НовыйДокументОплатаКартой = СоздатьОплатаКартойНаОснованииВозврата(Объект.Ссылка,ЧекККМ);
		
		Если НовыйДокументОплатаКартой <> Неопределено тогда
			Форма = ПолучитьФорму("Документ.ОплатаОтПокупателяПлатежнойКартой.Форма.ФормаДокумента", 
									Новый Структура("Ключ", НовыйДокументОплатаКартой)); 			
			Форма.ВызватьОплатитьКартой();
		КонецЕсли; 
	иначе
		ТекстСообщения = НСтр("ru = 'Не найден ЧЕК ККМ!'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	Для каждого СтрокаЧек из Объект.Товары цикл
		ЭтоНал = ОпределитьЭтоНалНаСервере(СтрокаЧек.ЧекККМ);  		
		Если ЭтоНал тогда
			Прервать;
		КонецЕсли;		
	КонецЦикла;
	
	Элементы.ФормаПробитьНал.Видимость 	 = ЭтоНал;
	Элементы.ФормаПробитьКарта.Видимость = не ЭтоНал;
КонецПроцедуры                           

&НаСервереБезКонтекста
Функция ОпределитьЭтоНалНаСервере(ЧекККМ)
	ЭтоНал = Ложь;
	НаличныеСсылка = Справочники.ВидыОплатЧекаККМ.НайтиПоНаименованию("Наличные"); 

	Для каждого СтрокаОплата из ЧекККМ.Оплата цикл
		Если СтрокаОплата.ВидОплаты = НаличныеСсылка тогда
			ЭтоНал = истина;
			Прервать;				
		КонецЕсли;
	КонецЦикла; 
	Возврат ЭтоНал;
КонецФункции

