&НаКлиенте
Перем НажатЭнтер экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИтогПоОрганизации = Параметры.СуммаВсего;
	КоличествоСимволовПослеЗапятой = 2;
КонецПроцедуры

&НаКлиенте
Процедура КомандаНаличные(Команда)
		СтрокаОплаты = ТекущиеВидыОплат.Добавить();
	
	СтрокаОплаты.ВидОплаты = ПредопределенноеЗначение("Справочник.ВидыОплатЧекаККМ.Наличные");
	СуммаКОплате = Макс(ИтогПоОрганизации - ТекущиеВидыОплат.Итог("Сумма"), 0);
	
	СтрокаОплаты.Сумма = СуммаКОплате;
	
	СтрокаОплаты.ПредставлениеСуммы      = СтрокаОплаты.Сумма;
	СтрокаОплаты.ПредставлениеВидаОплаты = "Наличные";
	СтрокаОплаты.Организация             = Организация;
	СтрокаОплаты.ТипОплаты               = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.Наличные");
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница;
	ЭтотОбъект.ТекущийЭлемент = Элементы.ТекущиеВидыОплат;
	Элементы.ТекущиеВидыОплат.ТекущаяСтрока = СтрокаОплаты.ПолучитьИдентификатор();
	
	ПервыйВвод = Истина;
	
	ОбновитьФорму();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму()
	
	ОбщаяСуммаОплаты = ТекущиеВидыОплат.Итог("Сумма");
	
	Если ЭтоАвансБезРасшифровкиПоТоварам Тогда
		СуммаСдачи = 0;
		Элементы.КомандаEnterПраваяКлавиатура.Доступность = Истина;
		Элементы.КомандаEnter.Доступность = Истина;
		ЦветТекстаСдачи  = Новый Цвет(45, 115, 44);
		ЗаголовокСдачи  = НСтр("ru = 'Сумма аванса (руб)'");
	ИначеЕсли ЭтоАванс Тогда
		СуммаСдачи = ОбщаяСуммаОплаты;
		
		Элементы.КомандаEnterПраваяКлавиатура.Доступность = ОбщаяСуммаОплаты > 0;
		Элементы.КомандаEnter.Доступность = ОбщаяСуммаОплаты > 0;
		Если ОбщаяСуммаОплаты >= ИтогПоОрганизации Тогда
			
			ЦветТекстаСдачи  = Новый Цвет(45, 115, 44);
			ЗаголовокСдачи  = НСтр("ru = 'Сумма аванса (руб)'");
			ПодключитьОбработчикОжидания("Подключаемый_УстановитьТекущийЭлементEnter", 0.1, Истина);
		Иначе
			СуммаСдачи = ИтогПоОрганизации - ОбщаяСуммаОплаты;
			Элементы.КомандаEnterПраваяКлавиатура.Доступность = Ложь;
			Элементы.КомандаEnter.Доступность = Ложь;
			
			ЦветТекстаСдачи = WebЦвета.Красный;
			ЗаголовокСдачи  = НСтр("ru = 'Остаток (руб)'");
		КонецЕсли;
	Иначе
		Если ОбщаяСуммаОплаты >= ИтогПоОрганизации Тогда
			СуммаСдачи = ОбщаяСуммаОплаты - ИтогПоОрганизации;
			Элементы.КомандаEnterПраваяКлавиатура.Доступность = ОбщаяСуммаОплаты > 0;
			Элементы.КомандаEnter.Доступность = ОбщаяСуммаОплаты > 0;
			
			ЦветТекстаСдачи  = Новый Цвет(45, 115, 44);
			ЗаголовокСдачи  = НСтр("ru = 'Сдача (руб)'");
			ПодключитьОбработчикОжидания("Подключаемый_УстановитьТекущийЭлементEnter", 0.1, Истина);
		Иначе
			СуммаСдачи = ИтогПоОрганизации - ОбщаяСуммаОплаты;
			Элементы.КомандаEnterПраваяКлавиатура.Доступность = Ложь;
			Элементы.КомандаEnter.Доступность = Ложь;
			
			ЦветТекстаСдачи = WebЦвета.Красный;
			ЗаголовокСдачи  = НСтр("ru = 'Остаток (руб)'");
		КонецЕсли;
	КонецЕсли;
	
	//Элементы.КомандаSMS.Доступность                   = ВозможностьЭлектронногоПлатежа;
	//Элементы.КомандаSMSПанель.Доступность             = ВозможностьЭлектронногоПлатежа;
	//Элементы.КомандаSMSПраваяКлавиатура.Доступность   = ВозможностьЭлектронногоПлатежа;
	//
	//Элементы.КомандаEmail.Доступность                 = ВозможностьЭлектронногоПлатежа;
	//Элементы.КомандаEmailПанель.Доступность           = ВозможностьЭлектронногоПлатежа;
	//Элементы.КомандаEmailПраваяКлавиатура.Доступность = ВозможностьЭлектронногоПлатежа;
	
	Элементы.СуммаСдачи.ЦветТекста = ЦветТекстаСдачи;
	Элементы.СуммаСдачи.Заголовок  = ЗаголовокСдачи;
	
	Если ЗначениеЗаполнено(ДанныеSMSИлиEmail)
		И ЗначениеЗаполнено(ДисконтнаяКарта) Тогда
		Если ОтказКлиентаОтСохраненияТелефонаEmail Тогда
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.НеСохранять16;
		Иначе
			Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Сохранить16;
		КонецЕсли;
	Иначе
		Элементы.ДекорацияОтказКлиентаОтСохраненияТелефонаEmail.Картинка = БиблиотекаКартинок.Пустая;
	КонецЕсли;
	
	Если (ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа")) Тогда
		Элементы.КомандаКредит.Доступность = ЕстьВозможностьОплатыБанковскимКредитом 
											И НЕ ЭтоАвансБезРасшифровкиПоТоварам;
	Иначе
		Элементы.КомандаКредит.Доступность = ЕстьВозможностьОплатыБанковскимКредитом 
											И ВозвращаютсяТоварыВРассрочку;
	КонецЕсли;
	
	Если Элементы.КомандаКредит.Доступность И ОперацияСДенежнымиСредствами Тогда
		Элементы.КомандаКредит.Доступность = ТекущиеВидыОплат.Количество() > 0;
	КонецЕсли;
	Элементы.КомандаКредитПанель.Доступность = Элементы.КомандаКредит.Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УстановитьТекущийЭлементEnter()
	ТекущийЭлемент = Элементы.КомандаEnter;
КонецПроцедуры

&НаКлиенте
Процедура КомандаКарта(Команда)
	СтрокаОплаты = ТекущиеВидыОплат.Добавить();
	
	ВидОплатыПК = ПолучитьВидоплатыПК();
	СтрокаОплаты.ВидОплаты = ВидОплатыПК;
	СуммаКОплате = Макс(ИтогПоОрганизации - ТекущиеВидыОплат.Итог("Сумма"), 0);
	
	СтрокаОплаты.Сумма = СуммаКОплате;
	
	СтрокаОплаты.ПредставлениеСуммы      = СтрокаОплаты.Сумма;
	СтрокаОплаты.ПредставлениеВидаОплаты = "Платежная карта";
	СтрокаОплаты.Организация             = Организация;
	СтрокаОплаты.ТипОплаты               = ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта");
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница;
	ЭтотОбъект.ТекущийЭлемент = Элементы.ТекущиеВидыОплат;
	Элементы.ТекущиеВидыОплат.ТекущаяСтрока = СтрокаОплаты.ПолучитьИдентификатор();
	
	ПервыйВвод = Истина;
	
	ОбновитьФорму();

	//КомандаКартаКлиент();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидоплатыПК()
	Возврат Справочники.ВидыОплатЧекаККМ.НайтиПоНаименованию("Платежная карта");
КонецФункции

&НаКлиенте
Процедура КомандаКартаКлиент()
	
	СуммаКОплате = Макс(ИтогПоОрганизации - ТекущиеВидыОплат.Итог("Сумма"), 0);
	
	Если СуммаКОплате = 0 И НЕ ЭтоАвансБезРасшифровкиПоТоварам Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница;
		Возврат 
	КонецЕсли;
	
	ЗаполнитьТаблицуВидыОплаты(ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта"));
	
	Если ВидыОплат.Количество() < 2 Тогда
		Возврат;
	ИначеЕсли ВидыОплат.Количество() = 2 Тогда
		
		ОбработкаВыбораПлатежнойКарты(ВидыОплат[0]);
		
		ПервыйВвод = Истина;
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаВидыОплат;
		ПодключитьОбработчикОжидания("Подключаемый_УстановитьТекущийЭлементВВидОплаты", 0.1, Истина);
	КонецЕсли;
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуВидыОплаты(ТипОплаты)
	ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат;
	Запрос = Новый Запрос;
	
	Если ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа 
			//ИЛИ (ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат И НЕ ЭтоВозвратДеньВДень()) Тогда
			ИЛИ (ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат И НЕ Ложь) Тогда
			
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка КАК ЭквайринговыйТерминал,
				|	ВЫБОР
				|		КОГДА &ЭтоВозврат
				|			ТОГДА ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ПроцентКомиссииПриВозврате
				|		ИНАЧЕ ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ПроцентКомиссииПриПродаже
				|	КОНЕЦ КАК ПроцентКомиссии,
				|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ВидОплаты КАК ВидОплаты,
				|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Эквайрер КАК Эквайрер
				|ПОМЕСТИТЬ ТаблицаЭТ
				|ИЗ
				|	Справочник.ЭквайринговыеТерминалы.ТарифыЗаРасчетноеОбслуживание КАК ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание
				|ГДЕ
				|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Касса = &КассаККМ
				|	И ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Организация = &Организация
				|	И НЕ ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.ПометкаУдаления
				|	И НЕ ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.НеДействителен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаЭТ.ЭквайринговыйТерминал) КАК КоличествоЭТ,
				|	ТаблицаЭТ.ВидОплаты КАК ВидОплаты
				|ПОМЕСТИТЬ ТаблицаПересекающихсяВидовОплат
				|ИЗ
				|	ТаблицаЭТ КАК ТаблицаЭТ
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаЭТ.ВидОплаты
				|
				|ИМЕЮЩИЕ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаЭТ.ЭквайринговыйТерминал) > 1
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаЭТ.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
				|	ТаблицаЭТ.ПроцентКомиссии КАК ПроцентКомиссии,
				|	ТаблицаЭТ.ВидОплаты КАК ВидОплаты,
				|	ВЫБОР
				|		КОГДА ТаблицаПересекающихсяВидовОплат.ВидОплаты ЕСТЬ NULL
				|			ТОГДА ТаблицаЭТ.ВидОплаты.Наименование
				|		ИНАЧЕ ТаблицаЭТ.ВидОплаты.Наименование + "", "" + ТаблицаЭТ.Эквайрер.Наименование
				|	КОНЕЦ КАК Представление
				|ИЗ
				|	ТаблицаЭТ КАК ТаблицаЭТ
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПересекающихсяВидовОплат КАК ТаблицаПересекающихсяВидовОплат
				|		ПО ТаблицаЭТ.ВидОплаты = ТаблицаПересекающихсяВидовОплат.ВидОплаты";
				
				Запрос.УстановитьПараметр("КассаККМ"   , КассаККМ);
				Запрос.УстановитьПараметр("Организация", Организация);
				Запрос.УстановитьПараметр("ТипОплаты"  , ТипОплаты);
				Запрос.УстановитьПараметр("ЭтоВозврат" , ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат);
				
				Результат = Запрос.Выполнить();
				
				ТаблицаВидовОплат = Результат.Выгрузить();
				
			Иначе // Возврат
				Если КассаККМ = ЧекККМПродажа.КассаККМ Тогда
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка КАК ЭквайринговыйТерминал,
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ПроцентКомиссииПриОтмене КАК ПроцентКомиссии,
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ВидОплаты КАК ВидОплаты,
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Эквайрер КАК Эквайрер,
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.ВидОплаты.ТипОплаты КАК ТипОплаты
					|ПОМЕСТИТЬ ТаблицаЭТ
					|ИЗ
					|	Справочник.ЭквайринговыеТерминалы.ТарифыЗаРасчетноеОбслуживание КАК ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание
					|ГДЕ
					|	ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Касса = &КассаККМ
					|	И ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.Организация = &Организация
					|	И НЕ ЭквайринговыеТерминалыТарифыЗаРасчетноеОбслуживание.Ссылка.ПометкаУдаления
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаЭТ.ЭквайринговыйТерминал) КАК КоличествоЭТ,
					|	ТаблицаЭТ.ВидОплаты
					|ПОМЕСТИТЬ ТаблицаПересекающихсяВидовОплат
					|ИЗ
					|	ТаблицаЭТ КАК ТаблицаЭТ
					|
					|СГРУППИРОВАТЬ ПО
					|	ТаблицаЭТ.ВидОплаты
					|
					|ИМЕЮЩИЕ
					|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаЭТ.ЭквайринговыйТерминал) > 1
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЧекККМОплата.ВидОплаты,
					|	ЧекККМОплата.ЭквайринговыйТерминал,
					|	ЧекККМОплата.Сумма,
					|	ВЫБОР
					|		КОГДА ТаблицаЭТ.ВидОплаты ЕСТЬ NULL
					|			ТОГДА -ЧекККМОплата.ПроцентКомиссии
					|		ИНАЧЕ ТаблицаЭТ.ПроцентКомиссии
					|	КОНЕЦ КАК ПроцентКомиссии,
					|	ВЫБОР
					|		КОГДА ТаблицаЭТ.ВидОплаты ЕСТЬ NULL
					|			ТОГДА -ЧекККМОплата.СуммаКомиссии
					|		ИНАЧЕ ТаблицаЭТ.ПроцентКомиссии * ЧекККМОплата.Сумма / 100
					|	КОНЕЦ КАК СуммаКомиссии,
					|	ЧекККМОплата.СсылочныйНомер,
					|	ЧекККМОплата.НомерЧекаЭТ,
					|	ЧекККМОплата.НомерПлатежнойКарты,
					|	ВЫБОР
					|		КОГДА ТаблицаПересекающихсяВидовОплат.ВидОплаты ЕСТЬ NULL
					|			ТОГДА ЧекККМОплата.ВидОплаты.Наименование
					|		ИНАЧЕ ЧекККМОплата.ВидОплаты.Наименование + "", "" + ЧекККМОплата.ЭквайринговыйТерминал.Эквайрер.Наименование
					|	КОНЕЦ КАК Представление,
					|	ЧекККМОплата.ВидОплаты.ТипОплаты КАК ТипОплаты
					|ИЗ
					|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
					|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПересекающихсяВидовОплат КАК ТаблицаПересекающихсяВидовОплат
					|		ПО ЧекККМОплата.ВидОплаты = ТаблицаПересекающихсяВидовОплат.ВидОплаты
					|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЭТ КАК ТаблицаЭТ
					|		ПО ЧекККМОплата.ВидОплаты = ТаблицаЭТ.ВидОплаты
					|			И ЧекККМОплата.ЭквайринговыйТерминал = ТаблицаЭТ.ЭквайринговыйТерминал
					|ГДЕ
					|	ЧекККМОплата.Ссылка = &Ссылка
					|	И ЧекККМОплата.ВидОплаты.ТипОплаты = &ТипОплаты";
					
					Запрос.УстановитьПараметр("КассаККМ"   , КассаККМ);
					Запрос.УстановитьПараметр("Организация", Организация);
					Запрос.УстановитьПараметр("Ссылка"   , ЧекККМПродажа);
					Запрос.УстановитьПараметр("ТипОплаты", ТипОплаты);
					
					Результат = Запрос.Выполнить();
					ТаблицаВидовОплат = Результат.Выгрузить();
					
				КонецЕсли;
				
				СтрокаСтруктурыПоиска = "ВидОплаты, Сумма, ЭквайринговыйТерминал, СсылочныйНомер, НомерЧекаЭТ, НомерПлатежнойКарты";
				
			КонецЕсли;
			
			
	Иначе
		
		Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВидыОплатЧекаККМ.Ссылка КАК ВидОплаты,
			|	ВидыОплатЧекаККМ.ПроцентБанковскойКомиссии КАК ПроцентКомиссии,
			|	ВидыОплатЧекаККМ.Наименование КАК Представление,
			|	ВидыОплатЧекаККМ.ТипОплаты КАК ТипОплаты
			|ИЗ
			|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплатЧекаККМ
			|ГДЕ
			|	ВидыОплатЧекаККМ.ЭтоГруппа = ЛОЖЬ
			|	И ВидыОплатЧекаККМ.ПометкаУдаления = ЛОЖЬ
			|	И ВидыОплатЧекаККМ.ТипОплаты В(&ТипОплаты)";
			
			Запрос.УстановитьПараметр("ТипОплаты", ТипОплаты);
			ТаблицаВидовОплат = Запрос.Выполнить().Выгрузить();
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЧекККМОплата.ВидОплаты,
			|	ЧекККМОплата.Сумма,
			|	ЧекККМОплата.ПроцентКомиссии,
			|	ЧекККМОплата.СуммаКомиссии,
			|	ЧекККМОплата.ВидОплаты.Наименование КАК Представление,
			|	ЧекККМОплата.ВидОплаты.ТипОплаты КАК ТипОплаты
			|ИЗ
			|	Документ.ЧекККМ.Оплата КАК ЧекККМОплата
			|ГДЕ
			|	ЧекККМОплата.Ссылка = &Ссылка
			|	И ЧекККМОплата.ВидОплаты.ТипОплаты В(&ТипОплаты)";
			
			Запрос.УстановитьПараметр("Ссылка"   , ЧекККМПродажа);
			Запрос.УстановитьПараметр("ТипОплаты", ТипОплаты);
			
			Результат = Запрос.Выполнить();
			ТаблицаВидовОплат = Результат.Выгрузить();
			
			СтрокаСтруктурыПоиска = "ВидОплаты, Сумма";
			
		КонецЕсли;
		
	КонецЕсли;

	Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		Для каждого СтрокаВыбранныхОплат Из ТекущиеВидыОплат Цикл
			Если ТипОплаты = СтрокаВыбранныхОплат.ВидОплаты.ТипОплаты Тогда
				
				СтруктураПоиска = Новый Структура(СтрокаСтруктурыПоиска);
				
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаВыбранныхОплат);
				
				СтрокиТаблицы = ТаблицаВидовОплат.НайтиСтроки(СтруктураПоиска);
				Если СтрокиТаблицы.Количество() > 0  Тогда
					ТаблицаВидовОплат.Удалить(СтрокиТаблицы[0]);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	ВидыОплат.Очистить();
	Если ТаблицаВидовОплат <> Неопределено Тогда
		Для Каждого ТекСтрокаТаблицаВидовОплат Из ТаблицаВидовОплат Цикл
			НовСтрока = ВидыОплат.Добавить();
			
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрокаТаблицаВидовОплат);
		КонецЦикла;
	КонецЕсли;
	СтрокаВыхода = ВидыОплат.Добавить();
	СтрокаВыхода.ВидОплаты = Справочники.ВидыОплатЧекаККМ.ПустаяСсылка();
	СтрокаВыхода.Представление = НСтр("ru = 'Назад'")
	
КонецПроцедуры

&НаКлиенте
// Обрабатывается выбор платежной карты.
//
// Параметры:
//  ПлатежнаяКарта - Справочник "Виды оплат чека ККМ".
//
Процедура ОбработкаВыбораПлатежнойКарты(ВыбраннаяСтрока)

	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница;
	
	ПараметрДействия = Новый Структура;
	ПараметрДействия.Вставить("ОткрытаБлокирующаяФорма"     , Ложь);
	ПараметрДействия.Вставить("ИдентификаторВыбраннойСтроки", ВыбраннаяСтрока.ПолучитьИдентификатор());
	ПараметрДействия.Вставить("ЗавершитьОбработкуВыбораПлатежнойКарты");
	
	//Если ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Продажа") Тогда
	//	ОплатаПлатежнойКартойЧерезЭквайринговыйТерминал(ВыбраннаяСтрока);
	//	
	//ИначеЕсли ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") И ЭтоВозвратДеньВДень() Тогда
	//	
	//	Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораПлатежнойКартыЗавершение", ЭтотОбъект, ПараметрДействия);
	//	СторноОплатыПлатежнойКартойЧерезЭквайринговыйТерминал(Оповещение, ВыбраннаяСтрока, ПараметрДействия);
	//	
	//Иначе // Возврат не день в день
		
		Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораПлатежнойКартыЗавершение", ЭтотОбъект, ПараметрДействия);
		ВозвратОплатыПлатежнойКартойЧерезЭквайринговыйТерминал(ВыбраннаяСтрока);
		
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратОплатыПлатежнойКартойЧерезЭквайринговыйТерминал(ВыбраннаяСтрока)
    
    // &ЗамерПроизводительности
    ОценкаПроизводительностиРТКлиент.НачатьЗамер(
             Истина, "Обработка.РМКУправляемыйРежим.Форма.ФормаВводаЧисла.Открытие");

	ИдентификаторУстройстваЭТ = Неопределено;
	ИдентификаторУстройстваФР = Неопределено;
	
	СуммаОперации       = 0;
	НомерКарты          = "";
	НомерСсылкиОперации = "";
	НомерЧекаЭТ         = "";
	СтрокаСлипЧека      = "";
	ВидКарты            = "";
	
	// Выбор устройства ФР
	ПараметрыКассыККМ = ЗначениеНастроекВызовСервера.ПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройстваФР      = ПараметрыКассыККМ.ИдентификаторУстройства;
	ПечатьНаПечатающемУстройствеЭТ = Истина;
	СтруктураЭквайринговыйТерминал = СтруктураДанныхЭТ(ВыбраннаяСтрока.ЭквайринговыйТерминал);
	ИдентификаторУстройстваЭТ = СтруктураЭквайринговыйТерминал.ПодключаемоеОборудование;
	
	Если НЕ ИспользоватьПодключаемоеОборудование Тогда
		ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования = Истина;
		СтруктураЭквайринговыйТерминал.ИспользоватьБезПодключенияОборудования = Истина;
	КонецЕсли;
	
	ИспользоватьКассуККМБезПодключенияОборудования = ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
	
	ОставшаясяСуммаОплаты = ИтогПоОрганизации - ТекущиеВидыОплат.Итог("Сумма");
	ПределСуммы           = ИтогПоОрганизации - СуммаОплатПлатежнойКартой();
	
	ПараметрДействия = Новый Структура;
	ПараметрДействия.Вставить("СуммаОперации"                         , СуммаОперации);
	ПараметрДействия.Вставить("ИспользоватьБезПодключенияОборудования", СтруктураЭквайринговыйТерминал.ИспользоватьБезПодключенияОборудования);
	ПараметрДействия.Вставить("ИспользоватьКассуККМБезПодключенияОборудования", ИспользоватьКассуККМБезПодключенияОборудования);
	ПараметрДействия.Вставить("ИдентификаторУстройстваЭТ"             , ИдентификаторУстройстваЭТ);
	ПараметрДействия.Вставить("ИдентификаторУстройстваФР"             , ИдентификаторУстройстваФР);
	ПараметрДействия.Вставить("ИдентификаторВыбраннойСтроки"          , ВыбраннаяСтрока.ПолучитьИдентификатор());
	
	// Предварительно авторизуем операцию.
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок"           , НСтр("ru = 'Авторизация операции'"));
	ПараметрыФормы.Вставить("МаксимальноеЗначение", ПределСуммы);
	ПараметрыФормы.Вставить("ЧислоВвода"          , ОставшаясяСуммаОплаты);
	ПараметрыФормы.Вставить("Отрицательное"       , Ложь);
	ПараметрыФормы.Вставить("АвторизацияЭТ"       , Истина);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ПараметрДействия", ПараметрДействия);
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеОткрытьФормуВозвратаПлатежнойКартойЧерезЭквайринговыйТерминал", ЭтотОбъект, ДополнительныеПараметры);
	Режим = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ОткрытьФорму("Обработка.РМКУправляемыйРежим.Форма.ФормаВводаЧисла", ПараметрыФормы, УникальныйИдентификатор,,,, ОбработчикОповещения, Режим); 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураДанныхЭТ(Терминал)
	
	Возврат РозничныеПродажиСервер.СтруктураДанныхЭТ(Терминал);
	
КонецФункции

&НаКлиенте
Функция СуммаОплатПлатежнойКартой();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ТипОплаты", ПредопределенноеЗначение("Перечисление.ТипыОплатЧекаККМ.ПлатежнаяКарта"));
	
	СтрокиВидовОплат = ТекущиеВидыОплат.НайтиСтроки(СтруктураПоиска);
	
	СуммаОплатыПлатежнойКартой = 0;
	
	Для каждого СтрокаВидовОплат Из СтрокиВидовОплат Цикл
	
		СуммаОплатыПлатежнойКартой = СуммаОплатыПлатежнойКартой + СтрокаВидовОплат.Сумма;
	
	КонецЦикла;
	
	Возврат СуммаОплатыПлатежнойКартой
	
КонецФункции // СуммаОплатПлатежнойКартой()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	СтруктураВозврата = новый Структура;
	
	Если не ЗначениеЗаполнено(НажатЭнтер) тогда
		СтруктураВозврата.Вставить("СуммаНал",0);
		СтруктураВозврата.Вставить("СуммаКарта",0); 
	иначе
		ПолучитьСуммы(СтруктураВозврата);
	КонецЕсли;
	
	ВладелецФормы.СтруктураСумм = СтруктураВозврата;	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммы(СтруктураВозврата)
	СуммаНал	= 0;
	СуммаКарта  = 0;
	
	Для каждого Строка из ТекущиеВидыОплат цикл
		Если Строка.ВидОплаты = Справочники.ВидыОплатЧекаККМ.НайтиПоНаименованию("Наличные") тогда
			СуммаНал = СуммаНал + Строка.сумма; 
		иначе
			СуммаКарта = СуммаКарта + Строка.сумма; 
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата.Вставить("СуммаНал",СуммаНал);
	СтруктураВозврата.Вставить("СуммаКарта",СуммаКарта);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура КомандаEnter(Команда)
	НажатЭнтер = Истина;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	ДобавитьЦифру("7")
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	ТекущаяСтрокаОплаты = Элементы.ТекущиеВидыОплат.ТекущиеДанные;
	
	Если ТекущаяСтрокаОплаты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТекущаяСтрокаОплаты.ЗапретРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПервыйВвод Тогда
		ТекущаяСтрокаОплаты.ПредставлениеСуммы = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ТекущаяСтрокаОплаты.ПредставлениеСуммы, СтрДлина(ТекущаяСтрокаОплаты.ПредставлениеСуммы) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ТекущаяСтрокаОплаты.ПредставлениеСуммы = ТекущаяСтрокаОплаты.ПредставлениеСуммы + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	СуммаОплаты = ПривестиСтрокуКЧислу(ТекущаяСтрокаОплаты.ПредставлениеСуммы, Истина);
	
	ТекущаяСтрокаОплаты.Сумма = СуммаОплаты;
	
	ОбновитьФорму();
	
КонецПроцедуры

&НаКлиенте
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой, ВозвращатьНеопределено = Ложь)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Если ВозвращатьНеопределено И (ЗначениеЧисла = 0) Тогда
		
		Стр = Строка(ЧислоСтрокой);
		Если Стр = "" Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Стр = СтрЗаменить(СокрЛП(Стр), "0", "");
		Если (Стр <> "") И (Стр <> ".") И (Стр <> ",") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
		ДобавитьЦифру("8")
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
		ДобавитьЦифру("9")
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
		ДобавитьЦифру("6")
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
		ДобавитьЦифру("5")
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
		ДобавитьЦифру("4")
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
		ДобавитьЦифру("3")
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
		ДобавитьЦифру("2")
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
		ДобавитьЦифру("1")
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
		ДобавитьЦифру("0")
КонецПроцедуры
	
	&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	ТекущаяСтрокаОплаты = Элементы.ТекущиеВидыОплат.ТекущиеДанные;
	
	Если ТекущаяСтрокаОплаты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если (ТекущаяСтрокаОплаты.ЗапретРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПервыйВвод Тогда
		ТекущаяСтрокаОплаты.ПредставлениеСуммы = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ТекущаяСтрокаОплаты.ПредставлениеСуммы = "" Тогда
		ТекущаяСтрокаОплаты.ПредставлениеСуммы = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ТекущаяСтрокаОплаты.ПредставлениеСуммы, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ТекущаяСтрокаОплаты.ПредставлениеСуммы = ТекущаяСтрокаОплаты.ПредставлениеСуммы + ",";
	КонецЕсли;
КонецПроцедуры




