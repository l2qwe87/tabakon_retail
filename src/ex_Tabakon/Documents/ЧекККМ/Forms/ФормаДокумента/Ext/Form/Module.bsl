&НаКлиенте
Процедура ВызватьПробитьЧек()Экспорт
	ПробитьЧек(Неопределено)
КонецПроцедуры

&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	Элементы.ФормаДокументЧекККМСоздатьНаОсновании1.Видимость = Ложь;
	
	ПолеВозврат	=	НайтиВозврат(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ТБКВозвратОтПокупателяПосле(Команда) 	

	ЧекККМ = Объект.Ссылка;
	
	Если ЗначениеЗаполнено(ЧекККМ) тогда
		Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()) тогда
			Сообщить("Для возврата чека за сегодняшний день - воспользуйтесь РМК!");
			Возврат;
		КонецЕсли;

		ЭтоПродажа = ПолучитьЭтоПродажа(ЧекККМ);
		
		Если ЭтоПродажа тогда
			//Если не ОбщегоНазначенияВызовСервера.ПроверитьЧекНаНаличиеСкидок(ЧекККМ) тогда
			//	Сообщить("Возврат чека не возможен! В выбранном чеке присутсвует уцененный товар!");
			//	Возврат;	
			//КонецЕсли;

			НовыйДокументВозврата = ЗаполнитьДокументВозвратТоваровОтПокупателяНаСервере(ЧекККМ);
			
			Если НовыйДокументВозврата<> Неопределено тогда
				ПараметрыОткрытия = Новый Структура("Ключ",НовыйДокументВозврата);
				ОткрытьФорму("Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента",ПараметрыОткрытия);
				ПолеВозврат	=	НовыйДокументВозврата;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьЭтоПродажа(ЧекККМ)
	Возврат ЧекККМ.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Продажа;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьДокументВозвратТоваровОтПокупателяНаСервере(ЧекККМ)
	НовыйДокументВозврата = Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();   	
	
	ЗаполнитьЗначенияСвойств(НовыйДокументВозврата,ЧекККМ);
	
	НовыйДокументВозврата.УстановитьНовыйНомер();
	НовыйДокументВозврата.Дата = ТекущаяДата();
	НовыйДокументВозврата.Склад = ЧекККМ.Магазин.СкладПродажи;
	НовыйДокументВозврата.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию(СокрЛП(ЧекККМ.Магазин.Наименование)+" "+"Покупатель");
	
	Для каждого Строка из ЧекККМ.Товары цикл
		//Нельзя возвращать сигареты и стики
		Если ЗначениеЗаполнено(Строка.Характеристика) тогда
			Сообщить("Были удалены: "+Строка.Номенклатура);
			Продолжить;
		КонецЕсли;
		
		Если  Найти(Строка.Номенклатура.ПолныйКод(),"Ю2-00025964") тогда
			Сообщить("Были удалены: "+Строка.Номенклатура);
			Продолжить;
		КонецЕсли;
		//

		НоваяСтрока = НовыйДокументВозврата.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);  
			
		НоваяСтрока.ДокументПродажи	=	ЧекККМ.ОтчетОРозничныхПродажах;
		НоваяСтрока.ЧекККМ			=	ЧекККМ; 
	КонецЦикла;
	
	//Дополнительный блок
	НовыйДокументВозврата.Товары.Свернуть("Номенклатура,Характеристика,Упаковка,Цена,СтавкаНДС,ДокументПродажи,Продавец,ЧекККМ,СтатусУказанияСерий,Штрихкод,НеобходимостьВводаАкцизнойМарки",
											"Количество,КоличествоУпаковок,Сумма,СуммаНДС,СуммаСкидкиОплатыБонусом,СуммаАвтоматическойСкидки,СуммаРучнойСкидки");
	
	УжеВозвращено = ПолучитьТЗУжеВозвращено(ЧекККМ);
	Для каждого Строка из УжеВозвращено цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура",Строка.Номенклатура);
		ПараметрыОтбора.Вставить("Характеристика",Строка.Характеристика);
		
		СтрокиДокумента = НовыйДокументВозврата.Товары.НайтиСтроки(ПараметрыОтбора); 		
		Если СтрокиДокумента.Количество() = 1 тогда	
			Для каждого СтрокаДокумента из СтрокиДокумента цикл
				СтрокаДокумента.Количество 					= СтрокаДокумента.Количество - Строка.Количество;
				СтрокаДокумента.КоличествоУпаковок 			= СтрокаДокумента.КоличествоУпаковок - Строка.КоличествоУпаковок;
				СтрокаДокумента.Сумма 						= СтрокаДокумента.Сумма - Строка.Сумма;
				СтрокаДокумента.СуммаНДС 					= СтрокаДокумента.СуммаНДС - Строка.СуммаНДС;
				СтрокаДокумента.СуммаСкидкиОплатыБонусом 	= СтрокаДокумента.СуммаСкидкиОплатыБонусом - Строка.СуммаСкидкиОплатыБонусом;
				СтрокаДокумента.СуммаАвтоматическойСкидки 	= СтрокаДокумента.СуммаАвтоматическойСкидки - Строка.СуммаАвтоматическойСкидки;
				СтрокаДокумента.СуммаРучнойСкидки 			= СтрокаДокумента.СуммаРучнойСкидки - Строка.СуммаРучнойСкидки;
			КонецЦикла;
		КонецЕсли; 		
	КонецЦикла;
	НулевыеСтроки = НовыйДокументВозврата.Товары.НайтиСтроки(Новый Структура("КоличествоУпаковок",0));
	Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
		НовыйДокументВозврата.Товары.Удалить(СтрокаТаблицы)
	КонецЦикла; 
	
	Если НовыйДокументВозврата.Товары.Количество() = 0 тогда
		//ТекстСообщения = "По данному чеку все товары возвращены!";
		ТекстСообщения = "Доступных товаров для возврата нет!";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	//
	
	Отказ = Ложь;
	
	ПродажиСервер.ПроверитьВозможностьВозвратаОтПокупателя(
	НовыйДокументВозврата,
	Отказ);
	
	Если не Отказ тогда
		НовыйДокументВозврата.Записать(РежимЗаписиДокумента.Проведение); 
		Возврат НовыйДокументВозврата.Ссылка;
	иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТЗУжеВозвращено(ЧекККМ)
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	      	 	             |	ВозвратТоваровОтПокупателяТовары.Характеристика КАК Характеристика,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.Сумма) КАК Сумма,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.СуммаНДС) КАК СуммаНДС,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.СуммаСкидкиОплатыБонусом) КАК СуммаСкидкиОплатыБонусом,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.СуммаАвтоматическойСкидки) КАК СуммаАвтоматическойСкидки,
	      	 	             |	СУММА(ВозвратТоваровОтПокупателяТовары.СуммаРучнойСкидки) КАК СуммаРучнойСкидки
	      	 	             |ИЗ
	      	 	             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	      	 	             |ГДЕ
	      	 	             |	ВозвратТоваровОтПокупателяТовары.ЧекККМ = &ЧекККМ
	      	 	             |	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
	      	 	             |
	      	 	             |СГРУППИРОВАТЬ ПО
	      	 	             |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	      	 	             |	ВозвратТоваровОтПокупателяТовары.Характеристика");
	Запрос.УстановитьПараметр("ЧекККМ",ЧекККМ);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции 

&НаСервереБезКонтекста
Функция НайтиВозврат(ЧекККМ)
	Запрос	=	Новый запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ВозвратТоваровОтПокупателяТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	      	 	             |ГДЕ
	      	 	             |	ВозвратТоваровОтПокупателяТовары.ЧекККМ = &ЧекККМ
	      	 	             |	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен");
	Запрос.УстановитьПараметр("ЧекККМ",ЧекККМ);
	Рез = Запрос.Выполнить().Выбрать();
	
	Если Рез.Следующий() тогда
		Возврат Рез.Ссылка;
	КонецЕсли;   
КонецФункции