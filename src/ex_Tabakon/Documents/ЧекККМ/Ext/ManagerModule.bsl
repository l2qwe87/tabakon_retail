
&Вместо("ДополнитьТоварамиПараметрыПриПробитииЧека")
Процедура ТБКДополнитьТоварамиПараметрыПриПробитииЧека(РеквизитыДокумента, ОбщиеПараметры, ТаблицаТоваровЧека, ТаблицаТоваровГосИС, ТаблицаСоответствияТоваровСекциям, ПризнакСпособаРасчета, ИспользуетсяКомиссионнаяТорговля, ИспользуетсяУчетИмпортныхТоваров)
	// Вставить содержимое метода.
	
	Если ТекущаяДата()<ИнтеграцияМОТПВызовСервера.ДатаОбязательнойМаркировкиТабачнойПродукции() Тогда
		
		этоВозврат = (Ложь) ИЛИ (РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат);
		
		Для  Каждого СтрокаТЧ из ТаблицаТоваровЧека Цикл
			Если (этоВозврат) ИЛИ (СтрДлина(СтрокаТЧ.Штрихкод) <= 13) Тогда
				СтрокаТЧ.ПродукцияГИСМ = ЛОЖЬ;
			КонецЕсли;
		КонецЦикла;
		
		мУдалить = новый Массив;
		Для Каждого СтрокаТЧ из ТаблицаТоваровГосИС Цикл
			Если (этоВозврат) ИЛИ (СтрДлина(СтрокаТЧ.Штрихкод) <= 13) Тогда
				мУдалить.Добавить(СтрокаТЧ);
			КонецЕсли; 	
		КонецЦикла;
		
		Для каждого эл из мУдалить Цикл 
			ТаблицаТоваровГосИС.Удалить(эл);
		КонецЦикла;
	КонецЕсли;
	//ПродолжитьВызов(РеквизитыДокумента, ОбщиеПараметры, ТаблицаТоваровЧека, ТаблицаТоваровГосИС, ТаблицаСоответствияТоваровСекциям, ПризнакСпособаРасчета, ИспользуетсяКомиссионнаяТорговля, ИспользуетсяУчетИмпортныхТоваров);
		ЭтоАванс = ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс
			ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаПолная
			ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаЧастичная;
	
	Если ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс Тогда
		СтрокаПозицииЧека = МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека(); 
		Если ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств Тогда
			СтрокаПозицииЧека.Наименование = НСтр("ru = 'Возврат от:'") + " " + РеквизитыДокумента.Контрагент;
		Иначе
			СтрокаПозицииЧека.Наименование = НСтр("ru = 'Оплата от:'") + " " + РеквизитыДокумента.Контрагент;
		КонецЕсли;
		СтрокаПозицииЧека.Количество     = 1;
		СтрокаПозицииЧека.Цена           = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.ЦенаСоСкидками = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.Сумма          = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.НомерСекции    = 2;
		Если ОбщиеПараметры.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН Тогда
			
			Если РеквизитыДокумента.Дата > УчетНДС.ДатаПереходногоПериода() Тогда
				Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
					ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
					Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда  //Возврат аванса за 2018 год.
						СтрокаПозицииЧека.СтавкаНДС = 118;
					Иначе 
						СтрокаПозицииЧека.СтавкаНДС = 120;
					КонецЕсли;
				Иначе 
					СтрокаПозицииЧека.СтавкаНДС = 120;
				КонецЕсли;
			Иначе 
				СтрокаПозицииЧека.СтавкаНДС = 118;
			КонецЕсли;
			
		Иначе
			СтрокаПозицииЧека.СтавкаНДС      = Неопределено;
		КонецЕсли;
		СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
		СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
		
		ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
		
		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
		
	Иначе
		КэшСНО = Новый Соответствие;
		
		Для Каждого СтрокаТЧ Из ТаблицаТоваровЧека Цикл
			НаименованиеТовара = Строка(СтрокаТЧ.Номенклатура) + ?(ЗначениеЗаполнено(СтрокаТЧ.Характеристика), " (" + Строка(СтрокаТЧ.Характеристика) + ")", "");

			//Вик 2021_07_01
			Если ТекущаяДата() > '20230601' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 119 тогда
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
				
			ИначеЕсли ТекущаяДата() > '20230401' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 117 тогда
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
			КонецЕсли;
			//КонецВик
			
			//Вик 2024-10-10
			Если Найти(НаименованиеТовара, " БК") тогда
				ИзменитьНаименованиеТовараВЧеке(НаименованиеТовара);	
			КонецЕсли;			
			//КонецВик
			
			СтрокаТаблицыТоваров = Новый СписокЗначений();
			НомерСекции = ТаблицаСоответствияТоваровСекциям.Получить(СтрокаТЧ.НомерСтроки);
			
			ДанныеАлкогольнойПродукции = Новый Структура;
			ДанныеАлкогольнойПродукции.Вставить("АлкогольнаяПродукция", СтрокаТЧ.АлкогольнаяПродукция);
			ДанныеАлкогольнойПродукции.Вставить("Маркируемый", СтрокаТЧ.Маркируемый);
			ДанныеАлкогольнойПродукции.Вставить("КодАкцизнойМарки", Новый Массив);
			ДанныеАлкогольнойПродукции.Вставить("ОбъемДАЛ", СтрокаТЧ.ОбъемДАЛ);
			ДанныеАлкогольнойПродукции.Вставить("Крепость", СтрокаТЧ.Крепость);
			ДанныеАлкогольнойПродукции.Вставить("КодВидаПродукции", СтрокаТЧ.КодВидаПродукции);
			
			МассивСтрокГосИС = Новый Массив;
			
			//Вик 2021_6_17
			Попытка
				Для каждого СТрокаТаблицаТоваровГосИС из ТаблицаТоваровГосИС цикл
					СТрокаТаблицаТоваровГосИС.Штрихкод	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.Штрихкод,"(01)","");
					СТрокаТаблицаТоваровГосИС.Штрихкод	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.Штрихкод,"(21)","");
					СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки,"(01)","");
					СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки,"(21)","");
					
				КонецЦикла;
			Исключение
			КонецПопытки;
			//КонецВик
			
			Если СтрокаТЧ.ПродукцияГИСМ Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаТЧ.Характеристика);
				
				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(СтруктураПоиска);
			Иначе
				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи));
			КонецЕсли;
				
			Если СтрокаТЧ.АлкогольнаяПродукция Тогда
				Для Каждого СтрокаТоварыЕГАИС Из МассивСтрокГосИС Цикл
					Если НЕ ПустаяСтрока(СтрокаТоварыЕГАИС.КодАкцизнойМарки) Тогда
						ДанныеАлкогольнойПродукции.КодАкцизнойМарки.Добавить(СтрокаТоварыЕГАИС.КодАкцизнойМарки);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
				Штрихкод = ?(МассивСтрокГосИС.Количество() > 0, МассивСтрокГосИС[0].Штрихкод, "");
			Иначе
				Штрихкод = СтрокаТЧ.Штрихкод;
			КонецЕсли;
			
			ПараметрыАлкогольнойПродукции = ИнтеграцияЕГАИСРТ.ПараметрыАлкогольнойПродукции(ДанныеАлкогольнойПродукции);
			
			СтрокаПозицииЧека 				= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
			СтрокаПозицииЧека.Наименование 	= НаименованиеТовара;
			СтрокаПозицииЧека.Количество 	= ?(СтрокаТЧ.КоличествоУпаковок = 0, 1, СтрокаТЧ.КоличествоУпаковок);
			СтрокаПозицииЧека.Цена 			= ?(СтрокаТЧ.Цена = 0, СтрокаТЧ.Сумма, СтрокаТЧ.Цена);
			СтрокаПозицииЧека.Сумма 		= СтрокаТЧ.Сумма;
			СтрокаПозицииЧека.СуммаСкидок 	= СтрокаТЧ.СуммаАвтоматическойСкидки
														+ СтрокаТЧ.СуммаРучнойСкидки
														+ СтрокаТЧ.СуммаСкидкиОплатыБонусом;
			
			Если Окр(СтрокаПозицииЧека.Цена * СтрокаПозицииЧека.Количество, 2, 1) = СтрокаПозицииЧека.Сумма Тогда
				СтрокаПозицииЧека.ЦенаСоСкидками = СтрокаПозицииЧека.Цена;
			Иначе
				СтрокаПозицииЧека.ЦенаСоСкидками = Окр(СтрокаПозицииЧека.Сумма / СтрокаПозицииЧека.Количество, 2, 1);
			КонецЕсли;
			СтрокаПозицииЧека.НомерСекции = НомерСекции;
			
			СтрокаПозицииЧека.СуммаНДС = СтрокаТЧ.СуммаНДС;
			СтрокаПозицииЧека.КодВидаНоменклатурнойКлассификации = СтрокаТЧ.КодВидаНоменклатурнойКлассификации;
			СтрокаПозицииЧека.Штрихкод = Штрихкод;
			//Вик 2021_06_17
			СтрокаПозицииЧека.Штрихкод	=	СтрЗаменить(СтрокаПозицииЧека.Штрихкод,"(01)","");
			СтрокаПозицииЧека.Штрихкод	=	СтрЗаменить(СтрокаПозицииЧека.Штрихкод,"(21)","");  
			//КонецВик
			Если РеквизитыДокумента.ОперацияСДенежнымиСредствами Тогда
				// Для значения тега 1214 равное 1,2,3,7. Значения штрихкодов для заполнения тега 1162 не передаются
				// (Исправлена ошибка 00-00276278). 
				СтрокаПозицииЧека.Штрихкод = "";
				
				СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
			Иначе
				СтрокаПозицииЧека.ПризнакПредметаРасчета = СтрокаТЧ.ПризнакПредметаРасчета;
				// Указывается значение реквизита "код товара", тег 1162.    
				// В соответвии с приказом Федеральной налоговой службы от 29.08.2019 № ММВ-7-20/434@ "О внесении изменений в приложение № 2
				// к приказу Федеральной налоговой службы от 21.03.2017 № ММВ-7-20/229@" (Зарегистрирован 25.12.2019 № 56978).
				ШтрихкодДляРазбора = ?(ЗначениеЗаполнено(СтрокаТЧ.КодВидаНоменклатурнойКлассификации), СтрокаТЧ.КодВидаНоменклатурнойКлассификации, СтрокаТЧ.Штрихкод);
				//Вик 2021_06_02
				ШтрихкодДляРазбора	=	СтрЗаменить(ШтрихкодДляРазбора,"(01)","");
				ШтрихкодДляРазбора	=	СтрЗаменить(ШтрихкодДляРазбора,"(21)","");
				//КонецВик

				ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьШтриховойКодТовара(ШтрихкодДляРазбора);
					
				Если ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) И СтрокаТЧ.ОбувнаяПродукция Тогда
					Если ДанныеМаркировки.Разобран Тогда
						// Необходимо указать ТипМаркировки, GTIN, серийный номер для обеспечения совместимости (драйвера стандарта 2.5). 
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ТипМаркировки = Перечисления.ТипыМаркировкиККТ.ОбувныеТовары;
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ГлобальныйИдентификаторТорговойЕдиницы = ДанныеМаркировки.GTIN;
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.СерийныйНомер = ДанныеМаркировки.СерийныйНомер;
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = ДанныеМаркировки.РеквизитКодаТовара;
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) И СтрокаТЧ.ТабачнаяПродукция Тогда 
					Если НЕ (ДанныеМаркировки.ТипИдентификатораТовара = Перечисления.ТипыИдентификаторовТовараККТ.КодТовараВФорматеEAN8 Или
						ДанныеМаркировки.ТипИдентификатораТовара = Перечисления.ТипыИдентификаторовТовараККТ.КодТовараВФорматеEAN13) Тогда
						
						//Вик 2021_05_14
						//ГлобальныйИдентификаторТорговойЕдиницы = Лев(СтрокаПозицииЧека.Штрихкод, 14);
						//СерийныйНомер = Сред(СтрокаПозицииЧека.Штрихкод, 15, 7);
						
						НужныйШК	=	СтрокаПозицииЧека.Штрихкод;
						НужныйШК	=	СтрЗаменить(НужныйШК,"(01)","");
						НужныйШК	=	СтрЗаменить(НужныйШК,"(21)","");

						ГлобальныйИдентификаторТорговойЕдиницы	 = Лев(НужныйШК, 14);
						СерийныйНомер							 = Сред(НужныйШК, 15, 7);
						//КонецВик 	
						
						// Необходимо указать ТипМаркировки, GTIN, серийный номер для обеспечения совместимости (драйвера стандарта 2.5). 
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ТипМаркировки = Перечисления.ТипыМаркировкиККТ.ТабачнаяПродукция;
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ГлобальныйИдентификаторТорговойЕдиницы = ГлобальныйИдентификаторТорговойЕдиницы; 
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.СерийныйНомер = СерийныйНомер; 
						КодТовара = МенеджерОборудованияМаркировкаКлиентСервер.СформироватьКодТовараДляDataMatrixGS1(ГлобальныйИдентификаторТорговойЕдиницы, СерийныйНомер);
						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = КодТовара.РеквизитКодаТовара;
					КонецЕсли;
				Иначе
					СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = ДанныеМаркировки.РеквизитКодаТовара;
				КонецЕсли;
			КонецЕсли;
			
			ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
			
			НуженПересчетСуммыНДС = Истина;
			ДатаКорректировкиСтавкиНДС = РеквизитыДокумента.Дата;
			Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
				ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
				Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда  //Возврат товара за 2018 год.
					ДатаКорректировкиСтавкиНДС = ЧекПродажи.Дата;
					НуженПересчетСуммыНДС = Ложь;
				КонецЕсли;
			КонецЕсли;
			СтрокаТЧ.СтавкаНДС = УчетНДС.СкорректироватьСтавкуНДС(СтрокаТЧ.СтавкаНДС, ДатаКорректировкиСтавкиНДС);
			//Вик 2021_03_16
			Попытка
				Если РеквизитыДокумента.СистемаНалогообложения	=	Перечисления.ТипыСистемНалогообложенияККТ.ОСН тогда
					СтрокаПозицииЧека.СтавкаНДС	=	Перечисления.СтавкиНДС.НДС20;
					СтрокаТЧ.СтавкаНДС			=	Перечисления.СтавкиНДС.НДС20;
					//СтрокаПозицииЧека.СуммаНДС	=	Окр(СтрокаПозицииЧека.Сумма*20/120,2);
				КонецЕсли;	
			Исключение
			КонецПопытки;
			//КонецВик

			Если СтрокаТЧ.ЭтоПодарочныйСертификат Тогда
				СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс;
				ЭтоАванс = Истина;
				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, ЭтоАванс);
			Иначе
				СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, ЭтоАванс);
			КонецЕсли;
			
			Если НуженПересчетСуммыНДС Тогда
				Если СтрокаТЧ.НДСПоСтрочно Или СтрокаТЧ.ПродукцияГИСМ Тогда
					ТекПроцентНДС = ОбработкаТабличнойЧастиТоварыСерверПовтИсп.СтавкаНДСЧислом(СтрокаТЧ.СтавкаНДС);
					СтрокаПозицииЧека.СуммаНДС = ОбработкаТабличнойЧастиТоварыКлиентСервер.СуммаНДСПоСтрочно(СтрокаПозицииЧека.Сумма, СтрокаТЧ.КоличествоУпаковок, ТекПроцентНДС);
				Иначе
					СтрокаПозицииЧека.СуммаНДС = Окр(ОбработкаТабличнойЧастиТоварыСервер.СуммаНДС(СтрокаПозицииЧека.Сумма, СтрокаТЧ.СтавкаНДС), 2);
				КонецЕсли;
			КонецЕсли;
			
			Если ИспользуетсяКомиссионнаяТорговля Тогда
				Если СтрокаТЧ.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
					Если ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
						Если СтрокаТЧ.Договор.ПризнакАгента = Перечисления.ПризнакиАгента.Комиссионер Тогда
								СтрокаПозицииЧека.ПризнакАгентаПоПредметуРасчета = Перечисления.ПризнакиАгента.Комиссионер;
								СтрокаПозицииЧека.ДанныеАгента.ПлатежныйАгент.Телефон = СтрокаТЧ.Договор.ТелефонПоставщика;
								СтрокаПозицииЧека.ДанныеПоставщика.ИНН                = СтрокаТЧ.Договор.ИННПоставщикаУслуг;
								СтрокаПозицииЧека.ДанныеПоставщика.Телефон            = СтрокаТЧ.Договор.ТелефонПоставщика;
								СтрокаПозицииЧека.ДанныеПоставщика.Наименование       = СтрокаТЧ.Поставщик.Наименование; 
								
								УчетНДСУКомитента = ПодключаемоеОборудованиеРТ.КэшируемыеСНО(СтрокаТЧ.Договор, КэшСНО);
								ПодключаемоеОборудованиеРТ.ПерезаполнитьНДСКомитента(СтрокаПозицииЧека, 
																					 СтрокаТЧ.Номенклатура, 
																					 УчетНДСУКомитента, 
																					 ЭтоАванс);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ИспользуетсяУчетИмпортныхТоваров Тогда
				СтрокаПозицииЧека.КодСтраныПроисхожденияТовара = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.НомерГТД.СтранаПроисхождения, "Код");
				СтрокаПозицииЧека.НомерТаможеннойДекларации    = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.НомерГТД, "РегистрационныйНомерДекларации")
			КонецЕсли;
			
			СтрокаПозицииЧека.ЕдиницаИзмерения = СтрокаТЧ.ЕдиницаИзмеренияПредметаРасчета;
			СтрокаПозицииЧека.Вставить("ПараметрыАлкогольнойПродукции", ПараметрыАлкогольнойПродукции);
			СтрокаПозицииЧека.НомерСтрокиТовара = СтрокаТЧ.НомерСтроки;
			

			Если СтрокаТЧ.НДСПоСтрочно Или СтрокаТЧ.ПродукцияГИСМ Тогда
				
				Если РеквизитыДокумента.ОперацияСДенежнымиСредствами Тогда
					МассивРазвернутыхСтрок = РазвернутьСтрокуПозицииЧека(СтрокаПозицииЧека);
				Иначе
					МассивРазвернутыхСтрок = РазвернутьСтрокуПозицииЧека(СтрокаПозицииЧека, МассивСтрокГосИС);
				КонецЕсли;
				
				Для Каждого СтрокаМассива Из МассивРазвернутыхСтрок Цикл
					ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаМассива);
				КонецЦикла;
			Иначе
				ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&Вместо("ПодготовитьДанныеДляПробитияЧека")
Функция ТБКПодготовитьДанныеДляПробитияЧека(ДокументОбъект, ДокументСсылка, ТранспортныйМодуль, ДанныеГосИСДостаточны, ЕстьАлкогольнаяПродукцияЕГАИС, НомерЧека, ОсобыйВыводСообщения, ТекстПолногоСообщения)
	ЕстьАлкогольнаяПродукцияЕГАИС = НЕ ДокументОбъект.ОперацияСДенежнымиСредствами И ИнтеграцияЕГАИСРТ.ЕстьАлкогольнаяПродукцияЕГАИС(ДокументОбъект.Товары);
	
	ИспользуетсяКомиссионнаяТорговля = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользуетсяУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	
	// Товары
	ТаблицаСоответствияТоваровСекциям = Новый Соответствие();
	ПодключаемоеОборудованиеРТВызовСервера.ЗаполнитьСоответствиеСекцийДляТабличнойЧастиПоКассеККМ(ДокументОбъект.КассаККМ, ДокументОбъект.Товары, ТаблицаСоответствияТоваровСекциям);
	
	СтруктураТаблиц = ПродажиСервер.ДанныеДляПробитияЧекаККМ(ДокументОбъект, ДанныеГосИСДостаточны, ОсобыйВыводСообщения, ТекстПолногоСообщения, ЕстьАлкогольнаяПродукцияЕГАИС);
	
	ТаблицаТоваровЧека  = СтруктураТаблиц.ТаблицаТоваровЧека;
	ТаблицаТоваровГосИС = СтруктураТаблиц.ТаблицаТоваровГосИС;
	
	Если НЕ ДанныеГосИСДостаточны Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	// Подготовка таблицы товаров
	МассивТоваров = Новый Массив;
	МассивТоваровЕГАИС = Новый Массив;
	
	ОбщиеПараметры = МенеджерОборудованияКлиентСервер.ПараметрыОперацииФискализацииЧека();
	
	// Общие параметры чека
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ВидОперации");
	СтруктураРеквизитов.Вставить("КассаККМ");
	СтруктураРеквизитов.Вставить("Магазин");
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Контрагент");
	СтруктураРеквизитов.Вставить("Дата");
	СтруктураРеквизитов.Вставить("ЧекККМПродажа");
	СтруктураРеквизитов.Вставить("Телефон");
	СтруктураРеквизитов.Вставить("АдресЭП");
	СтруктураРеквизитов.Вставить("Ответственный");
	СтруктураРеквизитов.Вставить("ДоговорКонтрагента");
	СтруктураРеквизитов.Вставить("СистемаНалогообложения");
	СтруктураРеквизитов.Вставить("ЗаказПокупателя");
	СтруктураРеквизитов.Вставить("СуммаДокумента");
	СтруктураРеквизитов.Вставить("ОперацияСДенежнымиСредствами");
	СтруктураРеквизитов.Вставить("ДокументРасчета");
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("НаименованиеПолное");
	СтруктураРеквизитов.Вставить("ИНН");
	СтруктураРеквизитов.Вставить("КПП");
	РеквизитыОрганизация = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.Организация, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекSMSПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("ЭлектронныйЧекEmailПередаютсяПрограммой1С");
	СтруктураРеквизитов.Вставить("ПодключаемоеОборудование");
	СтруктураРеквизитов.Вставить("СпособФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.СпособФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ДопустимоеРасхождениеФорматноЛогическогоКонтроля", "ПодключаемоеОборудование.ДопустимоеРасхождениеФорматноЛогическогоКонтроля");
	СтруктураРеквизитов.Вставить("ТипОборудования", "ПодключаемоеОборудование.ТипОборудования");
	СтруктураРеквизитов.Вставить("Код");
	СтруктураРеквизитов.Вставить("ТипОборудования", "ПодключаемоеОборудование.ТипОборудования");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, СтруктураРеквизитов);
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Наименование");
	СтруктураРеквизитов.Вставить("ИНН");
	РеквизитыКассир = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.Ответственный.ФизическоеЛицо, СтруктураРеквизитов);
	
	ПодключаемоеОборудованиеРТ.ЗаполнитьДанныеПокупателя(ОбщиеПараметры, РеквизитыДокумента);
	
	ОбщиеПараметры.СистемаНалогообложения = РеквизитыДокумента.СистемаНалогообложения;
	
	ОбщиеПараметры.ТипРасчета = ?(РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат,
								  Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств,
								  Перечисления.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств);
	
	ОбщиеПараметры.ДокументОснование = ДокументСсылка;
	
	ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговора(ОбщиеПараметры, 
																	РеквизитыДокумента.ДоговорКонтрагента,
																	РеквизитыДокумента.СуммаДокумента);
	Если РеквизитыКассыККМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
		ЗаполнитьОплатуПриПробитииЧекаККМНаККТ(ДокументОбъект, ОбщиеПараметры);
	Иначе
		ЗаполнитьОплатуПриПробитииЧекаККМ(ДокументОбъект, ОбщиеПараметры);
	КонецЕсли;
	
	ДополнитьТоварамиПараметрыПриПробитииЧека(РеквизитыДокумента,
											  ОбщиеПараметры, 
											  ТаблицаТоваровЧека, 
											  ТаблицаТоваровГосИС, 
											  ТаблицаСоответствияТоваровСекциям,
											  ПризнакСпособаРасчета(ДокументСсылка),
											  ИспользуетсяКомиссионнаяТорговля,
											  ИспользуетсяУчетИмпортныхТоваров);
	
	ОбщиеПараметры.Электронно = Ложь;
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.Телефон) Тогда
		Если РеквизитыКассыККМ.ЭлектронныйЧекSMSПередаютсяПрограммой1С Тогда
			ОбщиеПараметры.Отправляет1СSMS = Истина;
		КонецЕсли;
		Телефон = РеквизитыДокумента.Телефон;
		Если СтрНайти(Телефон, "+7") = 1 ИЛИ (СтрНайти(Телефон, "8") = 1 И СтрДлина(Телефон) = 11) Тогда
			ОбщиеПараметры.ПокупательНомер = Телефон;
		Иначе
			ОбщиеПараметры.ПокупательНомер = "+7" + Телефон;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РеквизитыДокумента.АдресЭП) Тогда
		Если РеквизитыКассыККМ.ЭлектронныйЧекEmailПередаютсяПрограммой1С Тогда
			ОбщиеПараметры.Отправляет1СEmail = Истина;
			СистемнаяУчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
			Если ЗначениеЗаполнено(СистемнаяУчетнаяЗапись) Тогда
				ОбщиеПараметры.ОтправительEmail = СистемнаяУчетнаяЗапись.АдресЭлектроннойПочты;
			КонецЕсли;
		КонецЕсли;
		ОбщиеПараметры.ПокупательEmail = РеквизитыДокумента.АдресЭП;
	КонецЕсли;
	
	// Параметры необходимые для чека ЕНВД на принтере чеков
	ОбщиеПараметры.Кассир          = РеквизитыКассир.Наименование;
	ОбщиеПараметры.Вставить("ИмяКассира", РеквизитыКассир.Наименование);
	ОбщиеПараметры.КассирИНН       = РеквизитыКассир.ИНН;
	
	ОбщиеПараметры.Организация    = РеквизитыДокумента.Организация;
	ОбщиеПараметры.ОрганизацияНазвание = ?(ПустаяСтрока(РеквизитыОрганизация.НаименованиеПолное), РеквизитыОрганизация.Наименование, РеквизитыОрганизация.НаименованиеПолное);
	ОбщиеПараметры.ОрганизацияИНН = РеквизитыОрганизация.ИНН;
	ОбщиеПараметры.ОрганизацияКПП = РеквизитыОрганизация.КПП;
	ОбщиеПараметры.НомерКассы     = РеквизитыКассыККМ.Код;
	ОбщиеПараметры.НомерЧека      = НомерЧека;
	
	ОбщиеПараметры.НомерСмены = 1;
	
	СведенияООрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(РеквизитыДокумента.Организация, РеквизитыДокумента.Дата);
	АдресМагазина = ОбщегоНазначенияРТ.АдресМагазина(РеквизитыДокумента.Магазин);
	
	СерийныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыКассыККМ.ПодключаемоеОборудование, "СерийныйНомер");
	Если НЕ ЗначениеЗаполнено(СерийныйНомер) Тогда
		СерийныйНомер = "1";
	КонецЕсли;
	
	ОбщиеПараметры.ТорговыйОбъект = РеквизитыДокумента.Магазин;
	ОбщиеПараметры.АдресРасчетов = АдресМагазина;
	//Марк 2024-08-26 прозьба кольминой
	//ОбщиеПараметры.МестоРасчетов = Строка(РеквизитыДокумента.Магазин) + " " + АдресМагазина;
	ОбщиеПараметры.МестоРасчетов = "Магазин";
	//КоенцМарк
	ОбщиеПараметры.АдресМагазина = АдресМагазина;
	ОбщиеПараметры.НаименованиеМагазина = Строка(РеквизитыДокумента.Магазин);
	ОбщиеПараметры.СерийныйНомер = СерийныйНомер;
	
	ОбщиеПараметры.КассаККМ = ДокументОбъект.КассаККМ;
	Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		ОбщиеПараметры.ШаблонЧека = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.КассаККМ, "ШаблонЧекаККМВозврат");
	Иначе
		ОбщиеПараметры.ШаблонЧека = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.КассаККМ, "ШаблонЧекаККМ");
	КонецЕсли;
	
	Если РеквизитыКассыККМ.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.ККТ Тогда
		ПодключаемоеОборудованиеРТ.ДобавитьВнереализационнуюПрибыль(ДокументСсылка, ОбщиеПараметры);
		
		// При необходимости будет проведен формато-логический контроль
		
		ОбщиеПараметры.СпособФорматноЛогическогоКонтроля = РеквизитыКассыККМ.СпособФорматноЛогическогоКонтроля;
		ОбщиеПараметры.ДопустимоеРасхождениеФорматноЛогическогоКонтроля = РеквизитыКассыККМ.ДопустимоеРасхождениеФорматноЛогическогоКонтроля;
		Если ФорматноЛогическийКонтрольКлиентСервер.НуженФорматноЛогическийКонтроль(ОбщиеПараметры) Тогда
			ФорматноЛогическийКонтрольКлиентСервер.ПровестиФорматноЛогическийКонтроль(ОбщиеПараметры);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОбщиеПараметры;

КонецФункции


Процедура ИзменитьНаименованиеТовараВЧеке(НаименованиеТовара)
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Электронное устройство","Ароматическое средство");				
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Жидкость","Ароматическое средство");
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Картридж","Ароматическое средство");	
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Эл.антитабачное  уст-во","Ароматическое средство");	
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сменный  картридж","Ароматическое средство");	
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сменные  капсулы","Ароматическое средство");	
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"30 мл","10 мл");				
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"30мл","10 мл");				
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"30 ml","10 мл");				
	НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"30ml","10 мл");	
КонецПроцедуры
