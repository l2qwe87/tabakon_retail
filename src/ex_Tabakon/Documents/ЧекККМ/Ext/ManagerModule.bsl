
&Вместо("ДополнитьТоварамиПараметрыПриПробитииЧека")
Процедура ТБКДополнитьТоварамиПараметрыПриПробитииЧека(РеквизитыДокумента, ОбщиеПараметры, ДанныеДляПробитияЧекаККМ, ТаблицаСоответствияТоваровСекциям, ПризнакСпособаРасчета)
	ИспользуетсяКомиссионнаяТорговля = ПолучитьФункциональнуюОпцию("ИспользоватьКомиссионнуюТорговлю");
	ИспользуетсяУчетИмпортныхТоваров = ПолучитьФункциональнуюОпцию("ИспользоватьУчетИмпортныхТоваров");
	ИспользоватьАгентскиеПлатежиИРазделениеВыручки =
		ПолучитьФункциональнуюОпцию("ИспользоватьАгентскиеПлатежиИРазделениеВыручки");
	ИспользоватьУчетТоваровФСС = ПолучитьФункциональнуюОпцию("ИспользоватьУчетТоваровФСС");
	
	ТаблицаТоваровЧека  = ДанныеДляПробитияЧекаККМ.ТаблицаТоваровЧека;
	ТаблицаТоваровГосИС = ДанныеДляПробитияЧекаККМ.ТаблицаТоваровГосИС;
	
	ЭтоАванс = ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс
		ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаПолная
		ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаЧастичная;
	
	Если ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс Тогда
		
		СтрокаПозицииЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека();
		
		НаименованиеПозиции = СтрШаблон(НСтр("ru = 'Оплата от: %1'"), СокрЛП(РеквизитыДокумента.Контрагент));
		Если ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств Тогда
			НаименованиеПозиции = СтрШаблон(НСтр("ru = 'Возврат от: %1'"), СокрЛП(РеквизитыДокумента.Контрагент));
		КонецЕсли;
		
		СтрокаПозицииЧека.Наименование = НаименованиеПозиции;
		СтрокаПозицииЧека.Количество = 1;
		СтрокаПозицииЧека.Цена = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.ЦенаСоСкидками = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.Сумма = РеквизитыДокумента.СуммаДокумента;
		СтрокаПозицииЧека.НомерСекции = 2;
		
		ОсвобожденОтНДС = Ложь;
		СНООрганизации = РегистрыСведений.ПрименениеСистемНалогообложения.СистемаНалогообложенияОрганизации(РеквизитыДокумента.Организация);
		Если СНООрганизации <> Неопределено Тогда
			ОсвобожденОтНДС = СНООрганизации.ОсвобожденОтНДС;
		КонецЕсли;
		
		Если ОбщиеПараметры.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН 
			И НЕ ОсвобожденОтНДС Тогда
			
			Если РеквизитыДокумента.Дата > УчетНДС.ДатаПереходногоПериода() Тогда
				Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
					ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
					Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда
						// Возврат аванса за 2018 год.
						СтрокаПозицииЧека.СтавкаНДС = 118;
					Иначе 
						СтрокаПозицииЧека.СтавкаНДС = 120;
					КонецЕсли;
				Иначе 
					СтрокаПозицииЧека.СтавкаНДС = 120;
				КонецЕсли;
			Иначе 
				СтрокаПозицииЧека.СтавкаНДС = 118;
			КонецЕсли;
			
		Иначе
			СтрокаПозицииЧека.СтавкаНДС = Неопределено;
		КонецЕсли;
		
		СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
		СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
		
		ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
		
		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
		
	Иначе
		
		КэшСНО = Новый Соответствие;
		Для Каждого СтрокаТЧ Из ТаблицаТоваровЧека Цикл
			
			СтрокаТаблицыТоваров = Новый СписокЗначений();
			НаименованиеТовара = СтрШаблон(НСтр("ru = '%1%2'"),
				СокрЛП(СтрокаТЧ.Номенклатура),
				?(ЗначениеЗаполнено(СтрокаТЧ.Характеристика), " " + "(" + СокрЛП(СтрокаТЧ.Характеристика) + ")", ""));
				
			//Вик 2021_07_01
			Если ТекущаяДата() > '20230601' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 119 тогда
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
				
			ИначеЕсли ТекущаяДата() > '20230401' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 117 тогда
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
			КонецЕсли;
			//КонецВик


			НомерСекции = ТаблицаСоответствияТоваровСекциям.Получить(СтрокаТЧ.НомерСтроки);
			
			МассивСтрокГосИС = Новый Массив;
			Если СтрокаТЧ.ПродукцияГИСМ Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
				СтруктураПоиска.Вставить("Характеристика", СтрокаТЧ.Характеристика);
				
				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(СтруктураПоиска);
			Иначе
				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи));
			КонецЕсли;
			
			СтрокаПозицииЧека = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыФискальнойСтрокиЧека();
			СтрокаПозицииЧека.Наименование = НаименованиеТовара;
			СтрокаПозицииЧека.Количество = ?(СтрокаТЧ.КоличествоУпаковок = 0, 1, СтрокаТЧ.КоличествоУпаковок);
			СтрокаПозицииЧека.Цена = ?(СтрокаТЧ.Цена = 0, СтрокаТЧ.Сумма, СтрокаТЧ.Цена);
			СтрокаПозицииЧека.Сумма = СтрокаТЧ.Сумма;
			СтрокаПозицииЧека.СуммаСкидок = СтрокаТЧ.СуммаСкидок;
			
			СтрокаПозицииЧека.Вставить("РезультатРаспределенияШтрихкодов");
			
			Если Окр(СтрокаПозицииЧека.Цена * СтрокаПозицииЧека.Количество, 2, 1) = СтрокаПозицииЧека.Сумма Тогда
				СтрокаПозицииЧека.ЦенаСоСкидками = СтрокаПозицииЧека.Цена;
			Иначе
				СтрокаПозицииЧека.ЦенаСоСкидками = Окр(СтрокаПозицииЧека.Сумма / СтрокаПозицииЧека.Количество, 2, 1);
			КонецЕсли;
			СтрокаПозицииЧека.НомерСекции = НомерСекции;
			
			СтрокаПозицииЧека.СуммаНДС = СтрокаТЧ.СуммаНДС;
			
			Если ИспользоватьАгентскиеПлатежиИРазделениеВыручки Тогда
				ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(
					ОбщиеПараметры,
					СтрокаПозицииЧека,
					СтрокаТЧ);
			КонецЕсли;
			
			НуженПересчетСуммыНДС = Не ОбщиеПараметры.РабочееМестоКассира;
			ДатаКорректировкиСтавкиНДС = РеквизитыДокумента.Дата;
			Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
				ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
				Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда
					//Возврат товара за 2018 год.
					ДатаКорректировкиСтавкиНДС = ЧекПродажи.Дата;
					НуженПересчетСуммыНДС = Ложь;
				КонецЕсли;
			КонецЕсли;
			СтрокаТЧ.СтавкаНДС = УчетНДС.СкорректироватьСтавкуНДС(СтрокаТЧ.СтавкаНДС, ДатаКорректировкиСтавкиНДС);
			//Вик 2021_03_16
			Попытка
				Если РеквизитыДокумента.СистемаНалогообложения	=	Перечисления.ТипыСистемНалогообложенияККТ.ОСН тогда
					СтрокаПозицииЧека.СтавкаНДС	=	Перечисления.СтавкиНДС.НДС20;
					СтрокаТЧ.СтавкаНДС			=	Перечисления.СтавкиНДС.НДС20;
					//СтрокаПозицииЧека.СуммаНДС	=	Окр(СтрокаПозицииЧека.Сумма*20/120,2);
				КонецЕсли;	
			Исключение
			КонецПопытки;
			//КонецВик
			
			Если СтрокаТЧ.ЭтоПодарочныйСертификат Тогда
				СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс;
				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, Истина);
			Иначе
				СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, ЭтоАванс);
			КонецЕсли;
			
			Если ИспользуетсяУчетИмпортныхТоваров Тогда
				СтрокаПозицииЧека.КодСтраныПроисхожденияТовара = СтрокаТЧ.КодСтраныПроисхождения;
				СтрокаПозицииЧека.НомерТаможеннойДекларации = СтрокаТЧ.РегистрационныйНомерДекларации;
			КонецЕсли;
			
			СтрокаПозицииЧека.КодЕдиницыИзмерения = СтрокаТЧ.ЕдиницаИзмерения.Код;
			СтрокаПозицииЧека.ЕдиницаИзмерения = СтрокаТЧ.ЕдиницаИзмеренияПредметаРасчета;
			СтрокаПозицииЧека.НомерСтрокиТовара = СтрокаТЧ.НомерСтроки;
			
			СтрокаПозицииЧека.КодВидаНоменклатурнойКлассификации = СтрокаТЧ.КодВидаНоменклатурнойКлассификации;
			
			Если ИспользоватьУчетТоваровФСС И Не ПустаяСтрока(СтрокаТЧ.КодТовараТРУ) Тогда
				СтрокаПозицииЧека.NTIN = СтрокаТЧ.КодТовараТРУ; // Для тега 1162 и 1163
				Если ОбщиеПараметры.ТипПлатежнойСистемы = Перечисления.ТипыПлатежнойСистемыККТ.СертификатНСПК
					И ОбщиеПараметры.Электронно Тогда
					СтрокаПозицииЧека.Наименование = СтрокаПозицииЧека.Наименование + Символы.ПС +
						НСтр("ru='(Корзина №: '") + ОбщиеПараметры.ИдентификаторОплатыПлатежнойСистемы + НСтр("ru=')'");
				КонецЕсли;
			КонецЕсли;
			
			Если РеквизитыДокумента.ОперацияСДенежнымиСредствами Тогда
				СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
			Иначе
				СтрокаПозицииЧека.ПризнакПредметаРасчета = СтрокаТЧ.ПризнакПредметаРасчета;
				
				Если СтрокаТЧ.АлкогольнаяПродукция И СтрокаПозицииЧека.Количество > 1 И Не СтрокаТЧ.ПродаетсяВРозлив Тогда
					ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьШтриховойКодТовара(СтрокаТЧ.Штрихкод);
					Если ДанныеМаркировки.Разобран Тогда
						СтрокаПозицииЧека.Штрихкод = ДанныеМаркировки.EAN;
					КонецЕсли;
				Иначе
					СтрокаПозицииЧека.Штрихкод = СтрокаТЧ.Штрихкод;
				КонецЕсли;
				
				ЗаполнитьСтрокуПоДаннымРазбораШтрихкода(СтрокаПозицииЧека, СтрокаТЧ);
				
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТЧ, "РезультатРаспределенияШтрихкодов")
					И ЗначениеЗаполнено(СтрокаТЧ.РезультатРаспределенияШтрихкодов) Тогда
					СтрокаПозицииЧека.РезультатРаспределенияШтрихкодов = СтрокаТЧ.РезультатРаспределенияШтрихкодов;
					
					ПолныйКодМаркировки = СтрокаТЧ.РезультатРаспределенияШтрихкодов.ПолныйКодМаркировки;
					Если ЗначениеЗаполнено(ПолныйКодМаркировки) Тогда
						Если ОбщегоНазначенияРМК.ПризнакИспользованияКМПоНоменклатуре(СтрокаТЧ.Номенклатура) Тогда
							СтрокаПозицииЧека.ШтрихкодBase64 = ПолныйКодМаркировки;
							СтрокаПозицииЧека.КонтрольнаяМарка = ПолныйКодМаркировки;
						КонецЕсли;
					КонецЕсли;
					
					Если СтрокаТЧ.РезультатРаспределенияШтрихкодов.ЧастичноеВыбытие
						И Не СтрокаТЧ.ВидПродукцииИС = Перечисления.ВидыПродукцииИС.Пиво Тогда
						
						СтрокаПозицииЧека.ДробноеКоличество.Числитель   = СтрокаТЧ.РезультатРаспределенияШтрихкодов.Количество;
						СтрокаПозицииЧека.ДробноеКоличество.Знаменатель = СтрокаТЧ.РезультатРаспределенияШтрихкодов.ЕмкостьПотребительскойУпаковки;
						
						Если СтрокаТЧ.Количество > 1 Тогда
							
							Упаковка = СтрокаТЧ.Упаковка;
							Если НЕ ЗначениеЗаполнено(Упаковка) Тогда
								Упаковка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.Номенклатура, "ЕдиницаИзмерения");
							КонецЕсли;
							
							УпаковкаНаименование = "ед";
							Если ЗначениеЗаполнено(Упаковка) Тогда
								УпаковкаНаименование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Упаковка, "Наименование");
							КонецЕсли;
							УпаковкаНаименование = УпаковкаНаименование + ".";
							
							Валюта = ОбщегоНазначенияРТКлиентСервер.Валюта();
							
							ОписаниеЧастичногоВыбытия = СтрШаблон(
								НСтр("ru = ' (%1 %2, цена: %3 %4/%5)'"),
								СтрокаТЧ.Количество,
								УпаковкаНаименование,
								СтрокаТЧ.Цена,
								Валюта,
								УпаковкаНаименование);
							
							СтрокаПозицииЧека.Наименование = СтрокаПозицииЧека.Наименование
								+ ОписаниеЧастичногоВыбытия;
						КонецЕсли;
						
					КонецЕсли;
					
					Если ЗначениеЗаполнено(СтрокаТЧ.РезультатРаспределенияШтрихкодов.РазрешительныйРежимИдентификаторЗапросаГИСМТ) Тогда
						СтрокаПозицииЧека.ЗапросПроверкиКода.ИдентификаторЗапроса
							= СтрокаТЧ.РезультатРаспределенияШтрихкодов.РазрешительныйРежимИдентификаторЗапросаГИСМТ;
						СтрокаПозицииЧека.ЗапросПроверкиКода.ВременнаяМетка
							= СтрокаТЧ.РезультатРаспределенияШтрихкодов.РазрешительныйРежимДатаЗапросаГИСМТ;
					КонецЕсли;
					
					ПризнакиПодакцизногоТовара = Новый Массив;
					ПризнакиПодакцизногоТовара.Добавить(Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТовар);
					ПризнакиПодакцизногоТовара.Добавить(Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТоварМаркируемыйСИНеИмеющийКМ);
					ПризнакиПодакцизногоТовара.Добавить(Перечисления.ПризнакиПредметаРасчета.ПодакцизныйТоварМаркируемыйСИИмеющийКМ);
					
					Если ЗначениеЗаполнено(РеквизитыДокумента.Контрагент)
						И ПризнакиПодакцизногоТовара.Найти(СтрокаПозицииЧека.ПризнакПредметаРасчета) <> Неопределено Тогда
						ТипКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыДокумента.Контрагент, "ЮрФизЛицо");
						
						Если ТипКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицо
							ИЛИ ТипКонтрагента = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
							СтрокаПозицииЧека.СуммаАкциза = 0;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			НеобходимоРазбитьСтроку = СтрокаТЧ.ПродукцияГИСМ;
			
			Если ИспользуетсяКомиссионнаяТорговля Тогда
				Если СтрокаТЧ.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
					Если ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
						Если СтрокаТЧ.Договор.ПризнакАгента = Перечисления.ПризнакиАгента.Комиссионер Тогда
								СтрокаПозицииЧека.ПризнакАгентаПоПредметуРасчета = Перечисления.ПризнакиАгента.Комиссионер;
								СтрокаПозицииЧека.ДанныеПоставщика.ИНН = СтрокаТЧ.ИННПоставщикаУслуг;
								СтрокаПозицииЧека.ДанныеПоставщика.Телефон = СтрокаТЧ.ТелефонПоставщика;
								СтрокаПозицииЧека.ДанныеПоставщика.Наименование = СокрЛП(СтрокаТЧ.Поставщик);
								
								УчетНДСУКомитента = ПодключаемоеОборудованиеРТ.КэшируемыеСНО(СтрокаТЧ.Договор, КэшСНО);
								ПодключаемоеОборудованиеРТ.ПерезаполнитьНДСКомитента(
									СтрокаПозицииЧека,
									СтрокаТЧ.Номенклатура,
									УчетНДСУКомитента,
									ЭтоАванс);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаПозицииЧека.Сумма =
				?(РеквизитыДокумента.ЦенаВключаетНДС,
					СтрокаПозицииЧека.Сумма,
					СтрокаПозицииЧека.Сумма + СтрокаПозицииЧека.СуммаНДС);
					
			Если НуженПересчетСуммыНДС Тогда
				Если СтрокаТЧ.НДСПоСтрочно Или СтрокаТЧ.ПродукцияГИСМ Тогда
					СтрокаПозицииЧека.СуммаНДС =
						ОбработкаТабличнойЧастиТоварыКлиентСервер.СуммаНДСПоСтрочно(
							СтрокаПозицииЧека.Сумма,
							СтрокаПозицииЧека.Количество,
							СтрокаПозицииЧека.СтавкаНДС);
				Иначе
					СтрокаПозицииЧека.СуммаНДС =
						Окр(ОбработкаТабличнойЧастиТоварыКлиентСервер.СуммаНДС(СтрокаПозицииЧека.Сумма, СтрокаПозицииЧека.СтавкаНДС), 2);
				КонецЕсли;
			КонецЕсли;
			
			Если НеобходимоРазбитьСтроку Тогда
				// Распределение средствами ГОСИС не выполнено.
				РазвернутыеСтроки = РазвернутьСтрокуПозицииЧека(СтрокаПозицииЧека, МассивСтрокГосИС);
				
				Для Каждого РазвернутаяСтрока Из РазвернутыеСтроки Цикл

					Если ИспользоватьУчетТоваровФСС И Не ПустаяСтрока(РазвернутаяСтрока.NTIN) Тогда
						СтрокаТекста = СтрШаблон(НСтр("ru = 'ТРУ (КОД): %1'"), РазвернутаяСтрока.NTIN);
						ТекстоваяСтрокаЧека =
							ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(СтрокаТекста);
						ОбщиеПараметры.ПозицииЧека.Добавить(ТекстоваяСтрокаЧека);
					КонецЕсли;
					ОбщиеПараметры.ПозицииЧека.Добавить(РазвернутаяСтрока);
				КонецЦикла;
			Иначе
				
				
				Если ИспользоватьУчетТоваровФСС И Не ПустаяСтрока(СтрокаПозицииЧека.NTIN) Тогда
					СтрокаТекста = СтрШаблон(НСтр("ru = 'ТРУ (КОД): %1'"), СтрокаПозицииЧека.NTIN);
					ТекстоваяСтрокаЧека =
						ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыТекстовойСтрокиЧека(СтрокаТекста);
					ОбщиеПараметры.ПозицииЧека.Добавить(ТекстоваяСтрокаЧека);
				КонецЕсли;
				ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

//&Вместо("ДополнитьТоварамиПараметрыПриПробитииЧека")
//Процедура ТБКДополнитьТоварамиПараметрыПриПробитииЧека(РеквизитыДокумента, ОбщиеПараметры, ТаблицаТоваровЧека, ТаблицаТоваровГосИС, ТаблицаСоответствияТоваровСекциям, ПризнакСпособаРасчета, ИспользуетсяКомиссионнаяТорговля, ИспользуетсяУчетИмпортныхТоваров)
//	// Вставить содержимое метода.
//	
//	Если ТекущаяДата()<ИнтеграцияМОТПВызовСервера.ДатаОбязательнойМаркировкиТабачнойПродукции() Тогда
//		
//		этоВозврат = (Ложь) ИЛИ (РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат);
//		
//		Для  Каждого СтрокаТЧ из ТаблицаТоваровЧека Цикл
//			Если (этоВозврат) ИЛИ (СтрДлина(СтрокаТЧ.Штрихкод) <= 13) Тогда
//				СтрокаТЧ.ПродукцияГИСМ = ЛОЖЬ;
//			КонецЕсли;
//		КонецЦикла;
//		
//		мУдалить = новый Массив;
//		Для Каждого СтрокаТЧ из ТаблицаТоваровГосИС Цикл
//			Если (этоВозврат) ИЛИ (СтрДлина(СтрокаТЧ.Штрихкод) <= 13) Тогда
//				мУдалить.Добавить(СтрокаТЧ);
//			КонецЕсли; 	
//		КонецЦикла;
//		
//		Для каждого эл из мУдалить Цикл 
//			ТаблицаТоваровГосИС.Удалить(эл);
//		КонецЦикла;
//	КонецЕсли;
//	//ПродолжитьВызов(РеквизитыДокумента, ОбщиеПараметры, ТаблицаТоваровЧека, ТаблицаТоваровГосИС, ТаблицаСоответствияТоваровСекциям, ПризнакСпособаРасчета, ИспользуетсяКомиссионнаяТорговля, ИспользуетсяУчетИмпортныхТоваров);
//		ЭтоАванс = ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс
//			ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаПолная
//			ИЛИ ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.ПредоплатаЧастичная;
//	
//	Если ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс Тогда
//		СтрокаПозицииЧека = МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека(); 
//		Если ОбщиеПараметры.ТипРасчета = Перечисления.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств Тогда
//			СтрокаПозицииЧека.Наименование = НСтр("ru = 'Возврат от:'") + " " + РеквизитыДокумента.Контрагент;
//		Иначе
//			СтрокаПозицииЧека.Наименование = НСтр("ru = 'Оплата от:'") + " " + РеквизитыДокумента.Контрагент;
//		КонецЕсли;
//		СтрокаПозицииЧека.Количество     = 1;
//		СтрокаПозицииЧека.Цена           = РеквизитыДокумента.СуммаДокумента;
//		СтрокаПозицииЧека.ЦенаСоСкидками = РеквизитыДокумента.СуммаДокумента;
//		СтрокаПозицииЧека.Сумма          = РеквизитыДокумента.СуммаДокумента;
//		СтрокаПозицииЧека.НомерСекции    = 2;
//		Если ОбщиеПараметры.СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ОСН Тогда
//			
//			Если РеквизитыДокумента.Дата > УчетНДС.ДатаПереходногоПериода() Тогда
//				Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
//					ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
//					Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда  //Возврат аванса за 2018 год.
//						СтрокаПозицииЧека.СтавкаНДС = 118;
//					Иначе 
//						СтрокаПозицииЧека.СтавкаНДС = 120;
//					КонецЕсли;
//				Иначе 
//					СтрокаПозицииЧека.СтавкаНДС = 120;
//				КонецЕсли;
//			Иначе 
//				СтрокаПозицииЧека.СтавкаНДС = 118;
//			КонецЕсли;
//			
//		Иначе
//			СтрокаПозицииЧека.СтавкаНДС      = Неопределено;
//		КонецЕсли;
//		СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
//		СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
//		
//		ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
//		
//		ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
//		
//	Иначе
//		КэшСНО = Новый Соответствие;
//		
//		Для Каждого СтрокаТЧ Из ТаблицаТоваровЧека Цикл
//			НаименованиеТовара = Строка(СтрокаТЧ.Номенклатура) + ?(ЗначениеЗаполнено(СтрокаТЧ.Характеристика), " (" + Строка(СтрокаТЧ.Характеристика) + ")", "");

//			//Вик 2021_07_01
//			Если ТекущаяДата() > '20230601' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 119 тогда
//				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
//				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
//				
//			ИначеЕсли ТекущаяДата() > '20230401' и Найти(Нрег(НаименованиеТовара),"сигареты") и СтрокаТЧ.Цена < 117 тогда
//				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"Сигареты","");				
//				НаименованиеТовара = СтрЗаменить(НаименованиеТовара,"сигареты","");
//			КонецЕсли;
//			//КонецВик
//			
//			СтрокаТаблицыТоваров = Новый СписокЗначений();
//			НомерСекции = ТаблицаСоответствияТоваровСекциям.Получить(СтрокаТЧ.НомерСтроки);
//			
//			ДанныеАлкогольнойПродукции = Новый Структура;
//			ДанныеАлкогольнойПродукции.Вставить("АлкогольнаяПродукция", СтрокаТЧ.АлкогольнаяПродукция);
//			ДанныеАлкогольнойПродукции.Вставить("Маркируемый", СтрокаТЧ.Маркируемый);
//			ДанныеАлкогольнойПродукции.Вставить("КодАкцизнойМарки", Новый Массив);
//			ДанныеАлкогольнойПродукции.Вставить("ОбъемДАЛ", СтрокаТЧ.ОбъемДАЛ);
//			ДанныеАлкогольнойПродукции.Вставить("Крепость", СтрокаТЧ.Крепость);
//			ДанныеАлкогольнойПродукции.Вставить("КодВидаПродукции", СтрокаТЧ.КодВидаПродукции);
//			
//			МассивСтрокГосИС = Новый Массив;
//			
//			//Вик 2021_6_17
//			Попытка
//				Для каждого СТрокаТаблицаТоваровГосИС из ТаблицаТоваровГосИС цикл
//					СТрокаТаблицаТоваровГосИС.Штрихкод	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.Штрихкод,"(01)","");
//					СТрокаТаблицаТоваровГосИС.Штрихкод	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.Штрихкод,"(21)","");
//					СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки,"(01)","");
//					СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки	=	СтрЗаменить(СТрокаТаблицаТоваровГосИС.КодАкцизнойМарки,"(21)","");
//					
//				КонецЦикла;
//			Исключение
//			КонецПопытки;
//			//КонецВик
//			
//			Если СтрокаТЧ.ПродукцияГИСМ Тогда
//				
//				СтруктураПоиска = Новый Структура;
//				СтруктураПоиска.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
//				СтруктураПоиска.Вставить("Характеристика", СтрокаТЧ.Характеристика);
//				
//				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(СтруктураПоиска);
//			Иначе
//				МассивСтрокГосИС = ТаблицаТоваровГосИС.НайтиСтроки(Новый Структура("КлючСвязи", СтрокаТЧ.КлючСвязи));
//			КонецЕсли;
//				
//			Если СтрокаТЧ.АлкогольнаяПродукция Тогда
//				Для Каждого СтрокаТоварыЕГАИС Из МассивСтрокГосИС Цикл
//					Если НЕ ПустаяСтрока(СтрокаТоварыЕГАИС.КодАкцизнойМарки) Тогда
//						ДанныеАлкогольнойПродукции.КодАкцизнойМарки.Добавить(СтрокаТоварыЕГАИС.КодАкцизнойМарки);
//					КонецЕсли;
//				КонецЦикла;
//			КонецЕсли;
//			
//			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) Тогда
//				Штрихкод = ?(МассивСтрокГосИС.Количество() > 0, МассивСтрокГосИС[0].Штрихкод, "");
//			Иначе
//				Штрихкод = СтрокаТЧ.Штрихкод;
//			КонецЕсли;
//			
//			ПараметрыАлкогольнойПродукции = ИнтеграцияЕГАИСРТ.ПараметрыАлкогольнойПродукции(ДанныеАлкогольнойПродукции);
//			
//			СтрокаПозицииЧека 				= МенеджерОборудованияКлиентСервер.ПараметрыФискальнойСтрокиЧека();
//			СтрокаПозицииЧека.Наименование 	= НаименованиеТовара;
//			СтрокаПозицииЧека.Количество 	= ?(СтрокаТЧ.КоличествоУпаковок = 0, 1, СтрокаТЧ.КоличествоУпаковок);
//			СтрокаПозицииЧека.Цена 			= ?(СтрокаТЧ.Цена = 0, СтрокаТЧ.Сумма, СтрокаТЧ.Цена);
//			СтрокаПозицииЧека.Сумма 		= СтрокаТЧ.Сумма;
//			СтрокаПозицииЧека.СуммаСкидок 	= СтрокаТЧ.СуммаАвтоматическойСкидки
//														+ СтрокаТЧ.СуммаРучнойСкидки
//														+ СтрокаТЧ.СуммаСкидкиОплатыБонусом;
//			
//			Если Окр(СтрокаПозицииЧека.Цена * СтрокаПозицииЧека.Количество, 2, 1) = СтрокаПозицииЧека.Сумма Тогда
//				СтрокаПозицииЧека.ЦенаСоСкидками = СтрокаПозицииЧека.Цена;
//			Иначе
//				СтрокаПозицииЧека.ЦенаСоСкидками = Окр(СтрокаПозицииЧека.Сумма / СтрокаПозицииЧека.Количество, 2, 1);
//			КонецЕсли;
//			СтрокаПозицииЧека.НомерСекции = НомерСекции;
//			
//			СтрокаПозицииЧека.СуммаНДС = СтрокаТЧ.СуммаНДС;
//			СтрокаПозицииЧека.КодВидаНоменклатурнойКлассификации = СтрокаТЧ.КодВидаНоменклатурнойКлассификации;
//			СтрокаПозицииЧека.Штрихкод = Штрихкод;
//			//Вик 2021_06_17
//			СтрокаПозицииЧека.Штрихкод	=	СтрЗаменить(СтрокаПозицииЧека.Штрихкод,"(01)","");
//			СтрокаПозицииЧека.Штрихкод	=	СтрЗаменить(СтрокаПозицииЧека.Штрихкод,"(21)","");  
//			//КонецВик
//			Если РеквизитыДокумента.ОперацияСДенежнымиСредствами Тогда
//				// Для значения тега 1214 равное 1,2,3,7. Значения штрихкодов для заполнения тега 1162 не передаются
//				// (Исправлена ошибка 00-00276278). 
//				СтрокаПозицииЧека.Штрихкод = "";
//				
//				СтрокаПозицииЧека.ПризнакПредметаРасчета = Перечисления.ПризнакиПредметаРасчета.ПлатежВыплата;
//			Иначе
//				СтрокаПозицииЧека.ПризнакПредметаРасчета = СтрокаТЧ.ПризнакПредметаРасчета;
//				// Указывается значение реквизита "код товара", тег 1162.    
//				// В соответвии с приказом Федеральной налоговой службы от 29.08.2019 № ММВ-7-20/434@ "О внесении изменений в приложение № 2
//				// к приказу Федеральной налоговой службы от 21.03.2017 № ММВ-7-20/229@" (Зарегистрирован 25.12.2019 № 56978).
//				ШтрихкодДляРазбора = ?(ЗначениеЗаполнено(СтрокаТЧ.КодВидаНоменклатурнойКлассификации), СтрокаТЧ.КодВидаНоменклатурнойКлассификации, СтрокаТЧ.Штрихкод);
//				//Вик 2021_06_02
//				ШтрихкодДляРазбора	=	СтрЗаменить(ШтрихкодДляРазбора,"(01)","");
//				ШтрихкодДляРазбора	=	СтрЗаменить(ШтрихкодДляРазбора,"(21)","");
//				//КонецВик

//				ДанныеМаркировки = МенеджерОборудованияМаркировкаКлиентСервер.РазобратьШтриховойКодТовара(ШтрихкодДляРазбора);
//					
//				Если ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) И СтрокаТЧ.ОбувнаяПродукция Тогда
//					Если ДанныеМаркировки.Разобран Тогда
//						// Необходимо указать ТипМаркировки, GTIN, серийный номер для обеспечения совместимости (драйвера стандарта 2.5). 
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ТипМаркировки = Перечисления.ТипыМаркировкиККТ.ОбувныеТовары;
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ГлобальныйИдентификаторТорговойЕдиницы = ДанныеМаркировки.GTIN;
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.СерийныйНомер = ДанныеМаркировки.СерийныйНомер;
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = ДанныеМаркировки.РеквизитКодаТовара;
//					КонецЕсли;
//				ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.Штрихкод) И СтрокаТЧ.ТабачнаяПродукция Тогда 
//					Если НЕ (ДанныеМаркировки.ТипИдентификатораТовара = Перечисления.ТипыИдентификаторовТовараККТ.КодТовараВФорматеEAN8 Или
//						ДанныеМаркировки.ТипИдентификатораТовара = Перечисления.ТипыИдентификаторовТовараККТ.КодТовараВФорматеEAN13) Тогда
//						
//						//Вик 2021_05_14
//						//ГлобальныйИдентификаторТорговойЕдиницы = Лев(СтрокаПозицииЧека.Штрихкод, 14);
//						//СерийныйНомер = Сред(СтрокаПозицииЧека.Штрихкод, 15, 7);
//						
//						НужныйШК	=	СтрокаПозицииЧека.Штрихкод;
//						НужныйШК	=	СтрЗаменить(НужныйШК,"(01)","");
//						НужныйШК	=	СтрЗаменить(НужныйШК,"(21)","");

//						ГлобальныйИдентификаторТорговойЕдиницы	 = Лев(НужныйШК, 14);
//						СерийныйНомер							 = Сред(НужныйШК, 15, 7);
//						//КонецВик 	
//						
//						// Необходимо указать ТипМаркировки, GTIN, серийный номер для обеспечения совместимости (драйвера стандарта 2.5). 
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ТипМаркировки = Перечисления.ТипыМаркировкиККТ.ТабачнаяПродукция;
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.ГлобальныйИдентификаторТорговойЕдиницы = ГлобальныйИдентификаторТорговойЕдиницы; 
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.СерийныйНомер = СерийныйНомер; 
//						КодТовара = МенеджерОборудованияМаркировкаКлиентСервер.СформироватьКодТовараДляDataMatrixGS1(ГлобальныйИдентификаторТорговойЕдиницы, СерийныйНомер);
//						СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = КодТовара.РеквизитКодаТовара;
//					КонецЕсли;
//				Иначе
//					СтрокаПозицииЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара = ДанныеМаркировки.РеквизитКодаТовара;
//				КонецЕсли;
//			КонецЕсли;
//			
//			ПодключаемоеОборудованиеРТ.ЗаполнитьПараметрыПлатежногоДоговораВСтроке(ОбщиеПараметры, СтрокаПозицииЧека);
//			
//			НуженПересчетСуммыНДС = Истина;
//			ДатаКорректировкиСтавкиНДС = РеквизитыДокумента.Дата;
//			Если РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда 
//				ЧекПродажи = РеквизитыДокумента.ЧекККМПродажа;
//				Если ЗначениеЗаполнено(ЧекПродажи) И ЧекПродажи.Дата < УчетНДС.ДатаПереходногоПериода() Тогда  //Возврат товара за 2018 год.
//					ДатаКорректировкиСтавкиНДС = ЧекПродажи.Дата;
//					НуженПересчетСуммыНДС = Ложь;
//				КонецЕсли;
//			КонецЕсли;
//			СтрокаТЧ.СтавкаНДС = УчетНДС.СкорректироватьСтавкуНДС(СтрокаТЧ.СтавкаНДС, ДатаКорректировкиСтавкиНДС);
//			//Вик 2021_03_16
//			Попытка
//				Если РеквизитыДокумента.СистемаНалогообложения	=	Перечисления.ТипыСистемНалогообложенияККТ.ОСН тогда
//					СтрокаПозицииЧека.СтавкаНДС	=	Перечисления.СтавкиНДС.НДС20;
//					СтрокаТЧ.СтавкаНДС			=	Перечисления.СтавкиНДС.НДС20;
//					//СтрокаПозицииЧека.СуммаНДС	=	Окр(СтрокаПозицииЧека.Сумма*20/120,2);
//				КонецЕсли;	
//			Исключение
//			КонецПопытки;
//			//КонецВик

//			Если СтрокаТЧ.ЭтоПодарочныйСертификат Тогда
//				СтрокаПозицииЧека.ПризнакСпособаРасчета = Перечисления.ПризнакиСпособаРасчета.Аванс;
//				ЭтоАванс = Истина;
//				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, ЭтоАванс);
//			Иначе
//				СтрокаПозицииЧека.ПризнакСпособаРасчета = ПризнакСпособаРасчета;
//				СтрокаПозицииЧека.СтавкаНДС = ПодключаемоеОборудованиеРТ.СтавкаНДСВФорматеБПО(СтрокаТЧ.СтавкаНДС, ЭтоАванс);
//			КонецЕсли;
//			
//			Если НуженПересчетСуммыНДС Тогда
//				Если СтрокаТЧ.НДСПоСтрочно Или СтрокаТЧ.ПродукцияГИСМ Тогда
//					ТекПроцентНДС = ОбработкаТабличнойЧастиТоварыСерверПовтИсп.СтавкаНДСЧислом(СтрокаТЧ.СтавкаНДС);
//					СтрокаПозицииЧека.СуммаНДС = ОбработкаТабличнойЧастиТоварыКлиентСервер.СуммаНДСПоСтрочно(СтрокаПозицииЧека.Сумма, СтрокаТЧ.КоличествоУпаковок, ТекПроцентНДС);
//				Иначе
//					СтрокаПозицииЧека.СуммаНДС = Окр(ОбработкаТабличнойЧастиТоварыСервер.СуммаНДС(СтрокаПозицииЧека.Сумма, СтрокаТЧ.СтавкаНДС), 2);
//				КонецЕсли;
//			КонецЕсли;
//			
//			Если ИспользуетсяКомиссионнаяТорговля Тогда
//				Если СтрокаТЧ.Номенклатура.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
//					Если ЗначениеЗаполнено(СтрокаТЧ.Договор) Тогда
//						Если СтрокаТЧ.Договор.ПризнакАгента = Перечисления.ПризнакиАгента.Комиссионер Тогда
//								СтрокаПозицииЧека.ПризнакАгентаПоПредметуРасчета = Перечисления.ПризнакиАгента.Комиссионер;
//								СтрокаПозицииЧека.ДанныеАгента.ПлатежныйАгент.Телефон = СтрокаТЧ.Договор.ТелефонПоставщика;
//								СтрокаПозицииЧека.ДанныеПоставщика.ИНН                = СтрокаТЧ.Договор.ИННПоставщикаУслуг;
//								СтрокаПозицииЧека.ДанныеПоставщика.Телефон            = СтрокаТЧ.Договор.ТелефонПоставщика;
//								СтрокаПозицииЧека.ДанныеПоставщика.Наименование       = СтрокаТЧ.Поставщик.Наименование; 
//								
//								УчетНДСУКомитента = ПодключаемоеОборудованиеРТ.КэшируемыеСНО(СтрокаТЧ.Договор, КэшСНО);
//								ПодключаемоеОборудованиеРТ.ПерезаполнитьНДСКомитента(СтрокаПозицииЧека, 
//																					 СтрокаТЧ.Номенклатура, 
//																					 УчетНДСУКомитента, 
//																					 ЭтоАванс);
//						КонецЕсли;
//					КонецЕсли;
//				КонецЕсли;
//			КонецЕсли;
//			
//			Если ИспользуетсяУчетИмпортныхТоваров Тогда
//				СтрокаПозицииЧека.КодСтраныПроисхожденияТовара = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.НомерГТД.СтранаПроисхождения, "Код");
//				СтрокаПозицииЧека.НомерТаможеннойДекларации    = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.НомерГТД, "РегистрационныйНомерДекларации")
//			КонецЕсли;
//			
//			СтрокаПозицииЧека.ЕдиницаИзмерения = СтрокаТЧ.ЕдиницаИзмеренияПредметаРасчета;
//			СтрокаПозицииЧека.Вставить("ПараметрыАлкогольнойПродукции", ПараметрыАлкогольнойПродукции);
//			СтрокаПозицииЧека.НомерСтрокиТовара = СтрокаТЧ.НомерСтроки;
//			

//			Если СтрокаТЧ.НДСПоСтрочно Или СтрокаТЧ.ПродукцияГИСМ Тогда
//				
//				Если РеквизитыДокумента.ОперацияСДенежнымиСредствами Тогда
//					МассивРазвернутыхСтрок = РазвернутьСтрокуПозицииЧека(СтрокаПозицииЧека);
//				Иначе
//					МассивРазвернутыхСтрок = РазвернутьСтрокуПозицииЧека(СтрокаПозицииЧека, МассивСтрокГосИС);
//				КонецЕсли;
//				
//				Для Каждого СтрокаМассива Из МассивРазвернутыхСтрок Цикл
//					ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаМассива);
//				КонецЦикла;
//			Иначе
//				ОбщиеПараметры.ПозицииЧека.Добавить(СтрокаПозицииЧека);
//			КонецЕсли;
//			
//		КонецЦикла;
//	КонецЕсли;
//КонецПроцедуры
