
&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Если Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Ложь;
		Элементы.Экспедитор.Видимость					= Истина;
		Элементы.КогдаЗабрали.Видимость					= Истина;
	иначе
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Истина;
		Элементы.Экспедитор.Видимость					= Ложь;
		Элементы.КогдаЗабрали.Видимость					= ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Марк 2024-12-19
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
	
		Магазин = ТБКПолучитьМагазинНаСервере();
		Если ТипЗнч(Магазин) = Тип("СправочникСсылка.Магазины") Тогда
			Объект.Магазин	=	ПолучитьСкладПродажи(Магазин);			
		ИначеЕсли ТипЗнч(Магазин) = Тип("СправочникСсылка.Склады") Тогда
			Объект.Магазин	= 	Магазин;	
		КонецЕсли;
	
	КонецЕсли;
	//КонецМарк
	
	ФлПропускатьДобавитьКоличество = Ложь;	
	Если Параметры.Ключ.Пустая() тогда
		Объект.Статус						=	"";
		Объект.Сформирован					= 	Ложь;
		Объект.Комментарий					=	"";
		Объект.ПричинаЗаявкиНаПоступление	=	"";
		Объект.ПричинаОтказа				=	"";
		Объект.Экспедитор					=	""; 
		Объект.КогдаЗабрали					=	"";
		
		//Магазин = ТБКПолучитьМагазинНаСервере();
		//Если ТипЗнч(Магазин) = Тип("СправочникСсылка.Магазины") Тогда
		//	Объект.Магазин	=	ПолучитьСкладПродажи(Магазин);			
		//ИначеЕсли ТипЗнч(Магазин) = Тип("СправочникСсылка.Склады") Тогда
		//	Объект.Магазин	= 	Магазин;	
		//КонецЕсли;
		
		Объект.Продавец		=	ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца(); 
		Объект.ВидОперации	=	ПолучитьВидОперацииВозврат();
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование	= Истина;	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");

	
	Если Объект.Сформирован тогда 
		Элементы.ТоварыНоменклатура.ТолькоПросмотр			=	Истина;
		Элементы.ТоварыХарактеристика.ТолькоПросмотр		=	Истина;
		Элементы.ТоварыКоличество.ТолькоПросмотр			=	Истина;

		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа2.Доступность		=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;
		Элементы.Группа3.Доступность		=	Ложь;
		Элементы.Магазин.Доступность		=	Ложь;
		
	КонецЕсли;
	
	//Марк 2024-07-16 по просьбе Козьминой пока в откат +++
	
	//Вик 2024-07-09
	Если Строка(Объект.Проект) = "Между магазинами" тогда
		
		Если НЕ ЭтоАдминистратор() Тогда
			
			Элементы.ТоварыКоличествоФакт.ТолькоПросмотр			=	Истина;
			Элементы.ТоварыQR.ТолькоПросмотр						=	Истина;
			
		КонецЕсли; 
		
		Элементы.ТоварыПричинаБрака.ТолькоПросмотр				=	Истина;
		Элементы.ТоварыСрокГодности.ТолькоПросмотр				=	Истина;
		
		//Марк 2024-11-07
		Если ЗначениеЗаполнено(Объект.Экспедитор) Тогда
			Элементы.КоличествоПакетов.ТолькоПросмотр = Истина;
		КонецЕсли;
		//КонецМарк
		
	КонецЕсли;
	// 
	
	//КонецМарк	по просьбе Козьминой пока в откат --- 
	
	Если Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Ложь;
	иначе
		Элементы.Экспедитор.Видимость	= Ложь;
		Элементы.КогдаЗабрали.Видимость	= Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Экспедитор) тогда
		ЭтаФорма.ТолькоПросмотр	=	Истина;
	КонецЕсли;
	
	//Марк 2024-02-12
	Если Объект.Статус = "Удалено в офисе" Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если Объект.Статус = "Собран" Тогда
		
		Если Объект.флСозданВУТ Тогда
			
			Если НЕ ЭтоАдминистратор() Тогда
				Элементы.Товары.ТолькоПросмотр = Истина;	
			КонецЕсли;
				
		ИНаче
			Элементы.Товары.ТолькоПросмотр = Истина;	
		КонецЕсли;
		
	КонецЕсли;
	 
	//заполнение путей фоток для отккрытия
	Попытка //для веб админки, чтоб не падало
		КаталогИб = ОбщегоНазначенияКлиент.ПолучитьПутьКаталогаИб();
		фотки = НайтиФайлы(КаталогИб + "\photo\TBKzayavki", "*");
		ЗаголовокКнопки = "Показать фото";
		для каждого Фотка Из Фотки Цикл
			если НЕ СтрНайти(Фотка.ИмяБезРасширения, Объект.Номер) Тогда
				Продолжить;
			КонецЕсли;
			ПутиФоток.Добавить(Фотка.ПолноеИмя);
			КоличествоФоток = ПутиФоток.Количество();
			Элементы.ПоказатьФото.Видимость = Истина;
			Элементы.ПоказатьФото.Заголовок = ЗаголовокКнопки + " (" + КоличествоФоток + ")";
		КонецЦикла;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка получения Фоток: " + ОписаниеОшибки();
		Сообщение.Сообщить();	
	КонецПопытки;
	//КонецМарк
	
	Если ЗначениеЗаполнено(Объект.Магазин) тогда 	
		ИНН_Организации = ОбщегоНазначенияВызовСервера.ПолучитьИННОрганизацииПоМагазину(Объект.Магазин);   
	КонецЕсли; 
	
	ПроектПриИзменении(Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСкладПродажи(Магазин)
	Возврат Магазин.СкладПродажи;	
КонецФункции // ()
 
&НаСервереБезКонтекста
Функция ПолучитьВидОперацииВозврат()
	Возврат Перечисления.ТБК_ВидыОперацийЗаявокОтМагазина.ВозвратТовара;
КонецФункции

&НаСервереБезКонтекста
Функция  ТБКПолучитьМагазинНаСервере()
	НужныйМагазин	=	ОбщегоНазначения.ПолучитьМагазинИзООРП();
	Если не ЗначениеЗаполнено(НужныйМагазин) тогда
		//НужныйМагазин	=		ЗначениеНастроекПовтИсп.СкладПродажиПоУмолчанию();
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Магазины.Ссылка КАК Ссылка
		      	 	             |ИЗ
		      	 	             |	Справочник.Магазины КАК Магазины
		      	 	             |ГДЕ
		      	 	             |	НЕ Магазины.СкладУправляющейСистемы");
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()>0 тогда
			Возврат рез[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НужныйМагазин;	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если не ЗначениеЗаполнено(Объект.ВидОперации) тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Укажите вид операции";
		СП.Поле="ВидОперации";
		СП.ПутьКДанным = "Объект";
		СП.Сообщить();
		отказ = истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Магазин) тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Укажите Магазин";
		СП.Поле="Магазин";
		СП.ПутьКДанным = "Объект";
		СП.Сообщить();
		отказ = истина;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() тогда
		Если не ЗначениеЗаполнено(Объект.Проект) тогда
			СП = Новый СообщениеПользователю;
			СП.Текст = "Укажите Проект";
			СП.Поле="Проект";
			СП.ПутьКДанным = "Объект";
			СП.Сообщить();
			отказ = истина;
		КонецЕсли;
	КонецЕсли;

	
	Если не Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Если не ЗначениеЗаполнено(Объект.ПричинаЗаявкиНаПоступление) тогда
			СП = Новый СообщениеПользователю;
			СП.Текст = "Укажите причину заявки";
			СП.Поле="ПричинаЗаявкиНаПоступление";
			СП.ПутьКДанным = "Объект";
			СП.Сообщить();
			отказ = истина;
		КонецЕсли;
	КонецЕсли;  
	
	Если Строка(Объект.Проект) <>  "Неиспользованные QR" и Строка(Объект.Проект) <>  "Проверка марок" тогда
		Если Объект.Товары.Итог("Количество") = 0 тогда
			Сообщить("Нет товаров!");
			отказ = истина;
		КонецЕсли; 
	КонецЕсли;
	
	
	Если не (Объект.Статус = "Подтверждено в офисе" или Объект.Статус = "Собран" 
		или Объект.Статус = "Собран частично" или Объект.Статус = "Нет в наличии") и ЗначениеЗаполнено(Объект.Экспедитор) тогда  
		Сообщить("Проставлять экспедитора можно только по подтвержденным заявкам!");
		отказ = истина;
	КонецЕсли;  
	
	Если найти(Строка(Объект.Проект),"Сроки годности") тогда
		Для каждого Строка из Объект.Товары цикл
			Если не ЗначениеЗаполнено(Строка.СрокГодности) тогда
				Сообщить("Не указан срок годности в строке: "+ Строка.НомерСтроки);				
				отказ	=Истина;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	////Марк 2024-04-18
	//Если не (Найти(Объект.Номер, "ЯЯ") или Найти(Объект.Номер, "ЮЯ"))  ТОгда
	//	ПроверкаЗаполненияПричиныБрака(Отказ);	
	//КонецЕсли;  
	////КонецМарк
	
	//Марк 2024-19-08 Миграция должна проставить признак за три месяца
	Если НЕ Объект.флСозданВУТ и не Строка(Объект.Проект) = "Между магазинами" и не Строка(Объект.Проект) = "Проверка марок" Тогда
		ПроверкаЗаполненияПричиныБрака(Отказ);	
	КонецЕсли; 

	
	Если не отказ и не Объект.Сформирован тогда
		Сообщить("Не забудьте проставить галочку Сформирован!");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаЗаполненияПричиныБрака(Отказ)
	
	Для каждого Строка Из Объект.Товары Цикл
		
		Если Не ЗначениеЗаполнено(Строка.ПричинаБрака) Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнена причина брака в строке " + Строка.НомерСтроки;
			Сообщение.Сообщить(); 
			Отказ = Истина;
			Прервать;
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры
 

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Отказ = Ложь;
	Если не Объект.Экспедитор.Пустая() тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Экспедитор проставлен";
		Сообщение.Поле = "Экспедитор";
		Сообщение.УстановитьДанные(Объект.Экспедитор);
		Сообщение.Сообщить(); 
		Возврат;	
	КонецЕсли;
	
	Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод")  Тогда
		ДанныеСоСканераСтруктура = СобытияФормИСКлиент.ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(
			ЭтотОбъект, 
			Источник, 
			Событие, 
			Данные);
			                               
		Если ДанныеСоСканераСтруктура = Неопределено Тогда
			Возврат;
		КонецЕсли;
		//ОбработатьКодМаркировки(ДанныеСоСканераСтруктура);  
		ДанныеСоСканераСтруктура.Штрихкод = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ДанныеСоСканераСтруктура.Штрихкод);
		Если Найти(ДанныеСоСканераСтруктура.Штрихкод,"FL_") тогда
			Если не (Объект.Статус = "Подтверждено в офисе" или Объект.Статус = "Собран" 
				или Объект.Статус = "Собран частично" или Объект.Статус = "Нет в наличии") тогда
				Сообщить("Проставлять экспедитора можно только по подтвержденным или собранным заявкам!");
				Возврат;
			КонецЕсли;
			
			//Марк 2024-11-12
			Если Объект.КоличествоПакетов = 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Укажите количество пакетов",,"Объект.КоличествоПакетов");	
				Возврат;
			КонецЕсли;
			//КонецМарк
			
			НаименованиеКод		= Сред(ДанныеСоСканераСтруктура.Штрихкод,4);//отрезаем FL_			
			Объект.Экспедитор	= ПроставитьЭкспедитора(НаименованиеКод);
			
			//2024-04-03
			Если Объект.Экспедитор.Пустая() тогда
				НаименованиеКод		= Сред(НаименованиеКод,1,СтрДлина(НаименованиеКод)-4);//отрезаем пароль
				Объект.Экспедитор	= ПроставитьЭкспедитора(НаименованиеКод);
			КонецЕсли;
			
			Если Объект.Экспедитор.Пустая() тогда
				НаименованиеКод		=   Сред(ДанныеСоСканераСтруктура.Штрихкод,4);
				НаименованиеКод		=	Сред(НаименованиеКод,1,СтрДлина(НаименованиеКод)-4);//убираем пароль если это новый куар
				Объект.Экспедитор	=	ПроставитьЭкспедитора(НаименованиеКод);

				Если Объект.Экспедитор.Пустая() тогда
					Сообщить("Не найден экспедитор! " + НаименованиеКод);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Объект.КогдаЗабрали	=	ТекущаяДата();
			
			Элементы.КоличествоПакетов.ТолькоПросмотр = Истина;
			
			Записать();
			Возврат;
		КонецЕсли;
		
		//отработать добавление количества или товара
		
		Если СтрДлина(ДанныеСоСканераСтруктура.Штрихкод) > 28 и Строка(Объект.Проект) = "Неиспользованные QR" тогда
			ПроектНеиспользованнкQRОповещенияСообщений(ДанныеСоСканераСтруктура, Отказ);
			Если Отказ Тогда Возврат;КонецЕсли; 
			НоваяСтрока = Объект.Товары.Добавить();
			НоваяСтрока.QR			=	ДанныеСоСканераСтруктура.Штрихкод; 
			Возврат;
		КонецЕсли;
		
		//Вик 20250317		
		Если СтрДлина(ДанныеСоСканераСтруктура.Штрихкод) > 21 и Строка(Объект.Проект) = "Проверка марок" тогда
			
			ПроектНеиспользованнкQRОповещенияСообщений(ДанныеСоСканераСтруктура, Отказ);
			
			Если Отказ Тогда Возврат;КонецЕсли; 
			
			ПроверкаМарки(ДанныеСоСканераСтруктура);
					
			Возврат;
		КонецЕсли;   
		//

		
		ДанныеСоСканераСтруктура.Штрихкод	=	СтрЗаменить(ДанныеСоСканераСтруктура.Штрихкод, Символ(29), "");
		ДанныеСоСканераСтруктура.Штрихкод	=	СтрЗаменить(ДанныеСоСканераСтруктура.Штрихкод, Символ(21), "");
		
		ПроверкаСканирования(ДанныеСоСканераСтруктура.Штрихкод, Отказ); // шт
		Если Отказ Тогда Возврат; КонецЕсли; 
		
		Если ФлПропускатьДобавитьКоличество Тогда
			ФлПропускатьДобавитьКоличество = Ложь;
			Модифицированность = Истина;
			Возврат;
		КонецЕсли;

		ДобавитьКоличество(ДанныеСоСканераСтруктура);		
	Иначе
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;

КонецПроцедуры  

&НаСервере
Функция ПолучитьВладельцаМарок(марка)
	Возврат Обработки.ТБК_Маркировка.ПолучитьВладельцаМарок(марка)
КонецФункции


Процедура ПроектНеиспользованнкQRОповещенияСообщений(ДанныеСоСканераСтруктура, Отказ)
	
	Если Объект.Сформирован тогда
		Сообщить("Нельзя добавлять товары в сформированный документ!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для каждого Строка из Объект.Товары цикл
		Если Строка.QR = ДанныеСоСканераСтруктура.Штрихкод тогда
			Сообщить("Вы уже сканировали этот куар!");
			Отказ = Истина;
			возврат;					
		КонецЕсли;
	КонецЦикла;  
	
	
	Для каждого Строка из Объект.МаркиНаПроверку цикл
		Если Строка.QR = ДанныеСоСканераСтруктура.Штрихкод тогда
			Сообщить("Вы уже сканировали этот куар!");
			Отказ = Истина;
			возврат;					
		КонецЕсли;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСканирования(СканированныйШК, Отказ)
	
	//Козьмина сказала убрать 28.11.2024 заперт сканирование обезличенных марок
	Данные = СканированныйШК;
	
	Если ОбщегоНазначенияВызовСервера.ЭтоОбезличеннаяМарка(Данные) Тогда
		
		Отказ = Истина;
		ОткрытьФорму("Документ.ТБК_ЗаявкаОтМагазина.Форма.ФормаДляОбезличеннойМарки",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс); 			
		Возврат;
	
	КонецЕсли;
	
	Если Найти(Данные,"4660313541520") или Найти(Данные,"4627175411217") или Найти(Данные,"4627175411200") или Найти(Данные,"4627172718210") 
		или Найти(Данные,"4627172718210") или Найти(Данные,"4627178349203") или Найти(Данные,"4660316757195") или Найти(Данные,"4660316757232")	
		или Найти(Данные,"4660316757126") или Найти(Данные,"4660316757140") или Найти(Данные,"4660316757102") или Найти(Данные,"4660316757133")	
		или Найти(Данные,"4660316757096") или Найти(Данные,"4660316757164") или Найти(Данные,"4660316757157") или Найти(Данные,"4660316757218")	
		или Найти(Данные,"4660316757225") или Найти(Данные,"4660316757171") или Найти(Данные,"4660316757188") или Найти(Данные,"4660316757119")	
		или Найти(Данные,"4660316757201") или Найти(Данные,"4660316757164") или Найти(Данные,"4660316757157") или Найти(Данные,"4660316757218")
		или Найти(Данные,"4650353738950") или Найти(Данные,"4650353738967") или Найти(Данные,"4650353739001")
		или Найти(Данные,"4650353739025") или Найти(Данные,"4650353739032") или Найти(Данные,"4650353739056")
		или Найти(Данные,"4650353739063") или Найти(Данные,"4650353739070") или Найти(Данные,"4650353739087")
		или Найти(Данные,"04650353738974") или Найти(Данные,"04650353739049") или Найти(Данные,"04650353739094")
		или Найти(Данные,"4627159301008") или Найти(Данные,"4627159301152") или Найти(Данные,"4627159301213") //HQD glaze, Cuvie Plus, ultima)
		или Найти(Данные,"4627168570006") или Найти(Данные,"4627178349197")	
		или Найти(Данные,"4670227010760") или Найти(Данные,"4670227010685") или Найти(Данные,"4670227010746")
		или Найти(Данные,"4670227010654") или Найти(Данные,"4670227010791") или Найти(Данные,"4670227010807")
		или Найти(Данные,"4670227010678") или Найти(Данные,"4670227010777") или Найти(Данные,"04627192382095") Тогда
		//Сообщить("Нельзя сканировать обезличенные марки!"); 
		Отказ = Истина;
		ОткрытьФорму("Документ.ТБК_ЗаявкаОтМагазина.Форма.ФормаДляОбезличеннойМарки",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс); 			
		Возврат;
	КонецЕсли;
	
	//Если СтрДлина(СканированныйШК) > 29 тогда
	//	Сообщить("Запрещено сканировать блоки");
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	
	Для каждого Строка из Объект.Товары цикл
		Если Найти(Строка.QR, СканированныйШК) тогда
			Сообщить("Вы уже сканировали этот куар!");
			Отказ = Истина;
			Возврат;	
		КонецЕсли;
	КонецЦикла;
	


КонецПроцедуры



Процедура ПоискНоменклатурыПоШТ(Штрихкод, НужнаяНоменклатура, Упаковка, Отказ) 

				
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод", Штрихкод); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+Штрихкод);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+Штрихкод);	
				рез = Запрос.Выполнить().Выгрузить();

				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+Штрихкод);
					Отказ = Истина;
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли;
		
		НужнаяНоменклатура			=	Рез[0].Владелец; 
		Упаковка					=	Рез[0].Упаковка;

КонецПроцедуры

Функция ПолучитьКоличествоПоКофиценту(Упаковка)

	Попытка
		Кол	=	Упаковка.Коэффициент;
		Если НЕ ЗначениеЗаполнено(Кол) тогда
			Кол	=	1;
		КонецЕсли;
	Исключение
		Кол	=	1;
	КонецПопытки;
	
	Возврат Кол;
	
КонецФункции
 
&НаСервере
Функция ПроставитьЭкспедитора(НаименованиеСпр)         
	//разборНаименования
	НужНаим	=	"";
	Пока НаименованиеСпр <> "" цикл
		Если Лев(НаименованиеСпр,2) = "32" тогда
			НужНаим		=	НужНаим  + " ";	 
			НаименованиеСпр	=	Сред(НаименованиеСпр,3); 
			Продолжить;
		КонецЕсли;
		
		КодСимвола	=	Сред(НаименованиеСпр,1,4);
		НужНаим		=	НужНаим + Символ(КодСимвола);
		
		НаименованиеСпр	=	Сред(НаименованиеСпр,5);
	КонецЦикла;  
	
	Если НужНаим = "" тогда Возврат Неопределено КонецЕсли;
	
	Возврат Справочники.ФизическиеЛица.НайтиПоНаименованию(НужНаим);	
КонецФункции

&НаСервере
Процедура ДобавитьКоличество(ДанныеСоСканераСтруктура)
	
	Отказ = Ложь;
	
	ПроверятьСканированияQR = Ложь;
	Если Строка(Объект.Проект) = "Между магазинами" или Строка(Объект.Проект) = "Заказ QR" Тогда
		ПроверятьСканированияQR = Истина;	
	КонецЕсли;
	
	СканированныйШК	=	ДанныеСоСканераСтруктура.Штрихкод;
	Упаковка	= Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	
	//ПроверкаСканирования(ДанныеСоСканераСтруктура.Штрихкод, Отказ); // шт
	Если Отказ Тогда Возврат; КонецЕсли;
	НужнаяНоменклатура = ОбщегоНазначенияВызовСервера.ПолучитьНоменклатуруПоКуару(СканированныйШК);
	
	Если НужнаяНоменклатура = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найдена номенклатура");	
	    Возврат;
	КонецЕсли;
	
	Если СтрДлина(СканированныйШК) > 20 тогда //это маркировка 
		
		СканированныйШК_Копия	=	СканированныйШК;
		ШтрихкодEAN = ШтрихкодированиеИС.ТБКEANИзКодаМаркировки(СканированныйШК_Копия);   
		Если не ЗначениеЗаполнено(ШтрихкодEAN) тогда
			ШтрихкодEAN	=	ПолучитьЕАН(СканированныйШК_Копия);
		КонецЕсли;
		
		Кол = ПолучитьКоличествоПоКофиценту(Упаковка);
		
		/////////////////////////////////////////////////////////////////////////////////////		
		НужнаяХар = ПолучитьХарактеристикуНоменклатуры(НужнаяНоменклатура, СканированныйШК);
		
	Иначе
		
		//Марк 2025-01-30
		Если ПроверятьСканированияQR Тогда
			
			Если ОбщегоНазначения.ЭтоМаркированнаяНоменклатура(НужнаяНоменклатура) тогда
				Сообщить("Для этой номенклатуры сканируйте куар код!");
				//Отказ = Истина;
				Возврат;
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Объект.флСозданВУТ Тогда
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура); 
		
		Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики и НужнаяХар <> Неопределено Тогда
			Отбор.Вставить("Характеристика",НужнаяХар);
		КонецЕсли;
		
		Строки	=	Объект.Товары.НайтиСтроки(Отбор);	
		
		Если Строки.Количество() = 0 Тогда 
			
			Сообщить("В списке нет товара " + НужнаяНоменклатура);	
			
		иначе
			
			НужнаяСтрока	=	Строки[0];
			
			Если НужнаяСтрока.Количество = НужнаяСтрока.КоличествоФакт Тогда
				Сообщить("Нужное количество товара уже отсканировано " + НужнаяСтрока.Номенклатура);	
			иначе
				НужнаяСтрока.КоличествоФакт = НужнаяСтрока.КоличествоФакт + 1;
			КонецЕсли;
			
			Если ОбщегоНазначения.ЭтоМаркированнаяНоменклатура(НужнаяНоменклатура) И ПроверятьСканированияQR тогда
				Если НужнаяСтрока.QR = "" Тогда
					НужнаяСтрока.QR				= СканированныйШК;	
				иначе
					НужнаяСтрока.QR				= НужнаяСтрока.QR + Символ(169) + СканированныйШК;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;		
		
	иначе  
		
		Если Объект.Сформирован тогда
			Сообщить("Нельзя добавлять товары в сформированный документ!");
			Возврат
		КонецЕсли; 		
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);
		
		Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики Тогда
			Отбор.Вставить("Характеристика",НужнаяХар);
		КонецЕсли;
		
		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда 
			
			НужнаяСтрока = Объект.Товары.Добавить();
			НужнаяСтрока.Номенклатура	= НужнаяНоменклатура;
			НужнаяСтрока.Количество		= 1;
			НужнаяСтрока.КоличествоФакт	= 1;   
			
			Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики Тогда
				НужнаяСтрока.Характеристика = НужнаяХар;
			КонецЕсли;
			
		иначе        
								
			НужнаяСтрока = Строки[0];
			НужнаяСтрока.КоличествоФакт	= НужнаяСтрока.КоличествоФакт + 1;
			НужнаяСтрока.Количество 	= НужнаяСтрока.Количество + 1;
			
		КонецЕсли;
		
		Если ОбщегоНазначения.ЭтоМаркированнаяНоменклатура(НужнаяНоменклатура) И ПроверятьСканированияQR тогда   
			
			Если НужнаяСтрока.QR = "" Тогда
				НужнаяСтрока.QR				= СканированныйШК;	
			иначе
				НужнаяСтрока.QR				= НужнаяСтрока.QR + Символ(169) + СканированныйШК;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Модифицированность = Истина;

КонецПроцедуры 

&НаСервере
Функция ПолучитьХарактеристикуНоменклатуры(Номенклатура, СканированныйШК) Экспорт 

	МРЦ	= Неопределено; 
	
	Если Номенклатура.ВидНоменклатуры.ИспользоватьХарактеристики тогда			
		
		//Марк 2024-01-06 
		НастройкиРазбора = Новый Структура;
		НастройкиРазбора.Вставить("Кеш", РазборКодаМаркировкиИССлужебныйКлиентСервер.ИнициализироватьНастройкиИспользующиеРезультатыПредыдущихРазборов());
		ДанныеРазбора = РазборКодаМаркировкиИССлужебный.РазобратьКодМаркировкиИспользуяПредыдущиеРезультаты(СканированныйШК, НастройкиРазбора.Кеш);  
				                          
		Если НЕ ЗначениеЗаполнено(ДанныеРазбора) тогда
			МРЦ = ПолучитьМРЦ(СканированныйШК);
		Иначе
			МРЦ = ДанныеРазбора.СоставКодаМаркировки.МРЦ;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(МРЦ) Тогда
			
			ОтборНаим = Новый Структура("Наименование", Строка(МРЦ));
			Спр	= Справочники.ХарактеристикиНоменклатуры.Выбрать(, Номенклатура, ОтборНаим);
			
			Если Спр.Следующий() тогда
				Возврат	Спр.Ссылка;
			КонецЕсли;
			
		КонецЕсли;
		//КонецМарк
		
	КонецЕсли;
	
	Возврат Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();

КонецФункции // ()

//Мрак 2025-01-16
Функция ПолучитьМРЦ(QR) экспорт 
	Попытка
		
		Если Найти(QR,Символ(29)) тогда //тогда это шк ввода остатвков. В нем мрц зашито напрямую
			МРЦ	=	Число(Сред(QR,28,3));			
			Возврат МРЦ;
		иначе 
			НомерНачалоМРЦ = Найти(QR, "8005");
			Если НомерНачалоМРЦ > 0 Тогда //это для блока
				МРЦИзШтрихКода = Сред(QR,НомерНачалоМРЦ + 4,6);
				возврат Число(Сред(МРЦИзШтрихКода,1, 3));
			иначе
				МРЦИзШтрихКода = Сред(QR,22,4);//только для пачки			
			КонецЕсли;	
		КонецЕсли;
		
		ДесятичноеЧислоМРЦ = ПолучитьДесятичноеМРЦ(МРЦИзШтрихКода);
		Если ДесятичноеЧислоМРЦ <> Неопределено Тогда
			МРЦ = ДесятичноеЧислоМРЦ/100;
			Возврат МРЦ;
		иначе
			Возврат 0;
		КонецЕсли; 
		
	Исключение
		
	КонецПопытки;
	
	Возврат 0;
КонецФункции 

Функция ПолучитьДесятичноеМРЦ(МРЦИзШтрихКода)
	//Строка кодирования МРЦ
	//ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"%&'*+-./_,:;=<>?
	//!!!ВАЖНО
	//!!!Если строка кодирования устанавливается не в коде,
	//!!!а в значении реквизита (константы, справочники и т.п.,
	//!!!то строку брать из комментария,
	//!!!т.к. в значении переменной СтрокаКодирования в коде функции присутствуют лишние кавычки
	СтрокаКодирования = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!""%&'*+-./_,:;=<>?";
	ДлинаСтрокиКодирования = СтрДлина(СтрокаКодирования);
	ДлинаЦеныИзШтрихКода = СтрДлина(МРЦИзШтрихКода);
	ДесятичноеЧисло = 0;
	Для Сч = 1 По ДлинаЦеныИзШтрихКода Цикл
		ТекМножитель = Pow(ДлинаСтрокиКодирования,ДлинаЦеныИзШтрихКода-Сч);
		ТекСимвол = Сред(МРЦИзШтрихКода,Сч,1);
		ПозицияСимволаВСтрокеКодирования = Найти(СтрокаКодирования,ТекСимвол);
		Если ПозицияСимволаВСтрокеКодирования = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		ТекМножимое = ПозицияСимволаВСтрокеКодирования-1;
		ДесятичноеЧисло = ДесятичноеЧисло + ТекМножимое*ТекМножитель;
	КонецЦикла;
	Возврат ДесятичноеЧисло;
КонецФункции
//КонецМарк

&НаСервереБезКонтекста
Функция ПолучитьЕАН(ШК)
	Если лев(ШК,3) = "010" тогда
		ШК = Сред(СокрЛП(ШК),4);
	КонецЕсли;
	
	Если лев(ШК,5) = "00000" тогда
		флЭтоЕан8	=	Истина;
	иначе
		флЭтоЕан8	=	ложь;
	КонецЕсли;
	
	ШК  = ОбщегоНазначенияВызовСервера.УдалитьЛидирующиеНули(ШК);
	
	ШК	= лев(ШК,13);
	
	Если флЭтоЕан8 тогда
		ШК	= лев(ШК,8);
	иначе
		Попытка
			ФФФ	=	Число(ШК);
		Исключение
			ШК = Лев("0" + ШК, 13);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ШК;
КонецФункции

&НаКлиенте
Процедура СформированПриИзменении(Элемент)
	ТекстВопроса = НСтр("ru='Документ Сформирован полностью?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ПроставитьСформирован", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);  
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьСформирован(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Дата = ТекущаяДата();
		Объект.Сформирован		=	Истина;
		Элементы.Товары.Доступность			=	Ложь;
		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа2.Доступность		=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;

		Записать();
	иначе
		Объект.Сформирован		=	Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Строка(Объект.Проект) <>  "Неиспользованные QR" тогда
		Для каждого Строка из Объект.Товары цикл
			Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) тогда
				Сообщить("Не заполнена номенклатура в строке: "+Строка.НомерСтроки);
				ОТказ = Истина;
			КонецЕсли;
			
			Если Строка.Количество	=	0 тогда
				Сообщить("Не заполнено количество в строке: "+Строка.НомерСтроки);
				ОТказ = Истина;
			КонецЕсли;  
			
			Если найти(Строка.Номенклатура.Наименование," БК") тогда
				Сообщить("Нельзя добавлять БК. Строка: "+Строка.НомерСтроки);
				ОТказ = Истина;
			КонецЕсли;
			
			Если Строка.Номенклатура.ПометкаУдаления тогда
				Сообщить("Нельзя добавлять позиции помеченные на удаление. Строка: "+Строка.НомерСтроки);
				ОТказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	Элементы.Товары.ТекущиеДанные.КоличествоФакт = Элементы.Товары.ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура Собрано(Команда)
	
	//Марк 2024-03-06
	ОбработчикОповещения = Новый ОписаниеОповещения("ПроставитьСобран", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Документ собран?'");
	
	Если Объект.Статус = "Нет в наличии" или Объект.Статус = "Собран частично" Тогда
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);	
	    Возврат;
	КонецЕсли;
	//КонецМарк
	
	Если Объект.Статус <> "Собирать" тогда
		Сообщить("Статус должен быть Собирать!");
		Возврат;
	КонецЕсли;
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
КонецПроцедуры


&НаКлиенте
Процедура ПроставитьСобран(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		//Марк 2024-02-13
		Если Строка(Объект.Проект) = "Возврат (Собирать) интернет-магазин" Тогда
			ИтогКоличество = Объект.Товары.Итог("Количество");
			ИтогКоличествоФакт = Объект.Товары.Итог("КоличествоФакт");
			Если ИтогКоличествоФакт = 0 Тогда
				Объект.Статус = "Нет в наличии";
			ИначеЕсли ИтогКоличество <> ИтогКоличествоФакт Тогда
				Объект.Статус = "Собран частично";
			Иначе
				Объект.Статус = "Собран";
			КонецЕсли;
		иначеЕсли Строка(Объект.Проект) = "Между магазинами" Тогда //Проверка контролько маркированного товара
			
			Для каждого Строка Из ОБъект.Товары Цикл
				
				Если ЭтоМаркированнаяНоменклатура(Строка.Номенклатура) Тогда
					
					Если Строка.Количество <> Строка.КоличествоФакт Тогда
					
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Вы отсканирование не весь маркируемый товар");
					    Прервать;
					КонецЕсли;				
					
				КонецЕсли; 		
				
			КонецЦикла;
			
			Объект.Статус	= "Собран";
			
		Иначе		
			Объект.Статус	= "Собран";
		КонецЕсли;
		
		
		//Если Объект.Статус = "Собран" Тогда
		//	Элементы.Товары.ТолькоПросмотр = Истина;
		//КонецЕсли;
		
		Объект.Продавец = ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца();
		//КонецМарк
		Объект.ДатаСборкиФакт	= ТекущаяДата();
		ИзменитьПризнакОтправлен();		
	КонецЕсли;
КонецПроцедуры 

&НаСервере
Процедура ИзменитьПризнакОтправлен()
	рег = РегистрыСведений.ТБК_ДанныеПоЗаявкамМагазинов.СоздатьНаборЗаписей();
	рег.Отбор.Документ.Установить(Объект.Ссылка);
	Рег.Прочитать();
	
	Если рег.Количество() <> 0 тогда	
		рег[0].Отправлен	=	Ложь;
		рег.Записать();
	КонецЕсли;
	
	Объект.Продавец = ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Объект.Экспедитор) тогда
		ЭтаФорма.ТолькоПросмотр	=	Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	//Костыль исключение
	Если Объект.Номер = "ЯЯ1005157" и Строка(Объект.Магазин) = "МоскваБелаяДачаПДВ" Тогда
		Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005178" и Строка(Объект.Магазин) = "МоскваГородПДВ" Тогда 
	    Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005180" и Строка(Объект.Магазин) = "МоскваЯсеневоБОК" Тогда 
		Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005181" и Строка(Объект.Магазин) = "МоскваЕврополисБОК" Тогда 
		Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005182" и Строка(Объект.Магазин) = "МоскваВегасПДВ" Тогда 
		Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005188" и Строка(Объект.Магазин) = "МоскваКрасногорскАшанПДВ" Тогда 
		Возврат;
	Иначеесли Объект.Номер = "ЯЯ1005159" и Строка(Объект.Магазин) = "МоскваПраймПлазаБОК" Тогда 
		Возврат;	
	КонецЕсли; 
	
	//Марк 2023-10-20     
	Если  Строка(Объект.Проект) <> "ЧИСТКА" тогда

		Если Строка(Объект.Проект) <> "Заказ QR" тогда
			Если Объект.Товары.Количество() >= 31 Тогда	
				Объект.Товары.Удалить(Объект.Товары.Количество() - 1);
				ПоказатьПредупреждение(,"Можно добавить только 30 позиций товара");
			КонецЕсли;
		иначе
			Если Объект.Товары.Количество() >= 201 Тогда	
				Объект.Товары.Удалить(Объект.Товары.Количество() - 1);
				ПоказатьПредупреждение(,"Можно добавить только 200 позиций товара");
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	//КонецМарк
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьФото(Команда) //Марк 2024-02-12
	для каждого ПутьФотки из ПутиФоток Цикл
		ЗапуститьПриложение(ПутьФотки.Значение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	Если элементы.товары.ТекущиеДанные.КоличествоФакт > элементы.товары.ТекущиеДанные.Количество Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нельзя проставить количество факт больше чем количество";
		Сообщение.Сообщить(); 	
	    элементы.товары.ТекущиеДанные.КоличествоФакт = 0;
	КонецЕсли;
	
	//Марк 2024-07-16 по просьбе Козьминой пока в откат +++
	
	//Вик 2024-07-09
	Если Строка(Объект.Проект) = "Между магазинами" тогда
		Если ЭтоМаркированнаяНоменклатура(Элементы.Товары.ТекущиеДанные.Номенклатура) И не ЭтоАдминистратор() тогда			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя проставить количество факт! Сканируйте куар!";
			Сообщение.Сообщить(); 	
		    элементы.товары.ТекущиеДанные.КоличествоФакт = 0;	
		КонецЕсли;
	КонецЕсли;
	//
	
	//КонецМарк по просьбе Козьминой пока в откат ---

КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоМаркированнаяНоменклатура(Номенклатура)
	Возврат ОбщегоНазначения.ЭтоМаркированнаяНоменклатура(Номенклатура)
КонецФункции

&НаКлиенте
Процедура ТоварыПричинаБракаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//понять вид
	Вид = "";
	ТекДанные = элементы.товары.ТекущиеДанные;
	
	//поиск последней группы
	ПолныйКод = ПолучитьПолныйКод(ТекДанные.Номенклатура);
	
	//Определения вида
	Табак = "00048205349";
	Электронки = "00048205348";
	Сувениры = "00048218449";
	Если СтрНайти(ПолныйКод, Табак) <> 0 Тогда
		Вид = "Табак";
	ИначеЕсли СтрНайти(ПолныйКод, Электронки) <> 0 Тогда
		Вид = "Электронки";
	ИначеЕсли СтрНайти(ПолныйКод, Сувениры) <> 0 Тогда 
		Вид = "Сувениры";
	КонецЕсли;
	
	    СтандартнаяОбработка = Ложь;
        Форма = ОткрытьФорму("Справочник.ТБКПричиныБрака.ФормаВыбора", , Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
        ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
        ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вид");
        ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		
		СписокОтбора = Новый СписокЗначений;
		СписокОтбора.Добавить(Вид);
		СписокОтбора.Добавить("Общий");                 

        ЭлементОтбора.ПравоеЗначение = СписокОтбора;		
        ЭлементОтбора.Использование = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолныйКод(Номенклатура)
	Возврат Номенклатура.ПолныйКод();	
КонецФункции 

&НаКлиенте
Процедура ПроектНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	//Марк 2025-01-30
	Если НЕ Объект.флСозданВУТ Тогда
		
		СтандартнаяОбработка = Ложь;
		Форма = ОткрытьФорму("Справочник.ТБКПроекты.ФормаВыбора", , Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;             
		
		ЭлементОтбора.ПравоеЗначение = "МеждуМагазинами";		
		ЭлементОтбора.Использование = Истина;
		
	КонецЕсли;
	//КонецМарк

КонецПроцедуры


&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Если Строка(Объект.Проект) = "Проверка марок" тогда
		Элементы.МаркиНаПроверку.Видимость  =  истина;
		Элементы.Товары.Видимость			= ложь;  
		
		Если не Объект.Сформирован тогда			
			НашиОрганизацииИНН	=	ОбщегоНазначенияВызовСервера.ПолучитьСписок_НашиОрганизацииИНН();
		КонецЕсли;
		
		Объект.Товары.Очистить();
	иначе 
		Элементы.Товары.Видимость			 =  истина;
		Элементы.МаркиНаПроверку.Видимость   = ложь;   	
		Объект.МаркиНаПроверку.Очистить();

	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ПроверитьМаркиНаСервере()
	Если НашиОрганизацииИНН.Количество()=0 тогда
		Сообщить("Нет связи с УТ, попробуйте позже!");
		Возврат;
	КонецЕсли;
	
	
	Марки	=	Новый Массив; 
	
	Для каждого Строка Из Объект.МаркиНаПроверку цикл
		Если не Строка.Проверена тогда
			Марки.Добавить(Строка.QR); 
		КонецЕсли;
	КонецЦикла;   
	
	
	ДанныеМарок	=	ПолучитьВладельцаМарок(Марки);

	Для каждого ДанныеМарки из ДанныеМарок цикл
		
		тз	=	Объект.МаркиНаПроверку.Выгрузить();
		Запрос	=			Новый Запрос("ВЫБРАТЬ
			      	 			             |	тз.QR
			      	 			             |ПОМЕСТИТЬ итог
			      	 			             |ИЗ
			      	 			             |	&тз КАК тз
			      	 			             |ГДЕ
			      	 			             |	тз.QR ПОДОБНО &QR
			      	 			             |;
			      	 			             |
			      	 			             |////////////////////////////////////////////////////////////////////////////////
			      	 			             |ВЫБРАТЬ
			      	 			             |	итог.QR
			      	 			             |ИЗ
			      	 			             |	итог КАК итог"); 
		Запрос.УстановитьПараметр("QR", "%"+ ДанныеМарки.Ключ+"%");  
		Запрос.УстановитьПараметр("тз", тз);

		Рез1= Запрос.Выполнить().Выбрать();
		
		
		Если Рез1.Следующий() тогда 
			НужКуар = рез1.QR;
		КонецЕсли;
		
						
		Отбор = Новый Структура;  
		Отбор.Вставить("QR", НужКуар); 	
		Строки = Объект.МаркиНаПроверку.НайтиСтроки(Отбор);    
		
		Если Строки.количество()>0 тогда
			НужСтрока = Строки[0];  
		иначе
			
		КонецЕсли;
		
		Если НужСтрока <> Неопределено тогда
			
			Если НЕ ЗначениеЗаполнено(ДанныеМарки.Значение.Статус) тогда
				НужСтрока.Проверена  = Истина; 
				НужСтрока.Ошибка	 = "Марка не найдена в ЧЗ";  	
			иначе
				
				НужСтрока.Проверена	=	Истина;   
				
				Если ДанныеМарки.Значение.Статус <> "INTRODUCED"   тогда
					НужСтрока.Ошибка	 = "Марка НЕ в обороте. Статус марки: "+ДанныеМарки.Значение.Статус;
					Продолжить;
				КонецЕсли;

					
				Если ДанныеМарки.Значение.ИНН <> ИНН_Организации тогда 	
					
					Если НашиОрганизацииИНН.НайтиПоЗначению(ДанныеМарки.Значение.ИНН)<>Неопределено тогда
						НужСтрока.НашаОрганизация	=	Истина;	 
						НужСтрока.Ошибка	 = "Повторная проверка через несколько дней";
					иначе   
						НужСтрока.Ошибка	 = "Марка другого ИП. ИНН владельца: "+ДанныеМарки.Значение.ИНН;
					КонецЕсли;
					
					Продолжить;;	
				КонецЕсли;
				
				
				НужСтрока.Хорошая = Истина;

			КонецЕсли; 		
		КонецЕсли;   	
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ПроверитьМарки(Команда)
	ПроверитьМаркиНаСервере();
КонецПроцедуры

&НаКлиенте	
Процедура ПроверкаМарки(ДанныеСоСканераСтруктура)
	Если НашиОрганизацииИНН.Количество()=0 тогда
		Сообщить("Нет связи с УТ, попробуйте позже!");
		Возврат;
	КонецЕсли;
	
	НоваяСтрока 				=   Объект.МаркиНаПроверку.Добавить();
	НоваяСтрока.QR				=	ДанныеСоСканераСтруктура.Штрихкод; 	
	НоваяСтрока.Номенклатура	=	ОбщегоНазначенияВызовСервера.ПолучитьНоменклатуруПоКуару(ДанныеСоСканераСтруктура.Штрихкод); 	
	
	
	Если ПроверятьПриСканировании тогда  
		
		Марки	=	Новый Массив;
		Марки.Добавить(ДанныеСоСканераСтруктура.Штрихкод);
		
		ДанныеМаркиСоответствие	=	ПолучитьВладельцаМарок(Марки); 
		
		Если ДанныеМаркиСоответствие.количество()=0 тогда 
			НоваяСтрока.Проверена  = Истина; 
			НоваяСтрока.Ошибка	 = "Нет связис ЧЗ";  		
		Иначе
			Для каждого ДанныеМарки из ДанныеМаркиСоответствие цикл
				
				Если НЕ ЗначениеЗаполнено(ДанныеМарки.Значение.Статус) тогда
					НоваяСтрока.Проверена  = Истина; 
					НоваяСтрока.Ошибка	 = "Марка не найдена в ЧЗ";  	
				иначе
					
				НоваяСтрока.Проверена	=	Истина;   
				
				Если ДанныеМарки.Значение.Статус <> "INTRODUCED"   тогда
					НоваяСтрока.Ошибка	 = "Марка НЕ в обороте. Статус марки: "+ДанныеМарки.Значение.Статус;
					Продолжить;
				КонецЕсли;

					
				Если ДанныеМарки.Значение.ИНН <> ИНН_Организации тогда 
					
					Если НашиОрганизацииИНН.НайтиПоЗначению(ДанныеМарки.Значение.ИНН)<>Неопределено тогда
						НоваяСтрока.НашаОрганизация	=	Истина;	 
						НоваяСтрока.Ошибка	 = "Повторная проверка через несколько дней";
					иначе   
						НоваяСтрока.Ошибка	 = "Марка другого ИП. ИНН владельца: "+ДанныеМарки.Значение.ИНН;
					КонецЕсли;
					
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока.Хорошая = Истина;
					
				КонецЕсли; 
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли; 
	
	Элементы.МаркиНаПроверку.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();  
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЭтоАдминистратор()

	ТекПользователь = Пользователи.ТекущийПользователь();
	ГруппаФизЛицаТекПользователя = ТекПользователь.ФизическоеЛицо.Родитель.Наименование;
	ЕстьПолныеПрава = РольДоступна("ПолныеПрава");
	
	Если ГруппаФизЛицаТекПользователя = "Администраторы" или ЕстьПолныеПрава Тогда
		Возврат Истина;
	иначе
		Возврат Ложь;                                        
	КонецЕсли;

КонецФункции // ()
