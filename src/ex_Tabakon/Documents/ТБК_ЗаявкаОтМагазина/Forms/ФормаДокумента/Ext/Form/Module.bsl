
&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Если Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Ложь;
		Элементы.Экспедитор.Видимость					= Истина;
		Элементы.КогдаЗабрали.Видимость					= Истина;
	иначе
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Истина;
		Элементы.Экспедитор.Видимость					= Ложь;
		Элементы.КогдаЗабрали.Видимость					= ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	Если Параметры.Ключ.Пустая() тогда
		Объект.Статус						=	"";
		Объект.Сформирован					= 	Ложь;
		Объект.Комментарий					=	"";
		Объект.ПричинаЗаявкиНаПоступление	=	"";
		Объект.ПричинаОтказа				=	"";
		Объект.Экспедитор					=	""; 
		Объект.КогдаЗабрали					=	"";
		
		Объект.Магазин		=	ТБКПолучитьМагазинНаСервере(); 
		Объект.Продавец		=	ОбщегоНазначенияВызовСервера.ПолучитьТекущегоПродавца(); 
		Объект.ВидОперации	=	ПолучитьВидОперацииВозврат();
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование	=Истина;	
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект, "СканерШтрихкода");

	
	Если Объект.Сформирован тогда 
		Элементы.ТоварыНоменклатура.ТолькоПросмотр			=	Истина;
		Элементы.ТоварыХарактеристика.ТолькоПросмотр		=	Истина;
		Элементы.ТоварыКоличество.ТолькоПросмотр			=	Истина;

		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа2.Доступность		=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;
		Элементы.Группа3.Доступность		=	Ложь;
		Элементы.Магазин.Доступность		=	Ложь;
	КонецЕсли;	
	
	Если Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Элементы.ПричинаЗаявкиНаПоступление.Видимость	= Ложь;
	иначе
		Элементы.Экспедитор.Видимость	= Ложь;
		Элементы.КогдаЗабрали.Видимость	= Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидОперацииВозврат()
	Возврат Перечисления.ТБК_ВидыОперацийЗаявокОтМагазина.ВозвратТовара;
КонецФункции

&НаСервереБезКонтекста
Функция  ТБКПолучитьМагазинНаСервере()
	НужныйМагазин	=	ОбщегоНазначения.ПолучитьМагазинИзООРП();
	Если не ЗначениеЗаполнено(НужныйМагазин) тогда
		//НужныйМагазин	=		ЗначениеНастроекПовтИсп.СкладПродажиПоУмолчанию();
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Магазины.Ссылка КАК Ссылка
		      	 	             |ИЗ
		      	 	             |	Справочник.Магазины КАК Магазины
		      	 	             |ГДЕ
		      	 	             |	НЕ Магазины.СкладУправляющейСистемы");
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество()>0 тогда
			Возврат рез[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НужныйМагазин;	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если не ЗначениеЗаполнено(Объект.ВидОперации) тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Укажите вид операции";
		СП.Поле="ВидОперации";
		СП.ПутьКДанным = "Объект";
		СП.Сообщить();
		отказ = истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Магазин) тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = "Укажите Магазин";
		СП.Поле="Магазин";
		СП.ПутьКДанным = "Объект";
		СП.Сообщить();
		отказ = истина;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() тогда
		Если не ЗначениеЗаполнено(Объект.Проект) тогда
			СП = Новый СообщениеПользователю;
			СП.Текст = "Укажите Проект";
			СП.Поле="Проект";
			СП.ПутьКДанным = "Объект";
			СП.Сообщить();
			отказ = истина;
		КонецЕсли;
	КонецЕсли;

	
	Если не Строка(Объект.ВидОперации) = "Возврат товара" тогда
		Если не ЗначениеЗаполнено(Объект.ПричинаЗаявкиНаПоступление) тогда
			СП = Новый СообщениеПользователю;
			СП.Текст = "Укажите причину заявки";
			СП.Поле="ПричинаЗаявкиНаПоступление";
			СП.ПутьКДанным = "Объект";
			СП.Сообщить();
			отказ = истина;
		КонецЕсли;
	КонецЕсли;  
	
	
	Если Объект.Товары.Итог("Количество") = 0 тогда
		Сообщить("Нет товаров!");
		отказ = истина;
	КонецЕсли; 
	
	
	Если не (Объект.Статус = "Подтверждено в офисе" или Объект.Статус = "Собран") и ЗначениеЗаполнено(Объект.Экспедитор) тогда  
		Сообщить("Проставлять экспедитора можно только по подтвержденным заявкам!");
		отказ = истина;
	КонецЕсли;  
	
	Если найти(Строка(Объект.Проект),"Сроки годности") тогда
		Для каждого Строка из Объект.Товары цикл
			Если не ЗначениеЗаполнено(Строка.СрокГодности) тогда
				Сообщить("Не указан срок годности в строке: "+ Строка.НомерСтроки);				
				отказ	=Истина;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	Если не отказ и не Объект.Сформирован тогда
		Сообщить("Не забудьте проставить галочку Сформирован!");		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	
	Если (Событие = "Штрихкод" Или Событие = "ПолученШтрихкод")  Тогда
		ДанныеСоСканераСтруктура = СобытияФормИСКлиент.ВнешнееСобытиеПреобразоватьДанныеСоСканераВСтруктуру(
			ЭтотОбъект, 
			Источник, 
			Событие, 
			Данные);
			
		Если ДанныеСоСканераСтруктура = Неопределено Тогда
			Возврат;
		КонецЕсли;
		//ОбработатьКодМаркировки(ДанныеСоСканераСтруктура);  
		
		Если Найти(ДанныеСоСканераСтруктура.Штрихкод,"FL_") тогда
			Если не (Объект.Статус = "Подтверждено в офисе" или Объект.Статус = "Собран") тогда
				Сообщить("Проставлять экспедитора можно только по подтвержденным или собранным заявкам!");
				Возврат;
			КонецЕсли;
			
			НаименованиеКод		= Сред(ДанныеСоСканераСтруктура.Штрихкод,4);//отрезаем FL_			
			
			Объект.Экспедитор	=	ПроставитьЭкспедитора(НаименованиеКод);
			Если Объект.Экспедитор.Пустая() тогда
				НаименованиеКод		=   Сред(ДанныеСоСканераСтруктура.Штрихкод,4);
				НаименованиеКод		=	Сред(НаименованиеКод,1,СтрДлина(НаименованиеКод)-4);//убираем пароль если это новый куар
				Объект.Экспедитор	=	ПроставитьЭкспедитора(НаименованиеКод);

				Если Объект.Экспедитор.Пустая() тогда
					Сообщить("Не найден экспедитор! " + НаименованиеКод);
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Объект.КогдаЗабрали	=	ТекущаяДата();
			
			Записать();
			Возврат;
		КонецЕсли;

		ДобавитьКоличество(ДанныеСоСканераСтруктура);		
	Иначе
		ПодключаемоеОборудованиеРТКлиент.ВнешнееСобытиеОборудования(ЭтотОбъект, Источник, Событие, Данные);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроставитьЭкспедитора(НаименованиеСпр)         
	//разборНаименования
	НужНаим	=	"";
	Пока НаименованиеСпр <> "" цикл
		Если Лев(НаименованиеСпр,2) = "32" тогда
			НужНаим		=	НужНаим  + " ";	 
			НаименованиеСпр	=	Сред(НаименованиеСпр,3); 
			Продолжить;
		КонецЕсли;
		
		КодСимвола	=	Сред(НаименованиеСпр,1,4);
		НужНаим		=	НужНаим + Символ(КодСимвола);
		
		НаименованиеСпр	=	Сред(НаименованиеСпр,5);
	КонецЦикла;  
	
	Если НужНаим = "" тогда Возврат Неопределено КонецЕсли;
	
	Возврат Справочники.ФизическиеЛица.НайтиПоНаименованию(НужНаим);	
КонецФункции


&НаСервере
Процедура  ДобавитьКоличество(ДанныеСоСканераСтруктура) 
	Если Объект.Сформирован тогда
		Сообщить("Нельзя добавлять товары в сформированный документ!");
		Возврат
	КонецЕсли;
	
	СканированныйШК	=	ДанныеСоСканераСтруктура.Штрихкод;
	Если СтрДлина(СканированныйШК) > 29 тогда
		Сообщить("Запрещено сканировать блоки");
		Возврат;
	КонецЕсли;  
			
	Если СтрДлина(СканированныйШК) >28 тогда //это маркировка 
		СканированныйШК_Копия	=	СканированныйШК;
		ШтрихкодEAN = ШтрихкодированиеИС.ТБКEANИзКодаМаркировки(СканированныйШК_Копия);   
		Если не ЗначениеЗаполнено(ШтрихкодEAN) тогда
			ШтрихкодEAN	=	ПолучитьЕАН(СканированныйШК_Копия);
		КонецЕсли;
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",ШтрихкодEAN); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+ШтрихкодEAN);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+ШтрихкодEAN);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+ШтрихкодEAN);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли;
		
		НужнаяНоменклатура			=	Рез[0].Владелец; 
		Упаковка					=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		НужнаяХар	=	Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(); 
		
		МРЦ	=	Неопределено;
		Если НужнаяНоменклатура.ВидНоменклатуры.ИспользоватьХарактеристики тогда			
			
			МРЦПачки = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиТабачнойПачки(СканированныйШК);
			Если МРЦПачки = Неопределено Тогда
				МРЦБлока = ШтрихкодированиеМОТПКлиентСервер.МРЦКодаМаркировкиБлока(СканированныйШК);
				Если МРЦБлока <> Неопределено Тогда
					мрц = МРЦБлока/10;
				КонецЕсли
			Иначе
				мрц = МРЦПачки;
			Конецесли; 
			
			Если МРЦ	=	Неопределено тогда
				СканированныйШК_Копия	=	СканированныйШК; 
				МРЦ	=	Сред(СканированныйШК_Копия,Найти(СканированныйШК_Копия,"8005")+4,3);
			КонецЕсли;
			
			ОтборНаим	=	Новый Структура("Наименование",Строка(мрц));
			Спр	=	Справочники.ХарактеристикиНоменклатуры.Выбрать(,НужнаяНоменклатура,ОтборНаим);
			Если Спр.Следующий() тогда
				НужнаяХар	=	Спр.Ссылка;
			КонецЕсли;			
		КонецЕсли; 
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);
		Отбор.Вставить("Характеристика",НужнаяХар);
			
		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			НужнаяСтрока = Объект.Товары.Добавить();
			НужнаяСтрока.Номенклатура	=	НужнаяНоменклатура;
			НужнаяСтрока.Характеристика	=	НужнаяХар;
			НужнаяСтрока.Количество		=	1;
			НужнаяСтрока.КоличествоФакт	=	1;

		иначе   
           	НужнаяСтрока	=	Строки[0];
			НужнаяСтрока.Количество	=	НужнаяСтрока.Количество + Кол;
			НужнаяСтрока.КоличествоФакт = НужнаяСтрока.Количество;
		КонецЕсли;
					

		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	иначе   
		
		Запрос	=	Новый запрос("ВЫБРАТЬ
		      	 	             |	Штрихкоды.Владелец КАК Владелец,
		      	 	             |	Штрихкоды.Упаковка КАК Упаковка
		      	 	             |ИЗ
		      	 	             |	РегистрСведений.Штрихкоды КАК Штрихкоды
		      	 	             |ГДЕ
		      	 	             |	Штрихкоды.Штрихкод = &Штрихкод"); 
		Запрос.УстановитьПараметр("Штрихкод",СканированныйШК); 
		рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда     
			Запрос.УстановитьПараметр("Штрихкод","0"+СканированныйШК);	
			рез = Запрос.Выполнить().Выгрузить();
	
			Если Рез.Количество() = 0 тогда  
				Запрос.УстановитьПараметр("Штрихкод","00000"+СканированныйШК);	
				рез = Запрос.Выполнить().Выгрузить();

				
				Если Рез.Количество() = 0 тогда  
					Сообщить("Строка не найдена. Штрихкод: "+СканированныйШК);
					Возврат;  
				КонецЕсли;   
			КонецЕсли;
		КонецЕсли; 
		НужнаяНоменклатура	=	Рез[0].Владелец; 
		Упаковка			=	Рез[0].Упаковка;
		
		Попытка
			Кол	=	Упаковка.Коэффициент;
			Если НЕ ЗначениеЗаполнено(Кол) тогда
				Кол	=	1;
			КонецЕсли;
		Исключение
			Кол	=	1;
		КонецПопытки;
		
		Отбор	=	новый Структура;
		Отбор.Вставить("Номенклатура",НужнаяНоменклатура);

		Строки	=	Объект.Товары.НайтиСтроки(Отбор);
		
		Если Строки.Количество() = 0 тогда
			НужнаяСтрока = Объект.Товары.Добавить();
			НужнаяСтрока.Номенклатура	=	НужнаяНоменклатура;
			НужнаяСтрока.Количество		=	1;
			НужнаяСтрока.КоличествоФакт	=	1;
		иначе         
		    НужнаяСтрока	=	Строки[0];	
			НужнаяСтрока.Количество		=	НужнаяСтрока.Количество + Кол;
			НужнаяСтрока.КоличествоФакт	=	НужнаяСтрока.Количество;
		КонецЕсли;
		
	
		Элементы.Товары.ТекущаяСтрока	=	НужнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьЕАН(ШК)
	Если лев(ШК,3) = "010" тогда
		ШК = Сред(СокрЛП(ШК),4);
	КонецЕсли;
	
	Если лев(ШК,5) = "00000" тогда
		флЭтоЕан8	=	Истина;
	иначе
		флЭтоЕан8	=	ложь;
	КонецЕсли;
	
	ШК  = ОбщегоНазначенияВызовСервера.УдалитьЛидирующиеНули(ШК);
	
	ШК	= лев(ШК,13);
	
	Если флЭтоЕан8 тогда
		ШК	= лев(ШК,8);
	иначе
		Попытка
			ФФФ	=	Число(ШК);
		Исключение
			ШК = Лев("0" + ШК, 13);
		КонецПопытки;
	КонецЕсли;
	
	Возврат ШК;
КонецФункции



&НаКлиенте
Процедура СформированПриИзменении(Элемент)
	ТекстВопроса = НСтр("ru='Документ Сформирован полностью?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ПроставитьСформирован", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);  
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьСформирован(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Сформирован		=	Истина;
		Элементы.Товары.Доступность			=	Ложь;
		Элементы.Сформирован.Доступность	=	Ложь;
		Элементы.Группа2.Доступность		=	Ложь;
		Элементы.Группа1.Доступность		=	Ложь;

		Записать();
	иначе
		Объект.Сформирован		=	Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для каждого Строка из Объект.Товары цикл
		Если НЕ ЗначениеЗаполнено(Строка.Номенклатура) тогда
			Сообщить("Не заполнена номенклатура в строке: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;
		
		Если Строка.Количество	=	0 тогда
			Сообщить("Не заполнено количество в строке: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;  
		
		Если найти(Строка.Номенклатура.Наименование," БК") тогда
			Сообщить("Нельзя добавлять БК. Строка: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;
		
		Если Строка.Номенклатура.ПометкаУдаления тогда
			Сообщить("Нельзя добавлять позиции помеченные на удаление. Строка: "+Строка.НомерСтроки);
			ОТказ = Истина;
		КонецЕсли;

	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Если Объект.Сформирован тогда ОТказ = Истина; КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	Элементы.Товары.ТекущиеДанные.КоличествоФакт = Элементы.Товары.ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура Собрано(Команда)
	Если Объект.Статус <> "Собирать" тогда
		Сообщить("Статус должен быть Собирать!");
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru='Документ собран?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ПроставитьСобран", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
КонецПроцедуры


&НаКлиенте
Процедура ПроставитьСобран(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Статус			= "Собран";
		Объект.ДатаСборкиФакт	= ТекущаяДата();
		ИзменитьПризнакОтправлен();		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьПризнакОтправлен()
	рег = РегистрыСведений.ТБК_ДанныеПоЗаявкамМагазинов.СоздатьНаборЗаписей();
	рег.Отбор.Документ.Установить(Объект.Ссылка);
	Рег.Прочитать();
	
	Если рег.Количество() <> 0 тогда	
		рег[0].Отправлен	=	Ложь;
		рег.Записать();
	КонецЕсли;
КонецПроцедуры
