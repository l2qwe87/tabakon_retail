&НаКлиенте
Процедура ТБКСогласоватьПосле(Команда)
	Если Объект.Статус	=	ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Согласован") тогда
		Сообщить("Заказ уже согласован!");
		Возврат          	
	КонецЕсли;

	
	ТекстВопроса = НСтр("ru='Заказ полностью подготовлен?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ТБКСогласовать", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);   	


КонецПроцедуры

&НаКлиенте
Процедура ТБКСогласовать(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Статус							=	ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Согласован");
		Объект.НаличиеНезарезервированныхСтрок	= Истина; //  метка, чтобы понимать отправлено изменение по заказу в розницу или нет
		Записать();
		Закрыть();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТБКВыкуплен(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Статус	=	ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Закрыт");
		Объект.НаличиеНезарезервированныхСтрок	= Истина; //  метка, чтобы понимать отправлено изменение по заказу в розницу или нет 
		Записать();
		Закрыть();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТБКВыкупленПосле(Команда)
	ТекстВопроса = НСтр("ru='Заказ полностью выкуплен?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ТБКВыкуплен", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 

КонецПроцедуры


&НаКлиенте
Процедура ТБКОплатить(Команда)
	Если Модифицированность Тогда 
		Попытка
			ПараметрыЗаписи = Новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись);
			Записать(ПараметрыЗаписи); 			
	Исключение
			ТекстСообщения = НСтр("ru = 'Документ невозможно записать'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецПопытки;
	КонецЕсли;	
	
	ТекстВопроса = НСтр("ru='Перейти к оплате зкааза?'");
	ОбработчикОповещения = Новый ОписаниеОповещения("ПеренестиВРМК", ЭтотОбъект);
	ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);  
	
КонецПроцедуры


&НаКлиенте
Процедура ТБКПриОткрытииПосле(Отказ)
	УстановитьВидимостьКнопок();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьКнопок()
	флМожноПробивать = ПроверитьМожноПробивать(Объект.Ссылка);
	
	Элементы.ФормаОплатить.Доступность   		=  флМожноПробивать; 
	
	Если не ОбщегоНазначенияВызовСервера.ПроверитьВозможностьРедактирования_Общая() тогда
		Элементы.Статус.ТолькоПросмотр	=	Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьМожноПробивать(Ссылка)
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ЧекККМТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.ЗаказПокупателя = &ЗаказПокупателя
	      	 	             |	И ЧекККМТовары.Ссылка.Проведен");
	Запрос.УстановитьПараметр("ЗаказПокупателя",Ссылка);
	
	Возврат Запрос.Выполнить().Пустой(); 
КонецФункции

&НаКлиенте
Процедура ТБКОтвязатьЧекПосле(Команда)
	Пароль = "";
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводСтроки", ЭтаФорма);
	ПоказатьВводСтроки(ОписаниеОповещения, Пароль, "Введите пароль: "); 
КонецПроцедуры

&НаКлиенте
Процедура ВводСтроки(ПолученноеЗначение, ПереданныеПараметры) Экспорт
	Если ПолученноеЗначение = "0000" тогда 
		ТБКОтвязатьЧекПослеНаСервере(Объект.Ссылка);
		УстановитьВидимостьКнопок();
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТБКОтвязатьЧекПослеНаСервере(Ссылка)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЧекККМТовары.Ссылка КАК Ссылка
	      	 	             |ИЗ
	      	 	             |	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	      	 	             |ГДЕ
	      	 	             |	ЧекККМТовары.ЗаказПокупателя = &ЗаказПокупателя
	      	 	             |	И ЧекККМТовары.Ссылка.Проведен");
	Запрос.УстановитьПараметр("ЗаказПокупателя",Ссылка);
	
	Рез = Запрос.Выполнить().Выгрузить();
	Если Рез.Количество() = 0 тогда
		Сообщить("К этому документу нет чеков!");
	КонецЕсли;
	
	Для каждого Строка из рез цикл
		Об = Строка.Ссылка.ПолучитьОбъект();
		Для каждого Строка из Об.товары цикл
			Строка.ЗаказПокупателя	=	Документы.ЗаказПокупателя.ПустаяСсылка();
		КонецЦикла;
			
		Об.ДополнительныеСвойства.Вставить("ЗагрузкаДанныхИзРабочегоМеста",истина);
		Об.Записать(РежимЗаписиДокумента.ОтменаПроведения);

		Сообщить("Выполнено успешно!");
	КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура ПеренестиВРМК(Результат, ДополнительныеПараметры) экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Элементы.ФормаОплатить.Доступность   = Ложь; 
		
		Объект.Статус	=	ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Закрыт");
		Объект.НаличиеНезарезервированныхСтрок	= Истина; //  метка, чтобы понимать отправлено изменение по заказу в розницу или нет 
		
		ОкнаПриложения = ПолучитьОкна();
		Для каждого ОкноПриложения Из ОкнаПриложения Цикл
			// Анализ заголовка окна
			//Закрываем окна с заказами
			Если Найти(ОкноПриложения.Заголовок,"Заказ") Тогда
				НайденнаяФорма = ОкноПриложения.Содержимое[0];
				НайденнаяФорма.Закрыть();
			КонецЕсли;
			
			
			Если ОкноПриложения.Заголовок = "" или ОкноПриложения.Заголовок = "*" Тогда
				НужныйСклад		 =	ПолучитьСклад();

				
				НайденнаяФорма = ОкноПриложения.Содержимое[0];
				НайденнаяФорма.Объект.Товары.очистить();
				
				НужныйСклад		 =	ПолучитьСклад();
				НужнаяОрг		 =	НайденнаяФорма.Объект.Организация;
				НужаяСНО		=	ПолучитьВидНалогаСервер(НужнаяОрг);
				Для каждого Строка из Объект.Товары цикл
					НоваяСтрока	=	НайденнаяФорма.Объект.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
					НоваяСтрока.Склад			=	НужныйСклад;
					НоваяСтрока.Организация		=	НужнаяОрг;
					НоваяСтрока.ЗаказПокупателя	=	Объект.Ссылка;
					НоваяСтрока.СтавкаНДС		=	ПолучитьСтавкуБезНДС();
					НоваяСтрока.ВидНалога		=	НужаяСНО;
					Если ЭтоМаркированнаяНоменклатура(НоваяСтрока.Номенклатура) тогда
						НоваяСтрока.НеобходимостьВводаАкцизнойМарки	=	истина;
						НоваяСтрока.СтатусПроверкиГосИС 			= 2;
						НоваяСтрока.ВидПродукцииИС					= ПолучитьВидТабак();
						НоваяСтрока.МаркируемаяПродукция			= Истина;  
					КонецЕсли;
				КонецЦикла;
				
				НайденнаяФорма.Активизировать();
				Возврат;			
				
			КонецЕсли;
		КонецЦикла; 
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьСклад()
	Возврат ОбщегоНазначения.ПолучитьСкладИзООРП();
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоМаркированнаяНоменклатура(Номенклатура)
	возврат Найти(Номенклатура.ВидНоменклатуры.Наименование,"Табак (х)") или Номенклатура.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция;	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидТабак()
	Возврат Перечисления.ВидыПродукцииИС.Табачная;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтавкуБезНДС()
	Возврат Перечисления.СтавкиНДС.БезНДС;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидНалогаСервер(НужнаяОрг)
	Запрос	=	Новый запрос("ВЫБРАТЬ
	      	 	             |	ПрименениеСистемНалогообложенияСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ПрименениеСистемНалогообложения.СрезПоследних КАК ПрименениеСистемНалогообложенияСрезПоследних
	      	 	             |ГДЕ
	      	 	             |	ПрименениеСистемНалогообложенияСрезПоследних.Организация = &Организация");
	Запрос.УстановитьПараметр("Организация",НужнаяОрг);
	
	Рез = Запрос.Выполнить().Выгрузить();
	Если рез.Количество() = 0 тогда
		Сообщить("Внимание! Не найдена система налогооблажения!");
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат рез[0].СистемаНалогообложения;
	
КонецФункции

&НаСервере
Процедура ТБКПередЗаписьюНаСервереВместо(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ТБКСтатусПриИзмененииПосле(Элемент)
	Объект.НаличиеНезарезервированныхСтрок 	= Истина;
КонецПроцедуры

//Марк 28.07.2023
&НаСервере
Процедура ТБКПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ПриЗаписиПерепроводить = Ложь;
	Объект.НаличиеНезарезервированныхСтрок = Истина;
	//ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПровестиИЗакрыть.Видимость = Ложь;
	объект.ЖелаемаяДатаПродажи = '00010101';
	Если НЕ Объект.Магазин.Пустая() Тогда

		Объект.Склад = объект.Магазин.СкладПродажи;
		Объект.Организация = Объект.Склад.Организация;
	
	КонецЕсли;
	
	Объект.Продавец = Объект.Ответственный.ФизическоеЛицо;
	
КонецПроцедуры

Функция ПроверкаРеквизитовДляЗаписи()
	
	Если  НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен склад!";
		Сообщение.Поле = "Склад";
		Сообщение.УстановитьДанные(Объект.Склад);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен магазин!";
		Сообщение.Поле = "Магазин";
		Сообщение.УстановитьДанные(Объект.Магазин);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнена организация!";
		Сообщение.Поле = "Организация";
		Сообщение.УстановитьДанные(Объект.Организация);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(Телефон) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен телефон клиента!";
		Сообщение.Поле = "Телефон";
		Сообщение.УстановитьДанные(Телефон);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли Элементы.Телефон.РасширеннаяПодсказка.Заголовок = "" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнено имя клиента!";
		Сообщение.Поле = "Имя";
		Сообщение.УстановитьДанные(Телефон);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли Объект.Товары.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет товаров";
		Сообщение.Поле = "Товары";
		Сообщение.УстановитьДанные(Объект.Товары);
		Сообщение.Сообщить();
		Возврат Истина;
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Продавец) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен продавец";
		Сообщение.Поле = "Продавец";
		Сообщение.УстановитьДанные(Объект.Продавец);
		Сообщение.Сообщить();
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТБКПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	Отказ = ПроверкаРеквизитовДляЗаписи();
КонецПроцедуры


&НаКлиенте
Процедура ТБКЗаписатьИЗакрытьПосле(Команда)
	Записать();
	Закрыть();
КонецПроцедуры
//КонецМарк
