
Функция ЧисткаШтрихкодов(номенклатура = неопределено) ЭКСПОРТ
	Запрос = Новый Запрос;
	ЗАпрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Штр.Владелец КАК Владелец,
	               |	Штр.Штрихкод КАК Штрихкод,
	               |	Штр.Характеристика КАК Характеристика
	               |ИЗ
	               |	РегистрСведений.Штрихкоды КАК Штр
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрПроверка1
	               |		ПО (ШтрПроверка1.Владелец = Штр.Владелец)
	               |			И (ШтрПроверка1.Штрихкод = Штр.Штрихкод)
	               |			И (ШтрПроверка1.Характеристика <> Штр.Характеристика)
	               |ГДЕ
	               |	(Штр.Характеристика ЕСТЬ NULL
	               |			ИЛИ Штр.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	               |	И Штр.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики = ИСТИНА";
	
	
	
	
	Если НЕ (номенклатура = неопределено) Тогда
		Запрос.Текст = Запрос.Текст +" И Штр.Владелец = &Номенклатура";
		Запрос.УстановитьПараметр("Номенклатура",номенклатура);
	КонецЕсли;
	
	рез = Запрос.Выполнить().Выбрать();
	
	
	Пока рез.Следующий() Цикл
		нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		нз.Отбор.Штрихкод.Установить(рез.Штрихкод, ИСТИНА);
		нз.Отбор.Владелец.Установить(рез.Владелец, ИСТИНА);
		нз.Отбор.Характеристика.Установить(рез.Характеристика, ИСТИНА);
		
		нз.Записать(ИСТИНА);
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Штр.Владелец КАК Владелец,
	               |	Штр.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.Штрихкоды КАК Штр
	               |ГДЕ
	               |	НЕ Штр.Характеристика ЕСТЬ NULL
	               |	И НЕ Штр.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |	И Штр.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики = ЛОЖЬ";
	
	Если НЕ (номенклатура = неопределено) Тогда
		Запрос.Текст = Запрос.Текст +" И Штр.Владелец = &Номенклатура";
		Запрос.УстановитьПараметр("Номенклатура",номенклатура);
	КонецЕсли;
	
	рез = Запрос.Выполнить().Выбрать();
	Пока рез.Следующий() Цикл
		нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		нз.Отбор.Штрихкод.Установить(рез.Штрихкод, ИСТИНА);
		нз.Отбор.Владелец.Установить(рез.Владелец, ИСТИНА);
		
		нз.Прочитать();
		уп = неопределено;
		Пока нз.Количество() > 1 Цикл
			Если ЗначениеЗаполнено(нз.Получить(0).Упаковка) Тогда
				уп = нз.Получить(0).Упаковка;
			КонецЕсли;
			нз.Удалить(0);
		КонецЦикла;
		
		нз.Получить(0).Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Если НЕ уп = Неопределено Тогда
			нз.Получить(0).Упаковка = уп;
		КонецЕсли;
		
		нз.Записать(ИСТИНА);
	КонецЦикла;
	
	
	Если НЕ ЗначениеЗаполнено(номенклатура) Тогда
		Фикс_ПопыткаУдалитьДубли();
		УдалитьНеВерные_ШтрихкодыУпаковокТоваров();
	КонецЕсли;
КонецФункции

Функция УдалитьНеВерные_ШтрихкодыУпаковокТоваров() ЭКСПОРТ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ШтрихкодыУпаковокТоваров.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
	               |ГДЕ
	               |	ШтрихкодыУпаковокТоваров.Номенклатура = Значение(Справочник.Номенклатура.ПустаяССылка)";
	
	Рез = Запрос.Выполнить().Выбрать();
	
	Пока Рез.Следующий() Цикл
		Попытка
			Рез.Ссылка.ПолучитьОбъект().Удалить();
		Исключение
		Конецпопытки;
	КонецЦикла;
КонецФункции

Функция Фикс_ПопыткаУдалитьДубли()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Штрихкоды.Владелец КАК Владелец,
	               |	Штрихкоды.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.Штрихкоды КАК Штрихкоды
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТБК_Штрихкоды КАК кэш
	               |		ПО Штрихкоды.Владелец = кэш.Владелец
	               |			И Штрихкоды.Штрихкод = кэш.Штрихкод
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Штрихкоды.Владелец,
	               |	Штрихкоды.Штрихкод
	               |
	               |ИМЕЮЩИЕ
	               |	(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Штрихкоды.ТипШтрихкода) > 1
	               |		ИЛИ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Штрихкоды.Упаковка) > 1)";
	
	рез = Запрос.Выполнить().Выбрать();
	Пока рез.Следующий() Цикл		
		
		НачатьТранзакцию();
		
		нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		нз.Отбор.Штрихкод.Установить(рез.Штрихкод, ИСТИНА);
		нз.Отбор.Владелец.Установить(рез.Владелец, ИСТИНА); 
		нз.Записать(ИСТИНА);
		
		ВостановитьШтрихкод(рез.Штрихкод,рез.Владелец);
		
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
КонецФункции



Функция ВостановитьШтрихкод(Штрихкод,Владелец)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТБК_Штрихкоды.Владелец КАК Владелец,
	                      |	ТБК_Штрихкоды.Упаковка КАК Упаковка,
	                      |	ТБК_Штрихкоды.Штрихкод КАК Штрихкод,
	                      |	ТБК_Штрихкоды.ТипШтрихкода КАК ТипШтрихкода,
	                      |	ТБК_Штрихкоды.Упаковка.Наименование КАК УпаковкаНаименование,
	                      |	ТБК_Штрихкоды.Владелец.ВидНоменклатуры.ИспользоватьХарактеристики КАК ВладелецВидНоменклатурыИспользоватьХарактеристики
	                      |ИЗ
	                      |	РегистрСведений.ТБК_Штрихкоды КАК ТБК_Штрихкоды
	                      |ГДЕ
	                      |	ТБК_Штрихкоды.Штрихкод = &Штрихкод
	                      |	И ТБК_Штрихкоды.Владелец = &Владелец");		
	Запрос.УстановитьПараметр("Штрихкод",Штрихкод);
	Запрос.УстановитьПараметр("Владелец",Владелец);
	
	рез = Запрос.Выполнить().Выбрать();
	рез.Следующий();
	
	прототип = рез;
	
	запись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств( запись,прототип);
	запись.Штрихкод = штрихкод;
	
	Если рез.ВладелецВидНоменклатурыИспользоватьХарактеристики = ИСТИНА Тогда
		выборкаХарактеристик = Справочники.ХарактеристикиНоменклатуры.Выбрать(,Владелец);
		Пока выборкаХарактеристик.Следующий() Цикл
			Если не выборкаХарактеристик.ПометкаУдаления Тогда
				Запись.Характеристика = выборкаХарактеристик.Ссылка;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СтрДлина(запись.Штрихкод) = 8 Тогда
		запись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8;
	иначе
		запись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
	КонецЕсли;
	
	Если рез.УпаковкаНаименование = "шт" или  рез.УпаковкаНаименование = "шт." Тогда
		запись.Упаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	запись.Записать(истина);

КонецФункции

Функция ОбработатьТипыШтрихкодов() ЭКСПОРТ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТипыШтрихкодов.Ссылка КАК Ссылка,
				   |	ТипыШтрихкодовНорм.Ссылка КАК СсылкаНорм
	               |ИЗ
	               |	ПланВидовХарактеристик.ТипыШтрихкодов КАК ТипыШтрихкодов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыШтрихкодов КАК ТипыШтрихкодовНорм
	               |		ПО (ТипыШтрихкодовНорм.Наименование = ТипыШтрихкодов.Наименование)
	               |			И (ТипыШтрихкодовНорм.Предопределенный = ИСТИНА)
	               |ГДЕ
	               |	ТипыШтрихкодов.Предопределенный = ЛОЖЬ
	               |	И НЕ ТипыШтрихкодов.Наименование ПОДОБНО ""%удал%""";
	
	
	рез = Запрос.Выполнить().Выбрать();
	Пока рез.Следующий() Цикл
		Если ЗначениеЗаполнено(рез.СсылкаНорм) Тогда
			ЗамениьТипШтрихкодаВРегистре(рез.Ссылка,рез.СсылкаНорм);
		КонецЕсли;
		
		об = рез.Ссылка.ПолучитьОбъект();
		Если ЛОЖЬ Тогда об = ПланыВидовХарактеристик.ТипыШтрихкодов.СоздатьЭлемент(); КонецЕсли;
		об.Наименование = об.Наименование + " (удал.)";
		об.Записать();
		об = рез.Ссылка.ПолучитьОбъект();
		об.УстановитьПометкуУдаления(Истина);
		
	КонецЦикла;	
КонецФункции


Функция ЗамениьТипШтрихкодаВРегистре(старый, нов)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Штрихкоды.Штрихкод КАК Штрихкод,
	               |	Штрихкоды.Владелец КАК Владелец
	               |ИЗ
	               |	РегистрСведений.Штрихкоды КАК Штрихкоды
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихкодыНов
	               |		ПО (ШтрихкодыНов.Штрихкод = Штрихкоды.Штрихкод)
	               |			И (ШтрихкодыНов.Владелец = Штрихкоды.Владелец)
	               |			И (ШтрихкодыНов.ТипШтрихкода = &ТипШтрихкодаНов)
	               |ГДЕ
	               |	Штрихкоды.ТипШтрихкода = &ТипШтрихкода
	               |	И ШтрихкодыНов.Владелец ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТипШтрихкода",старый);
	Запрос.УстановитьПараметр("ТипШтрихкодаНов",нов);
	
	рез = Запрос.Выполнить().Выбрать();
	Пока рез.Следующий() Цикл
		нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
		нз.Отбор.Штрихкод.Установить(рез.Штрихкод, ИСТИНА);
		нз.Отбор.Владелец.Установить(рез.Владелец, ИСТИНА);
		
		нз.Прочитать();
		
		Для Каждого запись из нз Цикл
			запись.ТипШтрихкода = нов;
		КонецЦикла;
		
		Попытка
			нз.Записать(ИСТИНА);
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	
	нз = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
	нз.Отбор.ТипШтрихкода.Установить(старый, ИСТИНА);
	Попытка
		нз.Записать(ИСТИНА);
	Исключение
	КонецПопытки;

КонецФункции