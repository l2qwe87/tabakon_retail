
&НаСервере
Процедура ТБКПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	КонстантаДоступнаНефискальнаяПечать	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ДоступнаНефискальнаяПечать");
	Если КонстантаДоступнаНефискальнаяПечать <> Неопределено тогда
		ДоступнаНефискальнаяПечать =   КонстантаДоступнаНефискальнаяПечать;
	КонецЕсли;
	
	КонстантаЧасНачалаНефискальнаяПечать	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ЧасНачалаНефискальнаяПечать");
	Если КонстантаЧасНачалаНефискальнаяПечать <> Неопределено тогда
		ЧасНачалаНефискальнаяПечать =   КонстантаЧасНачалаНефискальнаяПечать;
	КонецЕсли;

	КонстантаДоступнаПроверкаОрганизаций	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ДоступнаПроверкаОрганизаций");
	Если КонстантаДоступнаПроверкаОрганизаций <> Неопределено тогда
		ДоступнаПроверкаОрганизаций =   КонстантаДоступнаПроверкаОрганизаций;
	КонецЕсли;
	
	КонстантаИспользоватьВторойМонитор	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ИспользоватьВторойМонитор");
	Если КонстантаИспользоватьВторойМонитор <> Неопределено тогда
		ИспользоватьВторойМонитор =   КонстантаИспользоватьВторойМонитор;
	КонецЕсли;
	
	КонстантаСдвигПоРазрешениюЭкрана	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("СдвигПоРазрешениюЭкрана");
	Если КонстантаСдвигПоРазрешениюЭкрана <> Неопределено тогда
		СдвигПоРазрешениюЭкрана =   КонстантаСдвигПоРазрешениюЭкрана;
	КонецЕсли;
	
	КонстантаВариантМотивации	=	ОбщегоНазначения.ПолучитьЗначениеТБККонстанты("ВариантМотивации");
	Если КонстантаВариантМотивации <> Неопределено тогда
		ВариантМотивации =   КонстантаВариантМотивации;
	КонецЕсли;


	
КонецПроцедуры

&НаСервере
Процедура ТБКПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
	Рег.Отбор.ИмяКонстанты.Установить("ДоступнаНефискальнаяПечать");
	НоваяСтр	=	Рег.Добавить();
	НоваяСтр.ЗначениеКонстанты	=	ДоступнаНефискальнаяПечать;
	НоваяСтр.ИмяКонстанты		=	"ДоступнаНефискальнаяПечать";
	рег.Записать();	
	
	Если ЧасНачалаНефискальнаяПечать >0 тогда
		Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
		Рег.Отбор.ИмяКонстанты.Установить("ЧасНачалаНефискальнаяПечать");
		НоваяСтр	=	Рег.Добавить();
		НоваяСтр.ЗначениеКонстанты	=	ЧасНачалаНефискальнаяПечать;
		НоваяСтр.ИмяКонстанты		=	"ЧасНачалаНефискальнаяПечать";
		рег.Записать();
	КонецЕсли;
	
	
	Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
	Рег.Отбор.ИмяКонстанты.Установить("ДоступнаПроверкаОрганизаций");
	НоваяСтр	=	Рег.Добавить();
	НоваяСтр.ЗначениеКонстанты	=	ДоступнаПроверкаОрганизаций;
	НоваяСтр.ИмяКонстанты		=	"ДоступнаПроверкаОрганизаций";
	рег.Записать();
	
	Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
	Рег.Отбор.ИмяКонстанты.Установить("ИспользоватьВторойМонитор");
	НоваяСтр	=	Рег.Добавить();
	НоваяСтр.ЗначениеКонстанты	=	ИспользоватьВторойМонитор;
	НоваяСтр.ИмяКонстанты		=	"ИспользоватьВторойМонитор";
	рег.Записать();

	
	Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
	Рег.Отбор.ИмяКонстанты.Установить("СдвигПоРазрешениюЭкрана");
	НоваяСтр	=	Рег.Добавить();
	НоваяСтр.ЗначениеКонстанты	=	СдвигПоРазрешениюЭкрана;
	НоваяСтр.ИмяКонстанты		=	"СдвигПоРазрешениюЭкрана";
	рег.Записать();
	
	
	Рег = РегистрыСведений.ТБК_Константы.СоздатьНаборЗаписей();
	Рег.Отбор.ИмяКонстанты.Установить("ВариантМотивации");
	НоваяСтр	=	Рег.Добавить();
	НоваяСтр.ЗначениеКонстанты	=	ВариантМотивации;
	НоваяСтр.ИмяКонстанты		=	"ВариантМотивации";
	рег.Записать();


КонецПроцедуры
