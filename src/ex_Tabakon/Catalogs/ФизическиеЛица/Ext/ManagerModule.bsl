Функция ГенерацияЮзеровДляФЛ() ЭКСПОРТ
	
	//ВОЗВРАТ 0;
	
	//TODO: Переделаьт на запрос ... или всё же это зона ответсвенности клиента вэб сервиса
	выборка = Справочники.ФизическиеЛица.Выбрать();
	
	текущийЧас = Час(ТекущаяДата());
	
	Если текущийЧас > 1 и текущийЧас < 6 тогда
		Пауза 		= 1;
		КолИтераций	=	100;
	иначе
		Пауза 		= 10;
		КолИтераций	=	3;	
	КонецЕсли;
	
	инд = 0;
	Пока выборка.Следующий() Цикл
		Если выборка.ЭтоГруппа = ИСТИНА Тогда
			продолжить;
		конецЕсли;
		
		Если НЕ ЗначениеЗаполнено(выборка.Наименование) Тогда
			продолжить;
		конецЕсли;
		
		Если выборка.ПометкаУдаления = ИСТИНА Тогда
			продолжить;
		конецЕсли;
		
		Если выборка.ДатаРождения < ДАТА(1920,01,01) Тогда
			продолжить;
		конецЕсли;
		
		нФИО =выборка.Наименование; 
		нЛогин = ""+выборка.Наименование+" "+Формат(выборка.ДатаРождения,"ДФ=dd");
		нПароль = ГенерацияПароля(выборка);
		
		НачатьТранзакцию();
		
		Если Выборка.Родитель.Наименование = "КРО" или Выборка.Родитель.Родитель.Наименование = "КРО" тогда
			резСоздания = СоздатьПользователя(Новый Структура("FullName,UserName,Password,Birthdate",нФИО, нЛогин,нПароль, выборка.ДатаРождения), истина);
		иначе
			резСоздания = СоздатьПользователя(Новый Структура("FullName,UserName,Password,Birthdate",нФИО, нЛогин,нПароль, выборка.ДатаРождения));
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		

		Если резСоздания = Истина Тогда
			//ОбщегоНазначенияБТС.Пауза(4);
			ОбщегоНазначенияБТС.Пауза(Пауза);
			инд = инд + 1;
		Иначе
			//ОбщегоНазначенияБТС.Пауза(1);
		КонецЕсли;
		
		//Если инд = 10 тогда
		Если инд = КолИтераций тогда
			//прервать;
			ВызватьИсключение "Продолжим в следующую итерацию";
		Конецесли;
	КонецЦикла;
	
	
КонецФункции	

Функция ГенерацияПароля(физЛицо) ЭКСПОРТ
	Возврат Формат(физЛицо.ДатаРождения,"ДФ=ddMMyy")
КонецФункции

Функция СоздатьПользователя(вхПараметры, ФлЭтоКРО	=	Ложь) ЭКСПОРТ
	ИмяФЛ			= СокрЛП(вхПараметры.FullName);
	ИмяПользователя = СокрЛП(вхПараметры.UserName);
	Пароль			= СокрЛП(вхПараметры.Password);
	
	ПроверкаНаСуществующегоПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	Если ПроверкаНаСуществующегоПользователя <> Неопределено Тогда
		сообщить("Указанное ФИО Пользователя уже используется !!! ");
		результ = Ложь;
		Возврат результ;
	КонецЕсли;
	
	
	Если ТипЗнч(вхПараметры.Birthdate) = Тип("Строка") Тогда
		ДатаРождения=Дата(СокрЛП(вхПараметры.Birthdate));
	иначе
		ДатаРождения=вхПараметры.Birthdate;
	КонецЕсли;
	НовоеФЛ = ПолучитьФизЛицо(ИмяФЛ, ДатаРождения);
	
	Если НЕ ЗначениеЗаполнено(НовоеФЛ) Тогда
		месс = ""+ИмяФЛ+" не найден в справочнике ФЛ";
		сообщить(месс);
		//ВызватьИсключение месс;
		Возврат ЛОЖЬ;
	КонецЕсли;
	
	Если ПроверкаНаСуществующегоПользователя = Неопределено Тогда	
		ОписаниеПользователяИБ            = Пользователи.НовоеОписаниеПользователяИБ();
		ПользовательИБСуществует          = Ложь;
		ДоступКИнформационнойБазеРазрешен = Ложь;
		
		// Заполнение начальных значений свойств пользователяИБ.
		ОписаниеПользователяИБ.ПоказыватьВСпискеВыбора   = Истина;
		ОписаниеПользователяИБ.АутентификацияСтандартная = Истина;	
		
		ОписаниеПользователяИБ.Вставить("Действие", "Записать");
		ОписаниеПользователяИБ.Вставить("Имя", ИмяПользователя);
		ОписаниеПользователяИБ.Вставить("Пароль", Пароль);

		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование 					= ИмяПользователя;

		НовыйПользователь.ДополнительныеСвойства.Вставить(
			"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
			
		НовыйПользователь.Записать();
		
		ГруппаДоступа = ПолучитьГруппуДоступаПоУмолчанию(ФлЭтоКРО);
		
		Если ЗначениеЗаполнено(ГруппаДоступа) тогда
			ГруппаДоступа = ГруппаДоступа.ПолучитьОбъект();
			НоваяСтрока = ГруппаДоступа.Пользователи.Добавить();
			НоваяСтрока.Пользователь = НовыйПользователь.Ссылка;
			ГруппаДоступа.Записать();
		КонецЕсли;
		
		//Заполняем Настрйоки
		//УстановитьДопПрава(НовыйПользователь.Ссылка);
		
		//ПользовательНастроек = Справочники.Пользователи.НайтиПоНаименованию("Михайлова Наталья Викторовна");
		ПользовательНастроек = ПолучитьПользователяБезАдминскихПрав();
		
		Если ЗначениеЗаполнено(ПользовательНастроек) тогда
			КопированиеВсехНастроек(ПользовательНастроек,НовыйПользователь.Ссылка);
		КонецЕсли; 
		
		
		НовыйПользователь.Магазин 		 =  НовоеФЛ.Магазин;
		НовыйПользователь.Подразделение  =  НовоеФЛ.Магазин;
		НовыйПользователь.ФизЛицо 		 =  НовоеФЛ.Ссылка;
		НовыйПользователь.ФизическоеЛицо =  НовоеФЛ.Ссылка;
		НовыйПользователь.Записать();
		
		результ = истина;
	КонецЕсли;
	
	Возврат результ;

КонецФункции

Функция ПолучитьГруппуДоступаПоУмолчанию(ФлЭтоКРО = Ложь)
	
	Если ФлЭтоКРО тогда
		возврат Справочники.ГруппыДоступа.НайтиПоНаименованию("Администраторы");
	иначе
		возврат Справочники.ГруппыДоступа.НайтиПоНаименованию("Кассир");  
	КонецЕсли;
	
конецФункции

Функция ПолучитьФизЛицо(ИмяФЛ, ДатаРождения)
	
	//НовоеФЛ	=	Справочники.ФизическиеЛица.СоздатьЭлемент();
	//НовоеФЛ.Наименование	=	ИмяФЛ;
	//НовоеФЛ.Сотрудник		=	Истина;
	//НовоеФЛ.Магазин			=	ОбщегоНазначения.ПолучитьМагазин();
	//НовоеФЛ.Пол				=	Перечисления.ПолФизическогоЛица.Мужской;
	//Попытка
	//	НовоеФЛ.ДатаРождения	=	Дата(СокрЛП(вхПараметры.Birthdate));
	//Исключение
	//КонецПопытки;
	//
	//НовоеФЛ.Записать();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК Ссылка,
	               |	ФизическиеЛица.Сотрудник КАК Сотрудник,
	               |	ФизическиеЛица.Магазин КАК Магазин
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |ГДЕ
	               |	ФизическиеЛица.Наименование = &ИмяФЛ
	               |	И ФизическиеЛица.ДатаРождения >= &ДатаРожденияН
	               |	И ФизическиеЛица.ДатаРождения <= &ДатаРожденияК";
	
	Запрос.УстановитьПараметр("ИмяФЛ", ИмяФЛ);
	Запрос.УстановитьПараметр("ДатаРожденияН",НачалоДня(ДатаРождения));
	Запрос.УстановитьПараметр("ДатаРожденияК",КонецДня(ДатаРождения));
	
	
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда
		//фикс
		дефМагазин = ОбщегоНазначения.ПолучитьМагазин();
		Если (Рез.Сотрудник) = ЛОЖЬ ИЛИ (Рез.Магазин <> дефМагазин) Тогда
			фл = Рез.Ссылка.ПолучитьОбъект();
			Если ЛОЖЬ Тогда фл = Справочники.ФизическиеЛица.СоздатьЭлемент(); Конецесли;
			фл.Сотрудник=Истина;
			фл.Магазин = дефМагазин;
			фл.ОбменДанными.Загрузка = Истина;
			фл.Записать();
		КонецЕсли;		
		
		Возврат Рез.Ссылка;
	КонецЕсли;
КонецФункции


Функция УстановитьДопПрава(пользователь)
	//Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	//Набор.Отбор.Пользователь.Установить(пользовател);
	
	
	
	//Набор.Записать(Истина);
КонецФункции

Процедура КопированиеВсехНастроек(ПользовательСсылка,ПользовательПриемник)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Право КАК Право,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Значение КАК Значение
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	      	 	             |ГДЕ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь",ПользовательСсылка);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(ПользовательПриемник);
	Для каждого Строка из Рез цикл
		НоваяСтрока = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
		НоваяСтрока.Пользователь = ПользовательПриемник; 
	КонецЦикла;
	Набор.Записать();
КонецПроцедуры

Функция ПолучитьПользователяБезАдминскихПрав()
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя");
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 тогда
		Возврат Рез[0].Пользователь;
	КонецЕсли;
КонецФункции

Процедура ПроверкаФИО() экспорт
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ФизическиеЛица.Ссылка КАК Ссылка,
	      	 	             |	ФИОФизЛиц.ФизЛицо КАК ФизЛицо,
	      	 	             |	ЕСТЬNULL(ФИОФизЛиц.Фамилия, 0) КАК Поле1
	      	 	             |ПОМЕСТИТЬ Итог
	      	 	             |ИЗ
	      	 	             |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	      	 	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц КАК ФИОФизЛиц
	      	 	             |		ПО (ФИОФизЛиц.ФизЛицо = ФизическиеЛица.Ссылка)
	      	 	             |;
	      	 	             |
	      	 	             |////////////////////////////////////////////////////////////////////////////////
	      	 	             |ВЫБРАТЬ
	      	 	             |	Итог.Ссылка КАК Ссылка,
	      	 	             |	Итог.ФизЛицо КАК ФизЛицо,
	      	 	             |	Итог.Ссылка.Наименование КАК Наименование
	      	 	             |ИЗ
	      	 	             |	Итог КАК Итог
	      	 	             |ГДЕ
	      	 	             |	Итог.Поле1 = 0");
	Рез = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка из Рез цикл
		Если Строка.Ссылка.ЭтоГруппа Тогда Продолжить; КонецЕсли;
		НужноеНаименование = СокрЛП(Строка.Наименование);
		
		ПервыйПробел = СтрНайти(НужноеНаименование," ");
		ВторойПробел = СтрНайти(НужноеНаименование," ",НаправлениеПоиска.СКонца);
		ДлинаИмя =  ВторойПробел -  ПервыйПробел - 1;

		
		Фамилия		=	Сред(НужноеНаименование,1,ПервыйПробел-1);
		Имя			=	Сред(НужноеНаименование,ПервыйПробел+1,ДлинаИмя);
		Отчество	=	Сред(НужноеНаименование,ВторойПробел+1);
		
		МенеджерЗаписи = РегистрыСведений.ФИОФизЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ФизЛицо  = Строка.Ссылка;
		МенеджерЗаписи.Период   = ТекущаяДата();
		МенеджерЗаписи.Фамилия  = Фамилия;
		МенеджерЗаписи.Имя 		= Имя;
		МенеджерЗаписи.Отчество = Отчество;
		МенеджерЗаписи.Записать(Истина); 		
	КонецЦикла;
КонецПроцедуры