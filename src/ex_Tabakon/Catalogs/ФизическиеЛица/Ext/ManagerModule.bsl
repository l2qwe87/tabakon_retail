Функция ГенерацияЮзеровДляФЛ() ЭКСПОРТ
	
	//ВОЗВРАТ 0;
	
	//TODO: Переделаьт на запрос ... или всё же это зона ответсвенности клиента вэб сервиса
	выборка = Справочники.ФизическиеЛица.Выбрать();
	
	
	инд = 0;
	Пока выборка.Следующий() Цикл
		Если выборка.ЭтоГруппа = ИСТИНА Тогда
			продолжить;
		конецЕсли;
		
		Если НЕ ЗначениеЗаполнено(выборка.Наименование) Тогда
			продолжить;
		конецЕсли;
		
		Если выборка.ПометкаУдаления = ИСТИНА Тогда
			продолжить;
		конецЕсли;
		
		Если выборка.ДатаРождения < ДАТА(1920,01,01) Тогда
			продолжить;
		конецЕсли;
		
		нФИО =выборка.Наименование; 
		нЛогин = ""+выборка.Наименование+" "+Формат(выборка.ДатаРождения,"ДФ=dd");
		нПароль = Формат(выборка.ДатаРождения,"ДФ=ddMMyy");
		
		НачатьТранзакцию();
		резСоздания = СоздатьПользователя(Новый Структура("FullName,UserName,Password,Birthdate",нФИО, нЛогин,нПароль, выборка.ДатаРождения));
		ЗафиксироватьТранзакцию();
		

		Если резСоздания = Истина Тогда
			ОбщегоНазначенияБТС.Пауза(4);
			инд = инд + 1;
		Иначе
			//ОбщегоНазначенияБТС.Пауза(1);
		КонецЕсли;
		
		Если инд = 30 тогда 
			//прервать;
			ВызватьИсключение "Продолжим в следующую итерацию";
		Конецесли;
	КонецЦикла;
	
	
КонецФункции	


Функция СоздатьПользователя(вхПараметры) ЭКСПОРТ
	ИмяФЛ			= СокрЛП(вхПараметры.FullName);
	ИмяПользователя = СокрЛП(вхПараметры.UserName);
	Пароль			= СокрЛП(вхПараметры.Password);
	
	ПроверкаНаСуществующегоПользователя = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	Если ПроверкаНаСуществующегоПользователя <> Неопределено Тогда
		сообщить("Указанное ФИО Пользователя уже используется !!! ");
		результ = Ложь;
		Возврат результ;
	КонецЕсли;
	
	
	Если ТипЗнч(вхПараметры.Birthdate) = Тип("Строка") Тогда
		ДатаРождения=Дата(СокрЛП(вхПараметры.Birthdate));
	иначе
		ДатаРождения=вхПараметры.Birthdate;
	КонецЕсли;
	НовоеФЛ = ПолучитьФизЛицо(ИмяФЛ, ДатаРождения);
	
	Если НЕ ЗначениеЗаполнено(НовоеФЛ) Тогда
		месс = ""+ИмяФЛ+" не найден в справочнике ФЛ";
		сообщить(месс);
		//ВызватьИсключение месс;
		Возврат ЛОЖЬ;
	КонецЕсли;
	
	Если ПроверкаНаСуществующегоПользователя = Неопределено Тогда	
		ОписаниеПользователяИБ            = Пользователи.НовоеОписаниеПользователяИБ();
		ПользовательИБСуществует          = Ложь;
		ДоступКИнформационнойБазеРазрешен = Ложь;
		
		// Заполнение начальных значений свойств пользователяИБ.
		ОписаниеПользователяИБ.ПоказыватьВСпискеВыбора   = Истина;
		ОписаниеПользователяИБ.АутентификацияСтандартная = Истина;	
		
		ОписаниеПользователяИБ.Вставить("Действие", "Записать");
		ОписаниеПользователяИБ.Вставить("Имя", ИмяПользователя);
		ОписаниеПользователяИБ.Вставить("Пароль", Пароль);

		НовыйПользователь = Справочники.Пользователи.СоздатьЭлемент();
		НовыйПользователь.Наименование 					= ИмяПользователя;

		НовыйПользователь.ДополнительныеСвойства.Вставить(
			"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
			
		НовыйПользователь.Записать();
		
		ГруппаДоступа = ПолучитьГруппуДоступаПоУмолчанию();
		Если ЗначениеЗаполнено(ГруппаДоступа) тогда
			ГруппаДоступа = ГруппаДоступа.ПолучитьОбъект();
			НоваяСтрока = ГруппаДоступа.Пользователи.Добавить();
			НоваяСтрока.Пользователь = НовыйПользователь.Ссылка;
			ГруппаДоступа.Записать();
		КонецЕсли;
		
		//Заполняем Настрйоки
		//УстановитьДопПрава(НовыйПользователь.Ссылка);
		
		//ПользовательНастроек = Справочники.Пользователи.НайтиПоНаименованию("Михайлова Наталья Викторовна");
		ПользовательНастроек = ПолучитьПользователяБезАдминскихПрав();
		
		Если ЗначениеЗаполнено(ПользовательНастроек) тогда
			КопированиеВсехНастроек(ПользовательНастроек,НовыйПользователь.Ссылка);
		КонецЕсли; 
		
		
		НовыйПользователь.Магазин 		 =  НовоеФЛ.Магазин;
		НовыйПользователь.Подразделение  =  НовоеФЛ.Магазин;
		НовыйПользователь.ФизЛицо 		 =  НовоеФЛ.Ссылка;
		НовыйПользователь.ФизическоеЛицо =  НовоеФЛ.Ссылка;
		НовыйПользователь.Записать();
		
		результ = истина;
	КонецЕсли;
	
	Возврат результ;

КонецФункции

Функция ПолучитьГруппуДоступаПоУмолчанию()
	//возврат Справочники.ГруппыДоступа.НайтиПоНаименованию("ТБК_Кассир");
	возврат Справочники.ГруппыДоступа.НайтиПоНаименованию("Администраторы");
конецФункции

Функция ПолучитьФизЛицо(ИмяФЛ, ДатаРождения)
	
	//НовоеФЛ	=	Справочники.ФизическиеЛица.СоздатьЭлемент();
	//НовоеФЛ.Наименование	=	ИмяФЛ;
	//НовоеФЛ.Сотрудник		=	Истина;
	//НовоеФЛ.Магазин			=	ОбщегоНазначения.ПолучитьМагазин();
	//НовоеФЛ.Пол				=	Перечисления.ПолФизическогоЛица.Мужской;
	//Попытка
	//	НовоеФЛ.ДатаРождения	=	Дата(СокрЛП(вхПараметры.Birthdate));
	//Исключение
	//КонецПопытки;
	//
	//НовоеФЛ.Записать();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК Ссылка,
	               |	ФизическиеЛица.Сотрудник КАК Сотрудник,
	               |	ФизическиеЛица.Магазин КАК Магазин
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |ГДЕ
	               |	ФизическиеЛица.Наименование = &ИмяФЛ
	               |	И ФизическиеЛица.ДатаРождения >= &ДатаРожденияН
	               |	И ФизическиеЛица.ДатаРождения <= &ДатаРожденияК";
	
	Запрос.УстановитьПараметр("ИмяФЛ", ИмяФЛ);
	Запрос.УстановитьПараметр("ДатаРожденияН",НачалоДня(ДатаРождения));
	Запрос.УстановитьПараметр("ДатаРожденияК",КонецДня(ДатаРождения));
	
	
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Следующий() Тогда
		//фикс
		дефМагазин = ОбщегоНазначения.ПолучитьМагазин();
		Если (Рез.Сотрудник) = ЛОЖЬ ИЛИ (Рез.Магазин <> дефМагазин) Тогда
			фл = Рез.Ссылка.ПолучитьОбъект();
			Если ЛОЖЬ Тогда фл = Справочники.ФизическиеЛица.СоздатьЭлемент(); Конецесли;
			фл.Сотрудник=Истина;
			фл.Магазин = дефМагазин;
			фл.ОбменДанными.Загрузка = Истина;
			фл.Записать();
		КонецЕсли;		
		
		Возврат Рез.Ссылка;
	КонецЕсли;
КонецФункции


Функция УстановитьДопПрава(пользователь)
	//Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	//Набор.Отбор.Пользователь.Установить(пользовател);
	
	
	
	//Набор.Записать(Истина);
КонецФункции

Процедура КопированиеВсехНастроек(ПользовательСсылка,ПользовательПриемник)
	Запрос	=	Новый Запрос("ВЫБРАТЬ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Право КАК Право,
	      	 	             |	ЗначенияДополнительныхПравПользователя.Значение КАК Значение
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	      	 	             |ГДЕ
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь");
	Запрос.УстановитьПараметр("Пользователь",ПользовательСсылка);
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Установить(ПользовательПриемник);
	Для каждого Строка из Рез цикл
		НоваяСтрока = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		
		НоваяСтрока.Пользователь = ПользовательПриемник; 
	КонецЦикла;
	Набор.Записать();
КонецПроцедуры

Функция ПолучитьПользователяБезАдминскихПрав()
	Запрос	=	Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	      	 	             |	ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь
	      	 	             |ИЗ
	      	 	             |	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя");
	
	Рез = Запрос.Выполнить().Выгрузить();
	
	Если Рез.Количество()>0 тогда
		Возврат Рез[0].Пользователь;
	КонецЕсли;
КонецФункции
